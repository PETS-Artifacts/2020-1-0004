

<!DOCTYPE html>
<!--[if lt IE 7]>      <html lang="en" class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html lang="en" class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html lang="en" class="no-js lt-ie9"> <![endif]-->
<!--[if IE 9]>         <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if gt IE 9]><!--> <html lang="en" class="no-js"> <!--<![endif]-->
<head>
    <!-- Meta tags -->
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1.0, user-scalable=no">
<link rel="preload" as="font" href="/css/font/3407C1_0_0.woff2" />
<meta name="description" content="We are committed to complying with the Personal Information Protection Act 2004 (Tas) (PIP Act) and the Australian Privacy Principles (APPs) set out in the Privacy Act 1988 (Cth) (the Privacy Act).">
<meta class="swiftype" data-type="string" name="swiftypedescription" content="We are committed to complying with the Personal Information Protection Act 2004 (Tas) (PIP Act) and the Australian Privacy Principles (APPs) set out in the Privacy Act 1988 (Cth) (the Privacy Act).">
<meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">
    <meta property="og:image" content="https://www.spiritoftasmania.com.au/media/712686/flags2.jpg" />
    <meta property="og:title" content="Privacy Policy" />
    <meta property="og:description" content="&amp;nbsp;" />
<meta property="og:url" content="https://www.spiritoftasmania.com.au/terms-and-conditions/privacy-policy" />
    <meta property="og:type" content="website" />
<meta property="og:site_name" content="Spirit of Tasmania" />
<meta property="fb:admins" content="816062769,600371966" />
<meta name="p:domain_verify" content="ffa1130c7e2051917d4952c492767daa" />


    <title>Privacy Policy - Spirit of Tasmania</title>

<!-- Fonts -->

<script src="//use.typekit.net/swl7iel.js"></script>
<script>try { Typekit.load({ async: true }); } catch (e) { }</script>







    <link href="/bundles/css/ibp?v=8pFIau8X39LQYmp0k1ZRKEM2t9d3X9yi_ovj9qtjHcI1" rel="stylesheet"/>

    <link href="/bundles/css/website?v=_9Pc6yQwmFsNChVHOK6XGZz6tNHf5n5W5KH8BuLZZGY1" rel="stylesheet"/>

    <script type="text/javascript">
setTimeout(function(){var a=document.createElement("script");
var b=document.getElementsByTagName("script")[0];
a.src=document.location.protocol+"//script.crazyegg.com/pages/scripts/0026/3180.js?"+Math.floor(new Date().getTime()/3600000);
a.async=true;a.type="text/javascript";b.parentNode.insertBefore(a,b)}, 1);
</script>

    <script type="text/javascript">
    function deferFunctionExecution(runOnLoad) {
        if (window.addEventListener)
            window.addEventListener("load", runOnLoad, false);
        else if (window.attachEvent)
            window.attachEvent("onload", runOnLoad);
        else window.onload = runOnLoad;
    }

    //default target is body otherwise it uses targetId
    function deferScriptExecution(targetId, scriptUrl, onLoadCallBack) {
        function runOnLoad() {
            var script = document.createElement("script"); // Defer script load to improve performance when script unavailable
            script.src = scriptUrl;
            if (!targetId) {
                document.body.appendChild(script);
            }
            else {
                document.getElementById(targetId).appendChild(script);
            }

            if (onLoadCallBack) {
                if (script.readyState) {  //IE
                    script.onreadystatechange = function () {
                        if (script.readyState === "loaded" || script.readyState === "complete") {
                            script.onreadystatechange = null;
                            onLoadCallBack();
                        }
                    };
                } else {  //Others
                    script.onload = onLoadCallBack;
                }
            }
        }

        deferFunctionExecution(runOnLoad);
    }
</script>
    
    


<script>!function(){function o(n,i){if(n&&i)for(var r in i)i.hasOwnProperty(r)&&(void 0===n[r]?n[r]=i[r]:n[r].constructor===Object&&i[r].constructor===Object?o(n[r],i[r]):n[r]=i[r])}try{var n=decodeURIComponent("");if(n.length>0&&window.JSON&&"function"==typeof window.JSON.parse){var i=JSON.parse(n);void 0!==window.BOOMR_config?o(window.BOOMR_config,i):window.BOOMR_config=i}}catch(o){window.console&&"function"==typeof window.console.error&&console.error("mPulse: Could not parse configuration",o)}}();</script>
<script>!function(){function e(e,n){var a=void 0!==window.aFeoApplied?"1":"0";BOOMR.addVar("ak.feo",a)}function n(e,n){var a=["ak.bpcip","ak.cport","ak.cr","ak.csrc","ak.gh","ak.ipv","ak.m","ak.n","ak.ol","ak.proto","ak.quicv","ak.tlsv","ak.0rtt","ak.r","ak.acc"];BOOMR.removeVar(a)}function a(){var a="",o="true"===a;BOOMR.subscribe("before_beacon",e,null,null),BOOMR.addVar({"ak.v":11,"ak.cp":"669853","ak.ai":"438956","ak.ol":"0","ak.cr":5,"ak.ipv":4,"ak.proto":"","ak.rid":"23a1270","ak.r":28247,"ak.a2":o?1:0,"ak.m":"a","ak.n":"","ak.bpcip":"207.241.229.237","ak.cport":59196,"ak.gh":"23.215.10.174","ak.quicv":"","ak.tlsv":"tls1.2","ak.0rtt":"","ak.csrc":"-","ak.acc":"reno"}),BOOMR.subscribe("onbeacon",n,null,null)}var o="https://s.go-mpulse.net/boomerang/";if("False"=="True")window.BOOMR_config=window.BOOMR_config||{},window.BOOMR_config.PageParams=window.BOOMR_config.PageParams||{},window.BOOMR_config.PageParams.pci=!0,o="https://s2.go-mpulse.net/boomerang/";if(function(){function e(e){r.BOOMR_onload=e&&e.timeStamp||(new Date).getTime()}if(!window.BOOMR||!window.BOOMR.version&&!window.BOOMR.snippetExecuted){window.BOOMR=window.BOOMR||{},window.BOOMR.snippetExecuted=!0;var n,a,t,i=document.createElement("iframe"),r=window;if(r.addEventListener)r.addEventListener("load",e,!1);else if(r.attachEvent)r.attachEvent("onload",e);i.src="javascript:void(0)",i.title="",i.role="presentation",(i.frameElement||i).style.cssText="width:0;height:0;border:0;display:none;",t=document.getElementsByTagName("script")[0],t.parentNode.insertBefore(i,t);try{a=i.contentWindow.document}catch(e){n=document.domain,i.src="javascript:var d=document.open();d.domain='"+n+"';void(0);",a=i.contentWindow.document}a.open()._l=function(){var e=this.createElement("script");if(n)this.domain=n;e.id="boomr-if-as",e.src=o+"GE6TL-EWEG2-HLBLV-LGQ2B-KRSRF",BOOMR_lstart=(new Date).getTime(),this.body.appendChild(e)},a.write("<bo"+'dy onload="document._l();">'),a.close()}}(),"".length>0){var t=window;if(t&&"performance"in t&&t.performance&&"function"==typeof t.performance.setResourceTimingBufferSize)t.performance.setResourceTimingBufferSize()}if(document.addEventListener)document.addEventListener("onBoomerangLoaded",a);else if(document.attachEvent)document.attachEvent("onpropertychange",function(e){if(!e)e=window.event;if(e&&"onBoomerangLoaded"===e.propertyName)a()});if(window.addEventListener)window.addEventListener("message",function(e){if(e&&e.data&&e.data.boomr_mq)window.BOOMR_mq=window.BOOMR_mq||[],window.BOOMR_mq.push(e.data.boomr_mq)})}();</script></head>

<body data-spy="scroll" data-target=".scrollspy" class="pg-5524 ">
    <!--[if lt IE 9]>
        <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
    <![endif]-->
    <!-- Google Tag Manager -->
<noscript>
    <iframe src="//www.googletagmanager.com/ns.html?id=GTM-TLFLF7"
            height="0" width="0" style="display:none;visibility:hidden"></iframe>
</noscript>
<script>
    (function (w, d, s, l, i) {
        w[l] = w[l] || []; w[l].push({
            'gtm.start':
            new Date().getTime(), event: 'gtm.js'
        }); var f = d.getElementsByTagName(s)[0],
        j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
        '//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
    })(window, document, 'script', 'dataLayer', 'GTM-TLFLF7');</script>
<!-- End Google Tag Manager -->
    

<!-- Start Visual Website Optimizer Asynchronous Code -->
<script type='text/javascript'>
var _vwo_code=(function(){
var account_id=279155,
settings_tolerance=2000,
library_tolerance=2500,
use_existing_jquery=false,
/* DO NOT EDIT BELOW THIS LINE */
f = false, d = document; return { use_existing_jquery: function () { return use_existing_jquery; }, library_tolerance: function () { return library_tolerance; }, finish: function () { if (!f) { f = true; var a = d.getElementById('_vis_opt_path_hides'); if (a) a.parentNode.removeChild(a); } }, finished: function () { return f; }, load: function (a) { var b = d.createElement('script');b.async=false;b.src=a;b.type='text/javascript';b.innerText;b.onerror=function(){_vwo_code.finish();};d.getElementsByTagName('head')[0].appendChild(b);},init:function(){settings_timer=setTimeout('_vwo_code.finish()',settings_tolerance);var a=d.createElement('style'),b='body{opacity:0 !important;filter:alpha(opacity=0) !important;background:none !important;}',h=d.getElementsByTagName('head')[0];a.setAttribute('id','_vis_opt_path_hides');a.setAttribute('type','text/css');if(a.styleSheet)a.styleSheet.cssText=b;else a.appendChild(d.createTextNode(b));h.appendChild(a);this.load('//dev.visualwebsiteoptimizer.com/j.php?a='+account_id+'&u='+encodeURIComponent(d.URL)+'&r='+Math.random());return settings_timer;}};}());_vwo_settings_timer=_vwo_code.init();
</script>
<!-- End Visual Website Optimizer Asynchronous Code -->

    

<div id="root-container">
    

<header data-ng-app="headerApp" data-ng-controller="headerController" data-ng-cloak data-swiftype-index="false" class="hidden-print">
    <div id="expander-menu" class="wrap">
        <div id="content-area" data-ng-class="{'collapsed': headerViewMode == HeaderViewMode.None}">
            <div class="wrap" style="background: url(/media/713381/ship_status.png)">
                <div class="dismiss" data-ng-click="setHeaderView(HeaderViewMode.None)">

<svg class="icon-custom cross" xmlns="http://www.w3.org/2000/svg" version="1.1" x="0" y="0" viewBox="0 0 19.9 19.9" enable-background="new 0 0 19.9 19.9" xml:space="preserve"><path fill="#C8102E" d="M12.1 10l7.4-7.4c0.6-0.6 0.6-1.5 0-2.1 -0.6-0.6-1.5-0.6-2.1 0L10 7.8 2.6 0.4C2-0.1 1-0.1 0.4 0.4 -0.1 1-0.1 2 0.4 2.6L7.8 10l-7.4 7.4c-0.6 0.6-0.6 1.5 0 2.1 0.3 0.3 0.7 0.4 1.1 0.4s0.8-0.1 1.1-0.4l7.4-7.4 7.4 7.4c0.3 0.3 0.7 0.4 1.1 0.4s0.8-0.1 1.1-0.4c0.6-0.6 0.6-1.5 0-2.1L12.1 10z" /></svg>
                    <a class="button secondary image">Close Ship Status</a>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-md-12 ship-status-search-wrap">
<div class="status-loading" data-ng-show="headerViewMode == HeaderViewMode.SailingStatus && loading">
    <div class="results-loading">
        <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
    </div>
    Retrieving sailings&hellip;
</div>
<div class="feed-error status-loading" data-ng-show="headerViewMode == HeaderViewMode.SailingStatus && feedError && !loading">
    There was an error retrieving our updated time table. Please try again later.
</div>
<div id="ship-status-content" data-ng-class="{'in': headerViewMode == HeaderViewMode.SailingStatus && !loading}" data-ng-show="!loading && !feedError">
    <div class="status-loading" data-ng-if="!hasMelDpoResults() && !hasDpoMelResults()" data-ng-cloak>
        There are currently no scheduled sailings in the next 3 days.
    </div>
    <div class="status-block image" data-ng-if="hasMelDpoResults()">
        <h3>Melbourne to Devonport (MEL to DPO)</h3>
        <div class="content">
            <table>
                <tr>
                    <th>Scheduled sailing</th>
                    <th class="check-in">Check-in</th>
                    <th>Departure</th>
                    <th>Arrival</th>
                </tr>
                <tr data-ng-repeat="sailing in shipStatus.melDpo">
                    <td>{{sailing.departureDateTime | date: 'd MMM yyyy - h:mma'}}</td>
                    <td>{{sailing.checkInStart | date: 'h:mma'}} - {{sailing.checkInEnd | date: 'h:mma'}}</td>
                    <td data-ng-if="!!sailing.estimatedDepartureDateTime" class="diff">{{sailing.estimatedDepartureDateTime | date: 'h:mma'}}</td>
                    <td data-ng-if="sailing.estimatedDepartureDateTime == null">{{sailing.departureDateTime | date: 'h:mma'}}</td>
                    <td data-ng-if="!!sailing.estimatedArrivalDateTime" class="diff">{{sailing.estimatedArrivalDateTime | date: 'h:mma'}}</td>
                    <td data-ng-if="sailing.estimatedArrivalDateTime == null">{{sailing.arrivalDateTime | date: 'h:mma'}}</td>
                </tr>
            </table>
        </div>
    </div>
    <div class="status-block image" data-ng-if="hasDpoMelResults()">
        <h3>Devonport to Melbourne (DPO to MEL)</h3>
        <div class="content">
            <table>
                <tr>
                    <th>Scheduled sailing</th>
                    <th class="check-in">Check-in</th>
                    <th>Departure</th>
                    <th>Arrival</th>
                </tr>
                <tr data-ng-repeat="dpoMelSailing in shipStatus.dpoMel">
                    <td>{{dpoMelSailing.departureDateTime | date: 'd MMM yyyy - h:mma'}}</td>
                    <td>{{dpoMelSailing.checkInStart | date: 'h:mma'}} - {{dpoMelSailing.checkInEnd | date: 'h:mma'}}</td>
                    <td data-ng-if="!!dpoMelSailing.estimatedDepartureDateTime" class="diff">{{dpoMelSailing.estimatedDepartureDateTime | date: 'h:mma'}}</td>
                    <td data-ng-if="dpoMelSailing.estimatedDepartureDateTime == null">{{dpoMelSailing.departureDateTime | date: 'h:mma'}}</td>
                    <td data-ng-if="!!dpoMelSailing.estimatedArrivalDateTime" class="diff">{{dpoMelSailing.estimatedArrivalDateTime | date: 'h:mma'}}</td>
                    <td data-ng-if="dpoMelSailing.estimatedArrivalDateTime == null">{{dpoMelSailing.arrivalDateTime | date: 'h:mma'}}</td>
                </tr>
            </table>
        </div>
    </div>
        <div class="view-time-table">
            <a href="/sailing-fares/sailing-schedule" class="button view-all">
                View timetable
                <svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z"></path></svg>
            </a>
        </div>
</div>

                            <div id="site-search-content" class="site-search-input" data-ng-class="{'in': headerViewMode == HeaderViewMode.Search}">
                                <div class="site-search-input-wrapper">
                                    <form action="/search-results#stq=" id="header-st-search-form" class="st-search-form" method="get">
                                        <input type="text" class="st-search-input">
                                        <button class="swift-type-search-button" title="search" type="submit"><span class="fa fa-search fa-2x"></span></button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <ul class="main-menu">
            <li class="site-search">
                <a id="site-search" href="#" data-ng-class="{'active': headerViewMode == HeaderViewMode.Search}" data-ng-click="setHeaderView(HeaderViewMode.Search)">

<svg xmlns="http://www.w3.org/2000/svg" class="icon-custom search" x="0" y="0" viewBox="0 0.5 12 12" enable-background="new 0 0.5 12 12" xml:space="preserve"><g transform="translate(-1298.000000, -282.000000)"><g transform="translate(0.000000, 271.000000)"><g transform="translate(957.000000, 0.000000)"><path d="M352.7 21.9l-2.5-2.5c0.6-0.9 0.9-1.8 0.9-2.9 0-0.7-0.1-1.3-0.4-2 -0.3-0.6-0.6-1.2-1.1-1.6 -0.5-0.5-1-0.8-1.6-1.1 -0.6-0.3-1.3-0.4-2-0.4 -0.7 0-1.3 0.1-2 0.4 -0.6 0.3-1.2 0.6-1.6 1.1 -0.5 0.5-0.8 1-1.1 1.6 -0.3 0.6-0.4 1.3-0.4 2 0 0.7 0.1 1.3 0.4 2 0.3 0.6 0.6 1.2 1.1 1.6 0.5 0.5 1 0.8 1.6 1.1 0.6 0.3 1.3 0.4 2 0.4 1.1 0 2-0.3 2.9-0.9l2.5 2.5c0.2 0.2 0.4 0.3 0.6 0.3 0.2 0 0.5-0.1 0.6-0.3 0.2-0.2 0.3-0.4 0.3-0.6C353 22.3 352.9 22.1 352.7 21.9L352.7 21.9zM348.4 18.9c-0.6 0.6-1.4 0.9-2.3 0.9 -0.9 0-1.7-0.3-2.3-0.9 -0.6-0.6-0.9-1.4-0.9-2.3 0-0.9 0.3-1.7 0.9-2.3 0.6-0.6 1.4-0.9 2.3-0.9 0.9 0 1.7 0.3 2.3 0.9 0.6 0.6 0.9 1.4 0.9 2.3C349.3 17.5 349 18.2 348.4 18.9L348.4 18.9z" /></g></g></g></svg>
                    Search
                </a>
            </li>
                <li class="ship-status" data-ng-cloak>
                    <a id="ship-status" href="#" data-ng-class="{'active':headerViewMode == HeaderViewMode.SailingStatus}" data-ng-click="setHeaderView(HeaderViewMode.SailingStatus)">
                        <div class="icon">
<svg xmlns="http://www.w3.org/2000/svg" class="icon-custom clock" x="0" y="0" viewBox="0.4 0.5 12 12" enable-background="new 0.4 0.5 12 12" xml:space="preserve"><g transform="translate(-1179.000000, -283.000000)"><g transform="translate(0.000000, 271.000000)"><g transform="translate(957.000000, 0.000000)"><path d="M225.4 13.3c0.9-0.5 1.9-0.8 3-0.8 1.1 0 2.1 0.3 3 0.8 0.9 0.5 1.6 1.3 2.2 2.2 0.5 0.9 0.8 1.9 0.8 3s-0.3 2.1-0.8 3c-0.5 0.9-1.3 1.6-2.2 2.2-0.9 0.5-1.9 0.8-3 0.8-1.1 0-2.1-0.3-3-0.8-0.9-0.5-1.6-1.3-2.2-2.2-0.5-0.9-0.8-1.9-0.8-3s0.3-2.1 0.8-3C223.7 14.6 224.5 13.8 225.4 13.3 225.4 13.3 224.5 13.8 225.4 13.3L225.4 13.3 225.4 13.3zM231.3 15.6c-0.8-0.8-1.8-1.2-2.9-1.2-1.1 0-2.1 0.4-2.9 1.2-0.8 0.8-1.2 1.8-1.2 2.9s0.4 2.1 1.2 2.9c0.8 0.8 1.8 1.2 2.9 1.2 1.1 0 2.1-0.4 2.9-1.2 0.8-0.8 1.2-1.8 1.2-2.9S232.2 16.4 231.3 15.6C231.3 15.6 232.2 16.4 231.3 15.6L231.3 15.6 231.3 15.6zM228.4 18.5h2v1h-3v-4h1V18.5L228.4 18.5z" /></g></g></g></svg></div>
                        Ship Status
                    </a>
                </li>
            <li class="my-booking">
                <!--[if gt IE 9]><!-->
                <a href="/my-booking">
                    <div class="icon">
<svg xmlns="http://www.w3.org/2000/svg" class="icon-custom fare" x="0" y="0" viewBox="-41.6 -23.9 15.2 11.9" enable-background="new -41.6 -23.9 15.2 11.9" xml:space="preserve"><g transform="translate(-1045.000000, -282.000000)"><g transform="translate(0.000000, 271.000000)"><g transform="translate(957.000000, 0.000000)"><path d="M61.6-8.6v-3.3c0-0.6-0.5-1.1-1-1.1H47.4c-0.6 0-1 0.5-1 1.1v3.3c0.8 0 1.5 0.7 1.5 1.6 0 0.9-0.7 1.6-1.5 1.6v3.3c0 0.6 0.5 1.1 1 1.1h13.2c0.6 0 1-0.5 1-1.1v-3.3c-0.8 0-1.5-0.7-1.5-1.6C60.1-7.9 60.8-8.6 61.6-8.6L61.6-8.6zM49.9-11.8h1v1.1h-1V-11.8zM49.9-9.7h1v1.1h-1V-9.7zM49.9-7.5h1v1.1h-1V-7.5zM49.9-5.3h1v1.1h-1V-5.3zM49.9-3.2h1v1.1h-1V-3.2z" /></g></g></g></svg></div>
                    My booking
                </a>
                <!--<![endif]-->
                <!--[if lte IE 9]>
                <a href="/outdated-browser">
                    <div class="icon">
<svg xmlns="http://www.w3.org/2000/svg" class="icon-custom fare" x="0" y="0" viewBox="-41.6 -23.9 15.2 11.9" enable-background="new -41.6 -23.9 15.2 11.9" xml:space="preserve"><g transform="translate(-1045.000000, -282.000000)"><g transform="translate(0.000000, 271.000000)"><g transform="translate(957.000000, 0.000000)"><path d="M61.6-8.6v-3.3c0-0.6-0.5-1.1-1-1.1H47.4c-0.6 0-1 0.5-1 1.1v3.3c0.8 0 1.5 0.7 1.5 1.6 0 0.9-0.7 1.6-1.5 1.6v3.3c0 0.6 0.5 1.1 1 1.1h13.2c0.6 0 1-0.5 1-1.1v-3.3c-0.8 0-1.5-0.7-1.5-1.6C60.1-7.9 60.8-8.6 61.6-8.6L61.6-8.6zM49.9-11.8h1v1.1h-1V-11.8zM49.9-9.7h1v1.1h-1V-9.7zM49.9-7.5h1v1.1h-1V-7.5zM49.9-5.3h1v1.1h-1V-5.3zM49.9-3.2h1v1.1h-1V-3.2z" /></g></g></g></svg></div>
                    My booking
                </a>
                <![endif]-->
            </li>

            <li class="user-status ">
                    <a href="/login">
                        <div class="icon">
<svg xmlns="http://www.w3.org/2000/svg" class="user icon-custom" x="0" y="0" viewBox="20 0 11.5 12" enable-background="new 20 0 11.5 12" xml:space="preserve"><path d="M31.5 12v-0.8c0-2-1.6-3.6-3.6-3.6h-4.3c-2 0-3.6 1.6-3.6 3.6V12H31.5L31.5 12zM25.8 0C27.6 0 29 1.5 29 3.2s-1.5 3.2-3.2 3.2S22.5 5 22.5 3.2 24 0 25.8 0z" /></svg></div>
                        Login
                    </a>
            </li>
        </ul>

        

<div id="mega-menu" class="wrap hidden-print">
    <div class="container-fluid">
        <div class="row primary-bar">
            <div class="col-md-2 logo-col">
                <a href="/" class="home-link">
                    <span>Spirit of Tasmania</span>
                        <img class="brand primary" srcset="/media/712910/sot_logo_stacked_rev_2013_rgb.png?height=40 1x, /media/712910/sot_logo_stacked_rev_2013_rgb.png?height=80 2x" />                            <img class="brand secondary" srcset="/media/713167/logored.png?height=40 1x, /media/713167/logored.png?height=80 2x" />
                </a>
            </div>
            <div id="menu-categories" class="col-md-8 nav-list-container closed">
                <nav>
                    

    <div id="menu-background"></div>
    <ul class="level-2">
        
                    <li class="has-child">
                            <a href="/sailing-fares">Sailing &amp; Fares</a>
            <div class="sublevel">
                <div class="container">
                    <div class="row">
                            <div class="col-md-4">
                                <ul class="level-3">
                                        <li>
                                            <a href="/sailing-fares/fares-explained">
                                                <span class="name">
                                                    Fares Explained

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Find the fare that’s right for you</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/sailing-fares/specials">
                                                <span class="name">
                                                    Specials

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Discover our latest offers and save</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/sailing-fares/sailing-schedule">
                                                <span class="name">
                                                    Sailing Schedule

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Familiarise yourself with our sailing schedule</span>
                                            </a>
                                        </li>
                                </ul>
                            </div>
                            <div class="col-md-4">
                                <ul class="level-3">
                                        <li>
                                            <a href="/sailing-fares/booking-information">
                                                <span class="name">
                                                    Booking Information

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Learn the nuts and bolts of booking</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/sailing-fares/boarding-information">
                                                <span class="name">
                                                    Boarding Information

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">All you need to know about boarding</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/sailing-fares/vehicles-and-bicycles">
                                                <span class="name">
                                                    Vehicles and Bicycles

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Learn more about bringing your wheels on board</span>
                                            </a>
                                        </li>
                                </ul>
                            </div>
                            <div class="col-md-4">
                                <ul class="level-3">
                                        <li>
                                            <a href="/customer-support/faqs">
                                                <span class="name">
                                                    FAQs

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Got a question? Let us answer it for you</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/sailing-fares/booking-information/gift-vouchers">
                                                <span class="name">
                                                    Gift Vouchers

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">After the perfect gift idea? Why not give the gift of travel?</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/sailing-fares/day-sailings-winter">
                                                <span class="name">
                                                    Day Sailings

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">All the fun and frivolities on offer during the day</span>
                                            </a>
                                        </li>
                                </ul>
                            </div>
                    </div>
                </div>
            </div>
                    </li>
                    <li class="has-child">
                            <a href="/onboard-experience">Onboard Experience</a>
            <div class="sublevel">
                <div class="container">
                    <div class="row">
                            <div class="col-md-4">
                                <ul class="level-3">
                                        <li>
                                            <a href="/onboard-experience/accommodation">
                                                <span class="name">
                                                    Accommodation

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">We have a range of options to suit your needs</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/onboard-experience/dining-bars">
                                                <span class="name">
                                                    Dining &amp; Bars

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Check out our new dining and lounge areas</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/onboard-experience/cinemas">
                                                <span class="name">
                                                    Cinemas

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Catch a flick in one of our two onboard cinemas</span>
                                            </a>
                                        </li>
                                </ul>
                            </div>
                            <div class="col-md-4">
                                <ul class="level-3">
                                        <li>
                                            <a href="/onboard-experience/kids-activities">
                                                <span class="name">
                                                    Kids Activities

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">There’s fun for kids of all ages</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/onboard-experience/facilities">
                                                <span class="name">
                                                    Facilities

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Check out our facilities onboard</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/onboard-experience/special-requests">
                                                <span class="name">
                                                    Special Requests

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Let us know how we can assist</span>
                                            </a>
                                        </li>
                                </ul>
                            </div>
                            <div class="col-md-4">
                                <ul class="level-3">
                                        <li>
                                            <a href="/onboard-experience/whats-on-board-this-month">
                                                <span class="name">
                                                    What&#39;s on Board?

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Check out what&#39;s on board this month</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/onboard-experience/flavours-of-tassie">
                                                <span class="name">
                                                    Flavours of Tassie

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">A bite of the Apple Isle on board</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/onboard-experience/about-the-ship">
                                                <span class="name">
                                                    About the Ship

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                                                </span>
                                                <span class="description">Get to know the story of the Spirit</span>
                                            </a>
                                        </li>
                                </ul>
                            </div>
                    </div>
                </div>
            </div>
                    </li>
                    <li class="has-child">
                            <a href="/destinations">Destinations</a>
            <div class="sublevel">
                <div class="container">
                    <div class="row">
                            <div class="col-md-12">
                                <div class="row">
                                        <div class="col-md-6">
                                            <ul class="level-3">
                                                <li>
                                                    <a href="/destinations/tasmania" class="destination" style="background: url(/media/715783/tasmania_herobanner_2000x400px_100417.jpg)">
                                                        <div class="overlay"></div>
                                                        <h3 class="name text-shadow">
                                                            <span class="mini-title">
                                                                Explore
                                                            </span>
                                                            Tasmania 
                                                        </h3>
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="col-md-6">
                                            <ul class="level-3">
                                                <li>
                                                    <a href="/destinations/victoria" class="destination" style="background: url(/media/712925/melbourne.jpg)">
                                                        <div class="overlay"></div>
                                                        <h3 class="name text-shadow">
                                                            <span class="mini-title">
                                                                Explore
                                                            </span>
                                                            Victoria 
                                                        </h3>
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                </div>
                            </div>
                    </div>
                </div>
            </div>
                    </li>
                    <li>
                            <a href="/loyalty-program">Loyalty Program</a>
                    </li>
                    <li>
                            <a href="/blog">Blog</a>
                    </li>
    </ul>
    <ul class="level-2-collapsible">
                    <li>
                            <a href="#1139" data-toggle="collapse" role="button" aria-expanded="false" aria-controls="collapseExample">
                                Sailing &amp; Fares
                                
<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                            </a>
                            <div class="collapse" id="1139">
                                <ul class="level-3-collapsible">
                                            <li><a href="/sailing-fares/fares-explained">Fares Explained</a></li>
                                            <li><a href="/sailing-fares/specials">Specials</a></li>
                                            <li><a href="/sailing-fares/sailing-schedule">Sailing Schedule</a></li>
                                            <li><a href="/sailing-fares/booking-information">Booking Information</a></li>
                                            <li><a href="/sailing-fares/boarding-information">Boarding Information</a></li>
                                            <li><a href="/sailing-fares/vehicles-and-bicycles">Vehicles and Bicycles</a></li>
                                            <li><a href="/customer-support/faqs">FAQs</a></li>
                                            <li><a href="/sailing-fares/booking-information/gift-vouchers">Gift Vouchers</a></li>
                                            <li><a href="/sailing-fares/day-sailings-winter">Day Sailings</a></li>
                                </ul>
                            </div>
                    </li>
                    <li>
                            <a href="#1147" data-toggle="collapse" role="button" aria-expanded="false" aria-controls="collapseExample">
                                Onboard Experience
                                
<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                            </a>
                            <div class="collapse" id="1147">
                                <ul class="level-3-collapsible">
                                            <li><a href="/onboard-experience/accommodation">Accommodation</a></li>
                                            <li><a href="/onboard-experience/dining-bars">Dining &amp; Bars</a></li>
                                            <li><a href="/onboard-experience/cinemas">Cinemas</a></li>
                                            <li><a href="/onboard-experience/kids-activities">Kids Activities</a></li>
                                            <li><a href="/onboard-experience/facilities">Facilities</a></li>
                                            <li><a href="/onboard-experience/special-requests">Special Requests</a></li>
                                            <li><a href="/onboard-experience/whats-on-board-this-month">What&#39;s on Board?</a></li>
                                            <li><a href="/onboard-experience/flavours-of-tassie">Flavours of Tassie</a></li>
                                            <li><a href="/onboard-experience/about-the-ship">About the Ship</a></li>
                                            <li><a href="/onboard-experience/wi-fi">Wi-Fi</a></li>
                                            <li><a href="/onboard-experience/pressreader">PressReader</a></li>
                                </ul>
                            </div>
                    </li>
                    <li>
                            <a href="#1154" data-toggle="collapse" role="button" aria-expanded="false" aria-controls="collapseExample">
                                Destinations
                                
<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                            </a>
                            <div class="collapse" id="1154">
                                <ul class="level-3-collapsible">
                                            <li><a href="/destinations/tasmania">Tasmania </a></li>
                                            <li><a href="/destinations/victoria">Victoria </a></li>
                                </ul>
                            </div>
                    </li>
                    <li>
                            <a href="/loyalty-program">Loyalty Program</a>
                    </li>
                    <li>
                            <a href="/blog">Blog</a>
                    </li>
    </ul>



                </nav>
                <div id="mobile-site-search" class="site-search-input">
                    <gcse:searchbox-only></gcse:searchbox-only>
                </div>
            </div>
            <div class="col-md-2 cta-col clearfix">
                <div id="mobile-menu-toggle" class="closed"><span class="cross">&times;</span> Menu</div>

<!--[if gt IE 9]><!-->
<a href="/book" class="button find-a-fare">
    Find a Fare

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
</a>
<!--<![endif]-->

<!--[if lte IE 9]>
<a href="/outdated-browser" class="button find-a-fare-no-prevent-default">
    Find a Fare

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
</a>
<![endif]-->
            </div>
        </div>
    </div>
</div>


    </div>
</header>


    <div id="content">
        

<div class="template-variant ">


<div id="sub-hero">
    <picture>
<img srcset="/media/712686/flags2.jpg" alt="">
</picture>


    <div class="overlay"></div>

        <h1>Privacy Policy</h1>
</div>
    




    <div id="subnav" data-swiftype-index="false">
        <ul>
                                <li>
                                    <a href="/terms-and-conditions/pensioner-eligibility" class="nav ">
                                        Pensioner Eligibility
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/pets-and-kennels" class="nav ">
                                        Pets and Kennels
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/special-needs" class="nav ">
                                        Special Needs
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/terms-and-conditions-of-refunds" class="nav ">
                                        Terms and Conditions of Refunds
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/privacy-statement" class="nav ">
                                        Privacy Statement
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/conditions-of-carriage" class="nav ">
                                        Conditions of Carriage
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/gift-vouchers" class="nav ">
                                        Gift vouchers
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/terms-of-use" class="nav ">
                                        Terms of use
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/privacy-policy" class="nav active">
                                        Privacy Policy
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/carriage-of-dangerous-goods" class="nav ">
                                        Carriage of dangerous goods
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/competitions" class="nav ">
                                        Competitions
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/additional-information" class="nav ">
                                        Additional information
                                    </a>
                                </li>
                                <li>
                                    <a href="/terms-and-conditions/card-payment-fees" class="nav ">
                                        Card Payment Fees
                                    </a>
                                </li>
        </ul>
    </div>






<div id="grid-body">
    <div class="container">
        <div class="row">
            <div class="col-md-offset-1 col-md-10 grid-container">
                
    <div class="umb-grid">
                <div class="grid-section">
    <div >
        <div class='container'>
        <div class="row clearfix">
            <div class="col-md-12 column">
                <div >
                            
    <div class="container centered">
    <div class="row">
        <div class="col-md-12">
            <div class="grid-rich-text-editor-card card">
                <div class="row">
                    <div class="col-md-12">
                        <h2></h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <h3>1. Overview</h3>
<p>We are committed to complying with the <em>Personal Information Protection Act 2004 </em>(Tas) (“PIP Act”) and the Australian Privacy Principles (“APPs”) set out in the provisions of the <em>Privacy Act 1988 </em>(Cth) (“Privacy Act”).</p>
<p>This Privacy Policy outlines how we manage and secure your personal information.</p>
<p> </p>
<h3>2. Scope of this policy</h3>
<p><span>This policy applies to your personal information and includes information about individuals but not companies or other commercial entities.</span></p>
<p><span>This policy does not contain information on how we manage personal information collected in connection with a credit application or credit facility. Please refer to the Credit Reporting Policy.</span></p>
<p> </p>
<h3>3. Privacy Officer</h3>
<p><span>Our Privacy Officer is responsible for ensuring that this policy and our privacy procedures are fully implemented and working effectively.</span></p>
<p><span>The Privacy Officer is the first point of contact for all privacy concerns raised. You can contact the Privacy Officer in accordance with Section 20 of this Privacy Policy.</span></p>
<p> </p>
<h3>4. Privacy Policy</h3>
<p><span>The Privacy Policy is available in hard copy form on request by contacting the Privacy Officer.</span></p>
<p><span>You should read this Privacy Policy (as well as the Conditions of Carriage) before you provide us with any personal information.</span></p>
<p><span>Our website is regularly updated for any changes to this Privacy Policy.</span></p>
<p> </p>
<h3>5. The types of information that we collect, hold and process</h3>
<p>The categories of information that we collect, hold and process about you include (but are not limited to):</p>
<ol>
<li><strong>Personal information</strong>
<ul>
<li>identification information including, your name, postal or email address, phone number or fax number;</li>
<li>images or photographs of you obtained through CCTV filming whilst on board the Spirit of Tasmania or at the terminal;</li>
<li>your billing details which may include details such as your name, address and credit card information;</li>
<li>your vehicle registration information; and</li>
<li>any other information that we consider to be reasonably</li>
</ul>
</li>
</ol>
<ol start="2">
<li><strong>Technical data</strong></li>
</ol>
<p>Online identifiers, including cookie identifiers, internet protocol addresses, device identifiers,  client identifiers, mobile carriers, time zone settings and operating systems. Information on cookies may be found in section 7.5 below.</p>
<ol start="3">
<li><strong>Statistical data</strong></li>
</ol>
<p>Customer information is also used to derive anonymous statistical data (such as the number of passengers) and is processed solely for analytical purposes.</p>
<ol start="4">
<li><strong>Sensitive information</strong></li>
</ol>
<p>We may collect some sensitive information about you, including health information (e.g. in the case of a medical emergency). Please see section 18 below for more information.</p>
<ol start="5">
<li><strong>Website activity</strong></li>
</ol>
<p>We collect information relating to your use of our website.</p>
<ol start="6">
<li><strong>Information required by law</strong></li>
</ol>
<p>We may collect personal information about you because the collection of the information is required or authorised by law or a court/tribunal order.</p>
<ol start="7">
<li><strong>Social media</strong></li>
</ol>
<p>We may view demographics of users of our social media (for example, users’ gender and location etc.) but we do not collect this information for any other use.</p>
<p> </p>
<h3>6. Purposes for collection of Personal Information</h3>
<p><span>We collect, hold, use and disclose personal information for the following purposes:</span></p>
<ol>
<li>to conduct functions and activities as a passenger, vehicle and freight service and agent of travel insurance providers;</li>
<li>to personalise and tailor our information, services or products for you ;</li>
<li>to identify whom we are communicating with;</li>
<li>to inform you of further information relating to our services or products, or to our website;</li>
<li>to keep track of website domain names from which individuals visit our website – we analyse this data for trends and statistics;</li>
<li>to facilitate your transfer in the event of a medical emergency;</li>
<li>to assist you or your financial institution to verify purchases;</li>
<li>for sales and marketing research purposes;</li>
<li>for marketing and promotional purposes;</li>
<li>for profiling and targeted marketing purposes;</li>
<li>for analytical purposes;</li>
<li>to post photographs of customers on social media websites;</li>
<li>for administration purposes;</li>
<li>to comply with any applicable laws;</li>
<li>for emergency purposes;</li>
<li>to monitor CCTV footage to detect / prevent fraud and / or other criminal activity; <span>and</span></li>
<li>any other purpose for which you consent.</li>
</ol>
<h3>7. Where personal information is collected from</h3>
<p><br /> <br /> <strong>7.1 From you (or your authorised representative)</strong></p>
<p><span>Where possible, we collect personal information from: </span></p>
<ol>
<li><span>you; or </span></li>
<li><span>persons whom you have authorised to provide us with your personal information on your behalf,</span></li>
</ol>
<p><span>when either you or your authorised representative gives us this information, for example, over the telephone, in person or via our website.</span></p>
<p><span>Where you make bookings on behalf of another person, it is your obligation to ensure that the person you are making the booking for has authorised the disclosure of their personal information to us and understands and agrees to the terms of this Privacy Policy.</span></p>
<p><span>Generally, we do not need to collect any personal information when you just visit our website. You have the option to deal with us anonymously where it is lawful and practicable to do so. For example, you can visit our website without telling us who you are or revealing other personal information.</span></p>
<p> </p>
<p><strong>7.2 From other sources</strong></p>
<p><span>Sometimes we collect personal information about you from other sources where it is necessary to do so.  This may happen where:</span></p>
<ol>
<li>you have consented to the collection of the information;</li>
<li>we are required or authorised by law to collect the information; or</li>
<li>it is unreasonable or impracticable to collect the information from you</li>
</ol>
<p><span>Examples of other sources that we may collect personal information from include, but are not limited to:</span></p>
<ol>
<li>travel agents;</li>
<li>sporting teams/clubs;</li>
<li>social clubs; and</li>
<li>event</li>
</ol>
<p><strong>7.3 Unsolicited personal information</strong></p>
<p><span>If we collect personal information about you that we did not ask for, we will check whether we could have collected that information ourselves. If we could have collected the information, we will handle it in the same way we handle other information we collect from you.</span></p>
<p><span>If:</span></p>
<ol>
<li>we could not have collected the personal information; and</li>
<li>the information is not contained in a Commonwealth record (as defined in the <em>Archives Act 1983</em> (Cth)),</li>
</ol>
<p><span>we will destroy the information or de-identify the information provided it is lawful and reasonable to do so.</span></p>
<p> </p>
<p><strong>7.4 General principles</strong></p>
<p><span>If we need to collect personal information, then we will operate by the following principles:</span></p>
<ol>
<li>we will expressly ask you for that personal You may decline to provide the requested personal information however we may not be able to provide you with the requested services; and</li>
<li>if you agree to provide that personal information, we will use your personal information in accordance with this Privacy Policy</li>
</ol>
<p> </p>
<p><strong>7.5 Cookies</strong></p>
<p>We use cookies on our website for analytical purposes and to improve user experience. Cookies are text files placed in your computer’s browser to store your preferences. These cookies collect information on how you and other visitors use our website. We use cookies to measure marketing activity, monitor website usage and for other online statistical and analytical purposes to ensure our website remains relevant and to improve our users’ experience.</p>
<p>We may also use cookies for targeting and tracking purposes to understand your interests and behaviours when you browse our website so we can deliver a personalised experience to you. This may also help us to deliver advertising relevant to you when we run advertising campaigns on third party websites.</p>
<p>We use Google Analytics in accordance with section 7.6 below. By using our website you consent to the processing of your personal information by Google in accordance with Google’s policy which can be found at the following link: <span><a href="https://www.google.com/policies/privacy/partners/">www.google.com/policies/privacy/partners/</a></span></p>
<p>To opt out of Google Analytics’ use of cookies, an add on is available at the following link:</p>
<p><span><a href="https://tools.google.com/dlpage/gaoptout">https://tools.google.com/dlpage/gaoptout</a></span></p>
<p>We use the Facebook pixel to measure the effectiveness of our advertising. The Facebook pixel is a piece of code which lets us measure, optimise and build audiences for our advertising campaigns.  We use the Facebook pixel to measure the performance of our ads, optimise the delivery of our ads to our customers and customise our website for our customers.</p>
<p>Third parties including Facebook may use cookies, web beacons and other storage technologies to collect or receive information from our website and elsewhere on the internet and use that information to provide measurement services and target ads. By using our website or clicking our ads you consent to the processing of your personal information by Facebook in accordance with Facebook’s terms and conditions which can be found at the following link: <span><a href="https://www.facebook.com/legal/terms/businesstools">https://www.facebook.com/legal/terms/businesstools</a></span></p>
<p>To opt-out of collection and use of your information for ad targeting, a browser tool is available at the following link: <a href="http://l.facebook.com/l.php?u=http%3A%2F%2Fwww.aboutads.info%2Fchoices&amp;h=AT21jXXdLJsgK4EQI7ShKkMQmm2R27hgolQ9wRDUWtjj-p4ubZf_GpLIwIMTFQvdzk_qun2x4hd_rB2UOJBWI4C2kQ28zcyyCr0WkXYyimzofdpSFv4yTbV8-VHuuD_p6QUDiJTxbB3ZAvEf69GWDQ">http://www.aboutads.info/choices</a>.</p>
<p>If you do not wish to use cookies, you can manage or control them by changing your settings in your internet browser.</p>
<p>We may change our use of cookies from time to time. We encourage you to check this policy regularly for updates.</p>
<p> </p>
<p><strong>7.6 Google Analytics</strong></p>
<p>We use Google Analytics, a website analysis service provided by Google LLC to better understand our customers and provide targeted advertising to suit our customer’s interests and preferences.</p>
<p>We also use Google Analytics to measure marketing activity and monitor website usage and other online statistical and analytical data. This enables us to generate detailed statistics about traffic to our website, traffic sources and how users interact with our website and third party websites. We also measure and record conversions and sales.</p>
<p>The information collected includes how often users visit our website, what links they click, the user’s IP address, geolocation, browser and operating system and what other sites a user visited before coming to our website.</p>
<p>The information collected by Google Analytics is governed by Google Analytics’ Terms of Service, which can be found at the following link:</p>
<p><span><a href="https://www.google.com/analytics/terms/us.html">https://www.google.com/analytics/terms/us.html</a></span></p>
<p>Further information about how Google Analytics collects and processes your personal information can be found at the following link:</p>
<p><span><a href="https://policies.google.com/technologies/partner-sites">https://policies.google.com/technologies/partner-sites</a></span></p>
<p> </p>
<h3>8.  Use and Disclosure of Personal Information</h3>
<p>We may <span>only use and disclose your personal information for the purposes it was collected unless:</span></p>
<ol>
<li>you consent to the use or disclosure of the information for another purpose;</li>
<li>the access, use or disclosure is otherwise permitted under the Privacy Act and the PIP Act; or</li>
<li>you would reasonably expect us to use or disclose the information for another purpose (e.g. disclosing personal information to a travel agent for the purpose of procuring travel insurance for you).</li>
</ol>
<p> </p>
<p><strong>8.1 Disclosing personal information to third parties</strong></p>
<p><span>Sometimes we may disclose personal information about you to third parties. Examples of third parties that we may disclose your personal information to include, but are not limited to:</span></p>
<ol>
<li>our nominated travel insurance provider;</li>
<li>travel agencies, marketing agencies and our other marketing service providers;</li>
<li>our research agencies conducting research;</li>
<li>emergency services;</li>
<li>Biosecurity Tasmania or any other applicable quarantine authority;</li>
<li>as required or authorised by law or a court/tribunal order;</li>
<li>the third parties listed in section 11 below; and</li>
<li>any other person where you have given your consent.</li>
</ol>
<p><span>We may disclose your photograph on social media websites but we will seek your consent first.</span></p>
<p> </p>
<p><strong>8.2 Disclosure</strong></p>
<p><span>Where your personal information is disclosed, we will take reasonable steps to ensure that the information is held, used or disclosed consistently with the Privacy Act (including the APPs), the PIP Act and any other applicable laws.</span></p>
<p><span>If you tell us that you do not wish to have your personal information used for a particular purpose, we will not use that personal information for that purpose unless required by law or for law enforcement purposes. Please note however that this may mean we are not able to provide the requested services to you.</span></p>
<p><span>We will co-operate with all law enforcement bodies in providing personal information when requested to do so.</span></p>
<p> </p>
<h3>9. Sales and Direct Marketing</h3>
<p><span>We may use or disclose personal information (excluding sensitive information) for sales and direct marketing purposes.</span></p>
<p><span>If at any time  you decide that you do not want to receive any more marketing material from us, you may:</span></p>
<ol>
<li>contact the Privacy Officer at <span><a href="mailto:privacy@spiritoftasmania.com.au">privacy@spiritoftasmania.com.au</a></span> (for non-members); or</li>
<li>opt-out of receiving any more marketing material via any opt-out mechanism contained in our marketing emails or via your member page (for members).</li>
</ol>
<p><span>Our marketing materials display a clearly visible and user-friendly opt-out option.  We may infer that consent to receive marketing material has been given where. this opt-out option is not chosen.</span></p>
<p><span>All personal information held on any sales and marketing databases will be permanently destroyed or made anonymous within a reasonable time period following receipt of an opt-out notice or a request to be removed from the database.</span></p>
<p> </p>
<h3>10. Online Loyalty Program and electronic mailing lists</h3>
<p><strong>Information Collected</strong></p>
<p><span>If you opt-in to our loyalty program including the Sailors Club and Frequent Travellers or any of our electronic mailing lists, we will collect the following personal information about you:</span></p>
<ol>
<li>identification information including, your name, postal or email address, phone number or fax number; and</li>
<li>your booking information to track travel history.</li>
</ol>
<p><strong><span>Opt-Out/Unsubscribe</span></strong></p>
<p><span>You can easily opt-out of our loyalty program or unsubscribe from any of our electronic mailing lists by contacting us using the contact details specified in Section 20 of this Privacy Policy or by following the opt-out/unsubscribe mechanism contained in any of our correspondence. </span></p>
<p> </p>
<h3>11. Cross-Border Disclosure of Personal Information</h3>
<p><span>We are based in Australia and your personal information will be transmitted to our offices and appointed agents within Australia.</span></p>
<p><span>In some circumstances we may need to disclose personal information about you to recipients outside Australia, including to our:</span></p>
<ol>
<li>overseas Protection and Indemnity Club located in the United Kingdom;</li>
<li>electronic data storage provider currently located in the United States;</li>
</ol>
<p><span>We may store your personal information in cloud or via other types of electronic data storage.  As data storage can be accessed from various countries via an internet connection, it is not</span><span> always practicable for us to know what country your personal information may be held in. As such, disclosures may sometimes occur in countries other than those listed above.</span></p>
<p><span>Before we disclose your personal information to any overseas recipient, we will take reasonable steps to ensure that the overseas recipient complies with the APPs in relation to the information, unless one of the exemptions in the Privacy Act   applies.</span></p>
<p><span> </span></p>
<h3>12. Law Enforcement</h3>
<p><span>The PIP Act, and Privacy Act are not intended to interfere with legal obligations to disclose information for law enforcement and regulatory purposes.</span></p>
<p><span>We have a procedure for using and disclosing personal information for the purpose of investigating and reporting suspected unlawful activity to the relevant authorities.</span></p>
<p><span>A written record of the disclosure is required, including the date of the disclosure, the personal information disclosed, the relevant law enforcement body and how the information was used, or to whom the information was disclosed.</span></p>
<p> </p>
<h3>13. Emergencies and Disasters</h3>
<p><span>In the event of an emergency or where we deem it necessary, your name and address will be provided to any authorities and/or agencies that assist in dealing with any such emergency or disaster.</span></p>
<p><span>By booking and travelling with us, you are deemed to consent to the disclosure of this information to such authorities and/or agencies in such circumstances.</span></p>
<p> </p>
<h3>14. Quality of Personal Information</h3>
<p><span>We will take reasonable steps to ensure that any personal information we collect, use or disclose is accurate, complete, up-to-date and relevant to our functions or activities.</span></p>
<p><span>If you believe that your personal information is not accurate, complete or up to date, please contact the Privacy Officer in accordance with paragraph 20 of this policy.</span></p>
<p> </p>
<h3>15. Security of Personal Information</h3>
<p><span>We store your personal information in different ways, including in paper and electronic form and via third party data storage providers.</span></p>
<p><span>We treat all personal information as confidential. We will take all reasonable steps to ensure that personal information is protected from:</span></p>
<ol>
<li>misuse, interference and loss; and</li>
<li>unauthorised access, modification or</li>
</ol>
<p>Some of the ways we do this are by:</p>
<ol>
<li>continuing to develop and monitor security measures in order to decrease the risk of unauthorised access to personal information;</li>
<li>continuing to engage information systems support to maintain computer and network security, including access control for authorised users, data integrity checks, network intrusion systems, host intrusion detection systems and expert monitoring;</li>
<li>providing a discrete environment for confidential discussions; and</li>
<li>protecting its file servers by access privileges and</li>
</ol>
<p><span>In addition, we take the following measures to ensure that personal information on our website is protected, including:</span></p>
<ol>
<li>having electronic website security systems in place, including the use of secure hypertext transfer protocol, network intrusion protection and segregated virtual private networks; and</li>
<li>defining and controlling user access to ensure that access to personal information is only granted where the individual seeking access is authorised to do</li>
</ol>
<p><span>If we no longer need the personal information for any purpose for which it may be used or disclosed by us, we will take reasonable steps to destroy or permanently make anonymous the information, unless:</span></p>
<ol>
<li>it is contained in a Commonwealth record (as defined in the <em>Archives Act 1983</em> (Cth)); or</li>
<li>we are required by law, or a court/tribunal order, to retain the</li>
</ol>
<p><span>Permanent anonymity means that we are not able to match the anonymous information with other records to re-establish the identity of individuals.</span></p>
<p><span>Permitted destruction of personal information must occur by a secure means. Paper based records are shredded or disposed of securely by an authorised disposal company. Electronic records are overwritten before being deleted.</span></p>
<p> </p>
<h3>16. Access to personal information</h3>
<p><span>You have a legal right to access personal information we hold about you, unless an exception in the Privacy Act and the PIP Act applies.</span></p>
<p><span>Factors affecting a right to access include:</span></p>
<ol>
<li>access would pose a serious threat to the life or health of any individual;</li>
<li>access would have an unreasonable impact on the privacy of others;</li>
<li>a frivolous or vexatious request;</li>
<li>the information relates to existing or anticipated legal proceedings between us and you, and would not be accessible by the process of discovery in those proceedings;</li>
<li>access would reveal our intentions in relation to negotiations with the individual in such a way as to prejudice those negotiations;</li>
<li>access would be unlawful;</li>
<li>denying access is required or authorised by or under any law or a court/tribunal order;</li>
<li>access would prejudice the taking of appropriate action in relation to unlawful activity or serious misconduct relating to our functions or activities;</li>
<li>access would be likely to prejudice a law enforcement related activity; or</li>
<li>access would reveal evaluative information generated within our business in connection with a commercially sensitive decision-making</li>
</ol>
<p> </p>
<p><span>You can request an electronic copy of your personal information by contacting our Privacy Officer in accordance with section 20 of this policy.</span></p>
<p><span>You do not have to give a reason when asking for access to your personal information. </span></p>
<p><span>We will respond to a request for access within a reasonable time (usually within 30 days), and may give access in the manner requested, if it is reasonable and practicable to do so. We may need to verify your identity before we give you access to your personal information.</span></p>
<p><span>If we refuse to grant you access, then we will:</span></p>
<ol>
<li>take reasonable steps to give you access in a way that meets our needs as well as yours;</li>
<li>provide you with written reasons for the refusal provided it is reasonable to do so; and</li>
<li>provide you with the mechanisms available to complain about the refusal.</li>
</ol>
<p><span>Depending on the nature of the request, we may charge you a reasonable fee to access that information.</span></p>
<p><span>You may request us to provide our source of the personal information. If you do so, we will, within a reasonable period after the request is made, (usually within 30 days) notify you of the source unless it is impracticable or unreasonable to do so.</span></p>
<p> </p>
<h3>17. Correction of Personal Information</h3>
<p><span>You may make a request to correct personal information held by us if you think any of the personal information we hold about you is incorrect, incomplete, out-of-date, irrelevant or misleading by contacting the Privacy Officer in accordance with section 20 of this policy.</span></p>
<p><span>If we hold personal information about an individual and we are made aware that the information may be incorrect, out-of-date, incomplete, irrelevant or misleading, we will take reasonable steps to correct that information, having regard to the purpose for which the information is held.</span></p>
<p><span>If we refuse to correct the personal information, then we will provide you with:</span></p>
<ol>
<li>written reasons for the refusal provided it is reasonable to do so; and</li>
<li>the mechanisms available to complain about the</li>
</ol>
<p><span>We will respond to a correction request within a reasonable time (usually within 30 days). We may need to verify your identity before we correct any personal information.</span></p>
<p> </p>
<h3>18. Sensitive Information</h3>
<p>We generally try to limit the circumstances where we collect your sensitive information, which includes information about a person’s ethnic origin, political opinions, religious or philosophical beliefs or affiliations, membership of a profession or trade association, membership of a trade union, details of health, disability, sexual orientation or criminal record.</p>
<p>However, we do collect health information for the purposes of our accident/illness reports and as required or permitted by health and safety laws. Health information is regarded as sensitive and as such, is treated as highly confidential. Health information is only accessible to authorised persons for permitted purposes and is not entered on any reservations, sales or marketing databases.</p>
<p>If this information is collected, you will be told of the purpose of collection by the relevant officer at the point of collection.</p>
<p>We will not collect sensitive information about you unless you consent and that information is reasonably necessary for our functions or an exemption in the Privacy Act or the PIP Act applies. Such circumstances would usually only be in an emergency or when the person had lost consciousness and collection is necessary to prevent or lessen a serious and imminent threat to life, health or safety of any individual or to public health or safety.</p>
<h2> </h2>
<h3>19. Minors</h3>
<p>Our website is not intended to be used by children under the age of 16 and we cannot ascertain the age of persons who use our website.</p>
<p>If a minor (according to applicable laws) has provided personal information to us without the consent of a parent or guardian, that parent or guardian should contact us at the details provided in section 20 and may request us to remove this information.</p>
<p>If we become aware that a minor has provided us with their personal information without the consent of a parent or guardian, we will delete their personal information.</p>
<h2> </h2>
<h3>20. Who we are and how you can contact us</h3>
<p>TT-Line Company Pty Ltd is the legal name of the company (i.e. the legal entity) which holds your personal information.</p>
<p>We are registered in Tasmania, Australia with ACN: 061 996 174.</p>
<p>Our contact details are as follows:<br /> <br /> <strong><u>Postal address</u></strong><u>:</u></p>
<p>Spirit of Tasmania<br /> PO Box 168E<br /> East Devonport Tasmania 7310<br /> <br /> <strong>Telephone/Fax (general enquiries):</strong><br /> <br /> Phone: 1800 634 906 (in Australia)<br /> Phone: +61 3 6419 9320 (International)<br /> Fax: 1800 636 110</p>
<p>If you are deaf or have a hearing impairment or speech impairment, you can contact us through the National Relay Service.</p>
<ul>
<li>TTY users phone 1800 555 677 then ask for 1800 634 906;</li>
<li>Speak and Listen users phone 1800 555 727 then ask for 1800 634 906;</li>
<li>Internet relay users connect to the NRS then ask for 1800 634 906.</li>
</ul>
<p><strong><u>Privacy related queries:<br /> </u></strong></p>
<p>For any questions about this Privacy Policy or if you would like any more information, you can contact our Privacy Officer:</p>
<p><strong><span>Privacy Officer</span></strong></p>
<p><span>Telephone: (03) 6419 9073 </span></p>
<p><span>Postal address: PO Box 168E East Devonport Tasmania 7310</span></p>
<p><span>Email: <u><a href="mailto:privacy@spiritoftasmania.com.au">privacy@spiritoftasmania.com.au</a></u></span></p>
<p><span> </span></p>
<p><strong><u><span>How to complain:</span></u></strong></p>
<p><span>If you have any complaints about data privacy, please contact our Privacy Officer at the contact details above.</span></p>
<p><span>If our Privacy Officer is unable to resolve the matter, we will escalate it as appropriate to facilitate resolution.</span></p>
<p><span>If you are not happy with the outcome of the Privacy Officer’s investigation or if we have not replied to you within a reasonable time, then you can raise your concern with the Tasmanian Ombudsman or the Office of the Australian Information Commissioner (<strong>OAIC</strong>).</span></p>
<p><strong><u><span>Tasmanian Ombudsman</span></u></strong></p>
<p><span>Complaints can be made to the Tasmanian Ombudsman in the following ways:</span></p>
<p><span>Telephone:</span> 1800 001 170</p>
<p><span>Email:</span> <span><a href="mailto:ombudsman@ombudsman.tas.gov.au">ombudsman@ombudsman.tas.gov.au</a></span></p>
<p><span>Mail:</span> GPO Box 960, Hobart 7001 TAS</p>
<p><span>Online: <a href="https://secure.justice.tas.gov.au/ombudsman_resolve_update/ombudsman_complaint_form">https://secure.justice.tas.gov.au/ombudsman_resolve_update/ombudsman_complaint_form</a></span></p>
<p><span> </span></p>
<p><span>Complaints can be made to the OAIC in the following ways:</span></p>
<p> </p>
<p><strong><span>OAIC</span></strong></p>
<p><span>Telephone: 1300 363 992 </span></p>
<p><span>Email: <a href="mailto:enquiries@oaic.com.au">enquiries@oaic.com.au</a></span></p>
<p><span>Mail: Office of the Australian Information Commissioner GPO Box 5218 Sydney NSW 2001</span></p>
<p><span>Online: <a href="http://www.oaic.gov.au/privacy/making-a-privacy-complaint">www.oaic.gov.au/privacy/making-a-privacy-complaint</a></span></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

                </div>
            </div>        </div>
        </div>
    </div>
                </div>
    </div>



            </div>
        </div>
    </div>
</div>
</div>

    </div>
    




<footer class="hidden-print lazy-image" data-src="/media/712894/footer.jpg" data-swiftype-index="false">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="leading-paragraph">
                            <h2 class="lead">Sign up to our newsletter</h2>
                            <p class="lead">Be the first to find out about our special offers, competitions and giveaways.</p>



<div id="join-travel-club-footer-app" class="footer-cta">
    <form class="form-inline newsletter-signup-form" data-ng-submit="submit()" data-ng-controller="signupController">
        <div data-ng-if="requestInfo.replyReceived && requestInfo.hasOtherError" data-ng-cloak>{{requestInfo.errorMessage}}</div>
        <div class="lead" data-ng-if="requestInfo.replyReceived && !requestInfo.preexistingMember && !requestInfo.hasOtherError" data-ng-cloak><i class="fa fa-thumbs-up fa-3x"></i><br /> Thank you for signing up to Spirit of Tasmania&#39;s newsletter!</div>
        <div class="lead" data-ng-if="requestInfo.preexistingMember" data-ng-cloak>Looks like you signed up previously. Don&#39;t worry we&#39;ve still got you!</div>
        <div data-ng-if="!requestInfo.replyReceived || requestInfo.hasOtherError">
            <input class="form-control" placeholder="First Name" data-ng-model="userInfo.firstName" data-ng-disabled="requestInfo.processingRequest" required />
            <input class="form-control" placeholder="Last Name" data-ng-model="userInfo.lastName" data-ng-disabled="requestInfo.processingRequest" required />
            <select class="form-control" placeholder="State" data-ng-model="userInfo.state" data-ng-options="item for item in stateList" data-ng-disabled="requestInfo.processingRequest" required>
                <option value="" disabled hidden>State</option>
            </select>
            <input type="email" class="form-control" placeholder="Email Address" data-ng-model="userInfo.emailAddress" data-ng-disabled="requestInfo.processingRequest" required />
            <button type="submit" class="button secondary image sign-up-form-button" data-ng-if="!requestInfo.processingRequest">Sign Up Now</button>
            <button type="submit" class="button secondary image sign-up-form-button" data-ng-if="requestInfo.processingRequest" data-ng-cloak>
                <i class="fa fa-spin fa-spinner"></i>
            </button>
        </div>
    </form>
</div>
                </div>
            </div>
        </div>
    </div>
    <div class="container list-links">
        <div class="row">


    <div class="col-md-5ths hidden-print">
                <strong>Sailing &amp; Fares</strong>
        <ul>
                <li>
                    <a href="/sailing-fares/fares-explained" class="nav">Fares Explained</a>
                </li>
                <li>
                    <a href="/sailing-fares/specials" class="nav">Specials</a>
                </li>
                <li>
                    <a href="/sailing-fares/sailing-schedule" class="nav">Sailing Schedule</a>
                </li>
                <li>
                    <a href="/sailing-fares/booking-information" class="nav">Booking Information</a>
                </li>
                <li>
                    <a href="/sailing-fares/boarding-information" class="nav">Boarding Information</a>
                </li>
                <li>
                    <a href="/sailing-fares/vehicles-and-bicycles" class="nav">Vehicles and Bicycles</a>
                </li>
                <li>
                    <a href="/customer-support/faqs" class="nav">FAQs</a>
                </li>
                <li>
                    <a href="/sailing-fares/booking-information/gift-vouchers" class="nav">Gift Vouchers</a>
                </li>
                <li>
                    <a href="/sailing-fares/day-sailings-winter" class="nav">Day Sailings</a>
                </li>
        </ul>
    </div>
    <div class="col-md-5ths hidden-print">
                <strong>Onboard Experience</strong>
        <ul>
                <li>
                    <a href="/onboard-experience/accommodation" class="nav">Accommodation</a>
                </li>
                <li>
                    <a href="/onboard-experience/dining-bars" class="nav">Dining &amp; Bars</a>
                </li>
                <li>
                    <a href="/onboard-experience/cinemas" class="nav">Cinemas</a>
                </li>
                <li>
                    <a href="/onboard-experience/kids-activities" class="nav">Kids Activities</a>
                </li>
                <li>
                    <a href="/onboard-experience/facilities" class="nav">Facilities</a>
                </li>
                <li>
                    <a href="/onboard-experience/special-requests" class="nav">Special Requests</a>
                </li>
                <li>
                    <a href="/onboard-experience/whats-on-board-this-month" class="nav">What&#39;s on Board?</a>
                </li>
                <li>
                    <a href="/onboard-experience/flavours-of-tassie" class="nav">Flavours of Tassie</a>
                </li>
                <li>
                    <a href="/onboard-experience/about-the-ship" class="nav">About the Ship</a>
                </li>
                <li>
                    <a href="/onboard-experience/wi-fi" class="nav">Wi-Fi</a>
                </li>
                <li>
                    <a href="/onboard-experience/pressreader" class="nav">PressReader</a>
                </li>
        </ul>
    </div>
    <div class="col-md-5ths hidden-print">
                <strong>Destinations</strong>
        <ul>
                <li>
                    <a href="/destinations/tasmania" class="nav">Tasmania </a>
                </li>
                <li>
                    <a href="/destinations/victoria" class="nav">Victoria </a>
                </li>
        </ul>
                <strong>Loyalty Program</strong>
        <ul>
                <li>
                    <a href="/account" class="nav">Account</a>
                </li>
                <li>
                    <a href="/loyalty-program/join-the-sailors-club" class="nav">Join the Sailors Club</a>
                </li>
                <li>
                    <a href="/loyalty-program/newsletter-signup" class="nav">Newsletter Signup</a>
                </li>
        </ul>
    </div>
    <div class="col-md-5ths hidden-print">
                <strong>Customer Support</strong>
        <ul>
                <li>
                    <a href="/customer-support/contact-us" class="nav">Contact Us</a>
                </li>
                <li>
                    <a href="/customer-support/freight" class="nav">Freight</a>
                </li>
                <li>
                    <a href="/customer-support/payment-information" class="nav">Payment Information</a>
                </li>
                <li>
                    <a href="/customer-support/faqs" class="nav">FAQs</a>
                </li>
                <li>
                    <a href="/customer-support/brochures" class="nav">Request a Brochure</a>
                </li>
        </ul>
    </div>
    <div class="col-md-5ths hidden-print">
                <strong>Company Information</strong>
        <ul>
                <li>
                    <a href="/company-information/media" class="nav">Media</a>
                </li>
                <li>
                    <a href="/company-information/sponsorship-requests" class="nav">Sponsorship Requests</a>
                </li>
                <li>
                    <a href="/company-information/corporate-information" class="nav">Corporate Information</a>
                </li>
                <li>
                    <a href="/company-information/jobs" class="nav">Jobs At Spirit of Tasmania</a>
                </li>
                <li>
                    <a href="/company-information/advertise-on-board" class="nav">Advertise on board</a>
                </li>
        </ul>
    </div>
    <div class="footer-navigation-collapsible hidden-print">
                <a role="button" data-toggle="collapse" href="#footer1139" aria-expanded="false" aria-controls="footer1139">
                    <strong>Sailing &amp; Fares</strong>

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                </a>
                <div class="collapse" id="footer1139">
                    <ul>
                                <li>
                                    <a href="/sailing-fares/fares-explained">
                                        Fares Explained
                                    </a>
                                </li>
                                <li>
                                    <a href="/sailing-fares/specials">
                                        Specials
                                    </a>
                                </li>
                                <li>
                                    <a href="/sailing-fares/sailing-schedule">
                                        Sailing Schedule
                                    </a>
                                </li>
                                <li>
                                    <a href="/sailing-fares/booking-information">
                                        Booking Information
                                    </a>
                                </li>
                                <li>
                                    <a href="/sailing-fares/boarding-information">
                                        Boarding Information
                                    </a>
                                </li>
                                <li>
                                    <a href="/sailing-fares/vehicles-and-bicycles">
                                        Vehicles and Bicycles
                                    </a>
                                </li>
                                <li>
                                    <a href="/customer-support/faqs">
                                        FAQs
                                    </a>
                                </li>
                                <li>
                                    <a href="/sailing-fares/booking-information/gift-vouchers">
                                        Gift Vouchers
                                    </a>
                                </li>
                                <li>
                                    <a href="/sailing-fares/day-sailings-winter">
                                        Day Sailings
                                    </a>
                                </li>
                    </ul>

                </div>
                <a role="button" data-toggle="collapse" href="#footer1147" aria-expanded="false" aria-controls="footer1147">
                    <strong>Onboard Experience</strong>

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                </a>
                <div class="collapse" id="footer1147">
                    <ul>
                                <li>
                                    <a href="/onboard-experience/accommodation">
                                        Accommodation
                                    </a>
                                </li>
                                <li>
                                    <a href="/onboard-experience/dining-bars">
                                        Dining &amp; Bars
                                    </a>
                                </li>
                                <li>
                                    <a href="/onboard-experience/cinemas">
                                        Cinemas
                                    </a>
                                </li>
                                <li>
                                    <a href="/onboard-experience/kids-activities">
                                        Kids Activities
                                    </a>
                                </li>
                                <li>
                                    <a href="/onboard-experience/facilities">
                                        Facilities
                                    </a>
                                </li>
                                <li>
                                    <a href="/onboard-experience/special-requests">
                                        Special Requests
                                    </a>
                                </li>
                                <li>
                                    <a href="/onboard-experience/whats-on-board-this-month">
                                        What&#39;s on Board?
                                    </a>
                                </li>
                                <li>
                                    <a href="/onboard-experience/flavours-of-tassie">
                                        Flavours of Tassie
                                    </a>
                                </li>
                                <li>
                                    <a href="/onboard-experience/about-the-ship">
                                        About the Ship
                                    </a>
                                </li>
                                <li>
                                    <a href="/onboard-experience/wi-fi">
                                        Wi-Fi
                                    </a>
                                </li>
                                <li>
                                    <a href="/onboard-experience/pressreader">
                                        PressReader
                                    </a>
                                </li>
                    </ul>

                </div>
                <a role="button" data-toggle="collapse" href="#footer1154" aria-expanded="false" aria-controls="footer1154">
                    <strong>Destinations</strong>

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                </a>
                <div class="collapse" id="footer1154">
                    <ul>
                                <li>
                                    <a href="/destinations/tasmania">
                                        Tasmania 
                                    </a>
                                </li>
                                <li>
                                    <a href="/destinations/victoria">
                                        Victoria 
                                    </a>
                                </li>
                    </ul>

                </div>
                <a role="button" data-toggle="collapse" href="#footer3258" aria-expanded="false" aria-controls="footer3258">
                    <strong>Loyalty Program</strong>

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                </a>
                <div class="collapse" id="footer3258">
                    <ul>
                                <li>
                                    <a href="/account">
                                        Account
                                    </a>
                                </li>
                                <li>
                                    <a href="/loyalty-program/join-the-sailors-club">
                                        Join the Sailors Club
                                    </a>
                                </li>
                                <li>
                                    <a href="/loyalty-program/newsletter-signup">
                                        Newsletter Signup
                                    </a>
                                </li>
                    </ul>

                </div>
                <a role="button" data-toggle="collapse" href="#footer1160" aria-expanded="false" aria-controls="footer1160">
                    <strong>Customer Support</strong>

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                </a>
                <div class="collapse" id="footer1160">
                    <ul>
                                <li>
                                    <a href="/customer-support/contact-us">
                                        Contact Us
                                    </a>
                                </li>
                                <li>
                                    <a href="/customer-support/freight">
                                        Freight
                                    </a>
                                </li>
                                <li>
                                    <a href="/customer-support/payment-information">
                                        Payment Information
                                    </a>
                                </li>
                                <li>
                                    <a href="/customer-support/faqs">
                                        FAQs
                                    </a>
                                </li>
                                <li>
                                    <a href="/customer-support/brochures">
                                        Request a Brochure
                                    </a>
                                </li>
                    </ul>

                </div>
                <a role="button" data-toggle="collapse" href="#footer1161" aria-expanded="false" aria-controls="footer1161">
                    <strong>Company Information</strong>

<svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9.3 14.4" enable-background="new 0 0 9.3 14.4" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.3 7.2L0.4 2.5c-0.5-0.5-0.5-1.2 0-1.7l0.4-0.4c0.5-0.5 1.3-0.5 1.8 0l5.8 5.6c0 0 0 0 0 0l0.4 0.4c0.2 0.2 0.4 0.6 0.4 0.9 0 0.3-0.1 0.6-0.4 0.9L8.5 8.5c0 0 0 0 0 0l-5.8 5.6c-0.5 0.5-1.3 0.5-1.8 0l-0.4-0.4c-0.5-0.5-0.5-1.2 0-1.7L5.3 7.2z" /></svg>
                </a>
                <div class="collapse" id="footer1161">
                    <ul>
                                <li>
                                    <a href="/company-information/media">
                                        Media
                                    </a>
                                </li>
                                <li>
                                    <a href="/company-information/sponsorship-requests">
                                        Sponsorship Requests
                                    </a>
                                </li>
                                <li>
                                    <a href="/company-information/corporate-information">
                                        Corporate Information
                                    </a>
                                </li>
                                <li>
                                    <a href="/company-information/jobs">
                                        Jobs At Spirit of Tasmania
                                    </a>
                                </li>
                                <li>
                                    <a href="/company-information/advertise-on-board">
                                        Advertise on board
                                    </a>
                                </li>
                    </ul>

                </div>
    </div>



        </div>
        <div class="row misc">
            <div class="col-md-4 company-details">
                ABN: 39 061 996 174<br />
                TT-Line Company PTY LTD &copy; 2018
            </div>
            <div class="col-md-4 social-media">


    <a class="nav" href="https://twitter.com/spiritoftas" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" class="twitter" x="0" y="0" viewBox="0 0 30 24.4" enable-background="new 0 0 30 24.4" xml:space="preserve"><path d="M30 2.9c-1.1 0.5-2.3 0.8-3.5 1 1.3-0.8 2.2-2 2.7-3.4 -1.2 0.7-2.5 1.2-3.9 1.5C24.2 0.7 22.6 0 20.8 0c-3.4 0-6.2 2.8-6.2 6.2 0 0.5 0.1 1 0.2 1.4C9.7 7.3 5.1 4.9 2.1 1.1 1.6 2 1.3 3.1 1.3 4.2c0 2.1 1.1 4 2.7 5.1C3 9.3 2 9 1.2 8.6v0.1c0 3 2.1 5.5 4.9 6 -0.5 0.1-1.1 0.2-1.6 0.2 -0.4 0-0.8 0-1.2-0.1 0.8 2.4 3.1 4.2 5.8 4.3 -2.1 1.7-4.8 2.6-7.6 2.6 -0.5 0-1 0-1.5-0.1 2.7 1.7 6 2.8 9.4 2.8C20.8 24.4 27 15 27 6.9c0-0.3 0-0.5 0-0.8C28.1 5.2 29.2 4.1 30 2.9z" /></svg></a>

    <a class="nav" href="https://www.facebook.com/spiritoftasmania" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" class="facebook" x="0" y="0" viewBox="0 0 13.1 25.2" enable-background="new 0 0 13.1 25.2" xml:space="preserve"><path d="M12.4 13.7l0.6-4.5H8.5V6.4c0-1.3 0.4-2.2 2.2-2.2l2.4 0v-4C12.7 0.1 11.3 0 9.6 0 6.2 0 3.9 2.1 3.9 5.9v3.3H0v4.5h3.9v11.5h4.6V13.7H12.4z" /></svg></a>


    <a class="nav" href="https://instagram.com/spiritoftas" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" class="instagram" x="0" y="0" viewBox="0 0 23.3 23.3" enable-background="new 0 0 23.3 23.3" xml:space="preserve"><path d="M3 0h17.3c1.6 0 3 1.3 3 3v17.3c0 1.6-1.3 3-3 3H3c-1.6 0-3-1.3-3-3V3C0 1.3 1.3 0 3 0zM16.9 2.6c-0.6 0-1 0.5-1 1v2.5c0 0.6 0.5 1 1 1h2.6c0.6 0 1-0.5 1-1V3.6c0-0.6-0.5-1-1-1H16.9zM20.6 9.8h-2c0.2 0.6 0.3 1.3 0.3 2 0 3.9-3.2 7-7.2 7 -4 0-7.2-3.1-7.2-7 0-0.7 0.1-1.4 0.3-2H2.6v9.8c0 0.5 0.4 0.9 0.9 0.9h16.2c0.5 0 0.9-0.4 0.9-0.9V9.8zM11.7 7.1c-2.6 0-4.7 2-4.7 4.5 0 2.5 2.1 4.5 4.7 4.5 2.6 0 4.7-2 4.7-4.5C16.3 9.1 14.2 7.1 11.7 7.1z" /></svg></a>

    <a class="nav" href="https://www.youtube.com/user/spiritoftassie" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" class="youtube" x="0" y="0" viewBox="0 0 21 25.5" enable-background="new 0 0 21 25.5" xml:space="preserve"><path d="M8.3 0H6.9l-1 3.7L4.9 0H3.4C3.7 0.9 4 1.8 4.3 2.7 4.8 4 5 5 5.2 5.7v3.9h1.4V5.7L8.3 0zM12.1 7.2V4.7c0-0.8-0.1-1.3-0.4-1.7 -0.4-0.5-0.9-0.7-1.5-0.7 -0.6 0-1.1 0.2-1.5 0.7C8.5 3.4 8.3 4 8.3 4.7v2.5c0 0.8 0.1 1.3 0.4 1.7 0.4 0.5 0.9 0.7 1.5 0.7 0.6 0 1.1-0.2 1.5-0.7C12 8.5 12.1 8 12.1 7.2zM10.8 7.5c0 0.7-0.2 1-0.6 1 -0.4 0-0.6-0.3-0.6-1v-3c0-0.7 0.2-1 0.6-1 0.4 0 0.6 0.3 0.6 1V7.5zM16.9 9.5V2.4h-1.3v5.4c-0.3 0.4-0.6 0.6-0.8 0.6 -0.2 0-0.3-0.1-0.3-0.3 0 0 0-0.2 0-0.5V2.4h-1.3V8c0 0.5 0 0.8 0.1 1.1 0.1 0.4 0.4 0.5 0.8 0.5 0.5 0 1-0.3 1.5-0.9v0.8H16.9zM13.2 17.7v3c0 0.6 0 0.9-0.4 0.9 -0.2 0-0.5-0.1-0.5-0.3V17c0-0.2 0.3-0.3 0.5-0.3C13.2 16.7 13.2 17 13.2 17.7zM18.3 17.7v0.8H17v-0.8c0-0.6 0.2-1 0.6-1C18 16.7 18.3 17 18.3 17.7zM20.7 13.1c-0.3-1.1-1.2-1.9-2.3-2.1 -2.6-0.3-5.3-0.3-7.9-0.3 -2.6 0-5.3 0-7.9 0.3 -1.1 0.1-2 0.9-2.3 2.1C0 14.7 0 16.5 0 18.1c0 1.6 0 3.4 0.4 5 0.3 1.1 1.2 1.9 2.3 2.1 2.6 0.3 5.2 0.3 7.9 0.3 2.6 0 5.3 0 7.9-0.3 1.1-0.1 2-0.9 2.3-2.1 0.4-1.6 0.4-3.3 0.4-5C21 16.5 21 14.7 20.7 13.1zM6.1 14.8H4.4v8H3.1v-8H1.5v-1.7h4.6V14.8zM9.9 22.7H8.6v-0.8c-0.4 0.6-1 0.9-1.5 0.9 -0.4 0-0.8-0.2-0.9-0.5 -0.1-0.2-0.2-0.5-0.2-1v-5.6h1.3v5.2c0 0.3 0.1 0.5 0.1 0.5 0 0.2 0.2 0.3 0.3 0.3 0.3 0 0.4-0.2 0.8-0.6v-5.4h1.3V22.7zM14.5 20.6c0 0.6 0.1 1.1 0 1.4 -0.2 0.5-0.4 0.8-0.9 0.8 -0.5 0-0.8-0.3-1.2-0.8v0.7h-1.3v-9.7h1.3v3.3c0.4-0.5 0.8-0.8 1.2-0.8 0.5 0 0.7 0.3 0.9 0.8 0.1 0.3 0 0.7 0 1.4V20.6zM19.5 19.4H17v1.3c0 0.7 0.2 1 0.6 1 0.3 0 0.5-0.2 0.6-0.5 0-0.1 0-0.5 0-0.9h1.3v0.2c0 0.4 0 0.7 0 0.8 0 0.3-0.2 0.5-0.3 0.8 -0.4 0.5-0.9 0.8-1.5 0.8 -0.7 0-1.1-0.2-1.5-0.7 -0.3-0.4-0.4-0.9-0.4-1.6v-2.5c0-0.8 0.1-1.3 0.4-1.7 0.4-0.5 0.9-0.7 1.5-0.7 0.6 0 1.2 0.2 1.5 0.7 0.3 0.4 0.4 0.9 0.4 1.7V19.4z" /></svg></a>


            </div>
            <div class="col-md-4 credit-cards">
                <img src="/images/website/acceptedCreditCards.png" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 back-to-top-wrap">
                <div class="back-to-top">
                    <a href="" class="nav">
                        Back to top
                        <svg xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 14.4 9.3" enable-background="new 0 0 14.4 9.3" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.9 0.4c0.5-0.5 1.2-0.5 1.7 0l0.4 0.4c0.5 0.5 0.5 1.3 0 1.8L8.5 8.4c0 0 0 0 0 0L8.1 8.9C7.8 9.2 7.5 9.3 7.2 9.3c-0.3 0-0.6-0.1-0.9-0.4L5.9 8.5c0 0 0 0 0 0L0.4 2.6c-0.5-0.5-0.5-1.3 0-1.8l0.4-0.4c0.5-0.5 1.2-0.5 1.7 0l4.7 4.9L11.9 0.4z" /></svg>
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="container terms-links">
        <div class="row">
            <div class="col-md-12">
                <ul>
                            <li><a href="/terms-and-conditions" class="nav">Terms and Conditions</a></li>
                            <li><a href="/terms-and-conditions/terms-of-use" class="nav">Terms of Use</a></li>
                            <li><a href="/terms-and-conditions/privacy-policy" class="nav">Privacy Policy</a></li>
                    <li class="company-details-terms">
                        ABN: 39 061 996 174<br />
                        TT-Line Company PTY LTD &copy; 2018
                    </li>
                </ul>
            </div>
        </div>
    </div>
</footer>

</div>




<script type="text/javascript">
    var IbpCms = {
        
        headerSummaryReturnTipText: 'Planning to return? Booking your return trip now may increase your chances of finding vehicle availability and cheaper fares',
        headerSummaryAddReturnTrip: 'Add return trip',
        
        searchWidgetPensionerTooltip: 'Click on the help icon for eligibility',
        searchWidgetPetTooltip: 'Click on the help icon for details',
        searchWidgetVehicleTooltip: 'Vehicle includes standard cars, motorbikes, motorhome / campervans, pushbikes and towed units',
        searchWidgetRestartWorkflowFromSearchStep: 'This will take you back to the start and we\'ll need to recheck the price and availability of your booking details.',
        
        vehiclesBookMotorhomeAsCarError: 'Please select Motorhome / Campervan as the make of your vehicle',
        vehiclesLightTruckError: 'To book a light truck (excluding utes and vans), please complete a <a href="/customer-support/freight/freight-quote">freight quote form</a> or phone 1800 988 895. For utes and vans, please select the "Car, 4WD, Trailer or Caravan" option.',
        vehiclesLoadedRoofRackTooltip: 'Loaded roof rack (including pods). Only select this option if overall height will exceed 2.1 metres. Please note there is no extra charge',
        vehiclesLoadedBikeRackTooltip: 'Vehicle with bicyle rack, tow bar or nudge bar.',
        vehiclesVehicleIncompleteButtonPlaceholder: 'Please ensure all details are completed to continue',
        vehiclesFifthWheelerNotice: 'Please phone 13 20 10 before departing to confirm your boarding process',
        vehiclesTrailerDescription: 'Including boat trailer, box trailer etc. (Excludes camper trailer - book as caravan)',
        vehiclesVehiclesSoldOutInAmendments: 'The vehicles that you selected are sold out. Please remove or edit the vehicles to continue.',
        vehiclesPushbikesSoldOutInAmendments: 'The number of bicycles that you selected are sold out. Please reduce the number or choose different options.',
        vehiclesRestartWorkflowFromVehiclesStep: 'This will take you back to the %LEGOFJOURNEY% vehicle selection step and we\'ll need to recheck the price and availability of your booking details.',
        vehicleCannotBookMotorisedVehicleWithBicycle: 'To book a vehicle and a bicycle together you\'ll need to use a bike rack on the vehicle. Alternatively give us a call on 1800 988 895.',
        
        fareSelectionFirstTimeMessage: 'That date looks good, but feel free to shop around',
        fareSelectionTotalMinimumPriceTooltip: 'This price is based on the following accommodation:',
        fareSelectionLowCarSpaceAvailableTooltip: 'All hope is not lost! There is still space available for a car that is no more than 5m in length and 2.1m in height. Alternatively, you can try a different date.',
        farePensionersSoldOutContextualHelpText: 'Pensioner fares are unavailable on this sailing. You can continue to book at adult prices or choose a different sailing',
        farePensionersSoldOutMiniBreakdownText: 'Pensioner fares are sold out',
        farePensionersUnavailableText: 'Pensioner fare unavailable',
        fareAccommodationBoxNameDeluxe: 'Deluxe Cabin',
        fareAccommodationBoxNamePorthole2: 'Twin Bed Porthole Cabin',
        fareAccommodationBoxNamePorthole4: 'Four Bed Porthole Cabin',
        fareAccommodationBoxNameLimited4: 'Four Bed Porthole Cabin (Limited View)',
        fareAccommodationBoxNameInside: 'Four Bed Inside Cabin',
        fareAccommodationBoxNameSharedFemale: 'Female Shared Cabin',
        fareAccommodationBoxNameSharedMale: 'Male Shared Cabin',
        fareAccommodationBoxNameRecliner: 'Recliner',
        fareAccommodationBoxNameDay: 'Day Ticket',
        fareAccommodationBoxNameKennel: 'Kennel',
        fareTotalMinimumPrice: 'Total minimum recommended price for your %LEGOFJOURNEY% sailing including accommodation is',
        fareDescriptionNewBookingWithoutVehicle: 'Prices shown are for passengers only.',
        fareDescriptionNewBookingWithVehicle: 'Prices shown are for passengers and vehicles only.',
        fareDescriptionAmendment: 'Prices shown are the all-inclusive price difference from your existing booking for this sailing.',
        fareAdditionalDescription: 'Prices may fluctuate and are not guaranteed until payment is processed.',
        fareDealAvailableText: 'Possible %DEALORDEALS% Available',
        fareTriedToSelectProductThatDoesntExistError: 'There was a problem with availability. You will need to start again.',
        fareForcedPriceChangeOnProductLoadInAmendments: 'Due to availability your sailing prices have changed. If you want to return to your original prices you can "Undo all changes".',
        fareForcedPriceChangeOnProductLoadInAmendmentsFromFlexi: 'You originally booked this sailing on a Flexi fare and we\'ve moved you to the cheapest available fare. If you\'d like to get back onto Flexi, press "Undo all changes" or change "Showing Cheapest" to "Flexi Fares Only".',
        fareRequiresAccommodationChangesToSelectSailingInAmendments: 'Unfortunately your selected accommodation is not available on this sailing. Click continue to select alternative accommodation.',
        fareNotManyPlacesLeftAtThisPriceMessage: 'Fewer than 10 places left at this price',
        numberOfPeopleViewing: '%NUMBER% people are interested in these dates',
        onePersonViewing: 'One person is interested in these dates',
        
        accommodationDayTicketsFlavourText: 'Our Day Tickets give you the freedom to move around the ship as you please, without a seat allocation or cabin.',
        accommodationPetKennelsFlavourText: 'If travelling with a pet, it is a requirement that your pet travels in a Spirit of Tasmania kennel.',
        accommodationNotEnoughPeople: 'You don\'t have enough people to book this cabin.',
        accommodationNoDayTicketsForNightSailings: 'Day Tickets are only available on day sailings.',
        accommodationDisplayNameDeluxe: 'Deluxe Cabin',
        accommodationDisplayNamePorthole2: 'Porthole Private Cabin',
        accommodationDisplayNamePorthole4: 'Porthole Private Cabin',
        accommodationDisplayNamePortholeLimited4: 'Porthole Private Cabin',
        accommodationDisplayNameInside: 'Inside Private Cabin',
        accommodationDisplayNameSharedFemale: 'Female Shared Cabin',
        accommodationDisplayNameSharedMale: 'Male Shared Cabin',
        accommodationDisplayNameRecliner: 'Recliner',
        accommodationDisplayNameDay: 'Day Ticket',
        accommodationDisplayNameKennel: 'Pets and Kennels',
        accommodationDisplayNameWheelchairAccessible3BerthCabin: 'Private Cabin (Wheelchair Access)',
        accommodationDisplayNameWheelchairAccessibleOceanRecliner: 'Recliner (Wheelchair Access)',
        accommodationFeatureShowerForPrivateRoomDisplayName: 'Private Shower',
        accommodationFeatureShowerForSharedRoomDisplayName: 'Shower',
        accommodationFeatureWindowDisplayName: 'Window',
        accommodationFeatureTwinWindowDisplayName: 'Twin Windows',
        accommodationFeatureTvDisplayName: 'TV',
        accommodationFeatureQueenBedDisplayName: 'Queen Bed',
        accommodationFeatureTwoSingleBedsDisplayName: '2 Single Beds',
        accommodationFeatureBunkBedsDisplayName: 'Bunk Beds',
        accommodationFeatureCotDisplayName: 'Cot Provided',
        accommodationFeatureNoCotDisplayName: 'No Cots',
        accommodationFeatureCotSoldOutDisplayName: 'Cots Sold Out',
        accommodationFeatureMalesDisplayName: 'Males',
        accommodationFeatureNoMalesDisplayName: 'No Males',
        accommodationFeatureMaleChildrenAccompaniedDisplayName: 'Children Accompanied',
        accommodationFeatureFemalesDisplayName: 'Females',
        accommodationFeatureNoFemalesDisplayName: 'No Females',
        accommodationFeatureFemaleChildrenAccompaniedDisplayName: 'Children Accompanied',
        accommodationFeatureNoInfantsDisplayName: 'No Infants',
        accommodationFeatureLegRoomDisplayName: '2ft Leg Room',
        accommodationFeatureLimitedViewDisplayName: 'Limited View',
        accommodationSpiritTipCotSoldOut: 'Cots are sold out for this particular sailing. To book a cabin with a cot try checking for availability on a different date.',
        accommodationTypeDescriptionDeluxe: '1 bed per cabin',
        accommodationTypeDescriptionPorthole2: '2 beds per cabin',
        accommodationTypeDescriptionPorthole4: '4 beds per cabin',
        accommodationTypeDescriptionInside: '4 beds per cabin',
        accommodationTypeDescriptionSharedFemale4Berth: '4 beds per cabin',
        accommodationTypeDescriptionSharedFemale2Berth: '2 beds per cabin',
        accommodationTypeDescriptionSharedMale4Berth: '4 beds per cabin',
        accommodationTypeDescriptionSharedMale2Berth: '2 beds per cabin',
        accommodationTypeDescriptionRecliner: '1 recliner per passenger',
        accommodationTypeDescriptionDay: '1 ticket per passenger',
        accommodationTypeDescriptionKennel: '',
        accommodationUnitTextCabins: 'cabin',
        accommodationUnitTextShareds: 'bed',
        accommodationUnitTextRecliners: 'recliner',
        accommodationUnitTextTickets: 'ticket',
        accommodationUnitTextKennels: 'kennel',
        accommodationModalIntroTextDeluxe: 'Sail in style in a luxurious Deluxe Cabin. Suitable for two adults, these cabins are located at the front of the ship, with large double porthole windows allowing you to take in the spectacular views ahead.',
        accommodationModalIntroTextPorthole2: 'Journey across Bass Strait in secluded comfort in a Twin Bed Porthole Private Cabin, suitable for two passengers.',
        accommodationModalIntroTextPorthole4: 'Lie back with the family or a group of friends with a view of the stars and the moonlight in our cosy Four Bed Porthole Private Cabins.',
        accommodationModalIntroTextInside: 'With comfortable bunk beds accommodating up to four people, our Four Bed Inside Private Cabins are ideal for a family or a group of friends.',
        accommodationModalIntroTextMaleSharedTwoShare: 'Perfect for solo travellers on a budget, these Shared Cabins accommodate up to two male passengers and allow for a comfortable, restful journey across the Strait.',
        accommodationModalIntroTextMaleSharedFourShare: 'Perfect for solo travellers on a budget, these Shared Cabins accommodate up to four male passengers and allow for a comfortable, restful journey across the Strait.',
        accommodationModalIntroTextFemaleSharedTwoShare: 'Perfect for solo travellers on a budget, these Shared Cabins accommodate up to two female passengers and allow for a comfortable, restful journey across the Strait.',
        accommodationModalIntroTextFemaleSharedFourShare: 'Perfect for solo travellers on a budget, these Shared Cabins accommodate up to four female passengers and allow for a comfortable, restful journey across the Strait.',
        accommodationModalIntroTextRecliner: 'Recliners offer comfort at great value. Located in a private lounge surrounded by floor-to-ceiling windows, you can simply sit back, relax and enjoy the magnificent view.',
        accommodationModalIntroTextDay: 'There\'s nothing quite like a day sailing. The fresh ocean air, sweeping coastline views and vast swathes of glistening water as far as the eye can see. During summer and other high demand periods, travel on a Day Ticket and experience all this, plus a host of fun on-board activities.',
        accommodationModalIntroTextKennel: 'If travelling with a pet, it is a requirement that your pet travels in a Spirit of Tasmania kennel.',
        accommodationModalDescriptionTextDeluxe: '<p>Other features:</p><ul><li>Bedside tables with lamps</li><li>A window side table with two chairs</li><li>Bathrobes (for use on board)</li><li>Amenity pack (with shampoo, lotion etc.)</li></ul><p>All cabins have been completely refurbished and feature elegant furnishings with a bold new colour scheme. In addition, they have air-conditioning with adjustable controls, a power point, wall-mounted reading lights, hanging space, a desk with a chair and a wall mirror. Bedding, towels and soap are provided.</p><p><strong>Cots<br /></strong>If you book an infant and a Deluxe Cabin, a cot will be placed in your room free of charge, subject to availability. Look for the Cot Provided icon on the booking screen to confirm availability. The only thing you need to bring is linen for the cot. Please note, a maximum of 2 cots can be accommodated inside a Deluxe Cabin.</p>',
        accommodationModalDescriptionTextPorthole2: '<p>All cabins boast a fresh new look, with bright and colourful interiors. Other features include:</p><ul><li>Air-conditioning with adjustable controls</li><li>Wall-mounted reading lights</li><li>Desk and chair</li><li>Wall mirror</li><li>Hanging space</li><li>Power point</li></ul><p>Note: Bedding, towels and soap are provided.</p>',
        accommodationModalDescriptionTextPorthole4: '<p>Other features:</p><ul><li>Air-conditioning with adjustable controls</li><li>Wall-mounted reading lights</li><li>Desk and chair</li><li>Wall mirror</li><li>Hanging space</li><li>Power point</li></ul><p>Note: Bedding, towels and soap are provided.</p><p><strong>Cots</strong><br />If you book an infant and a Four Bed Porthole Private Cabin, a cot will be placed in your room free of charge, subject to availability. If you require a cot, we recommend that you book an Inside Cabin rather than a Porthole Cabin, as the cots are better fitted to the size of an Inside Cabin. The only thing you need to bring is linen for the cot. Please note, a maximum of 1 cot can be accommodated inside a Porthole Cabin.<br /><br />*If this cabin is booked for fewer than 3 people, we reserve the right to amend your accommodation to a Twin Bed Porthole cabin.</p>',
        accommodationModalDescriptionTextInside: '<p>Other features:</p><ul><li>Air-conditioning with adjustable controls</li><li>Wall-mounted reading lights</li><li>Desk and chair</li><li>Wall mirror</li><li>Hanging space</li><li>Power point</li></ul><p>Note: Bedding, towels and soap are provided.</p><p><strong>Cots</strong><br />If you book an infant and a Four Bed Inside Private Cabin, a cot will be placed in your room free of charge, subject to availability. Look for the Cot Provided icon on the booking screen to confirm availability. Please note, a maximum of 2 cots can be accommodated inside an Inside Private Cabin.</p><p> </p>',
        accommodationModalDescriptionTextMaleSharedTwoShare: '<p>Other features:</p><ul><li>Air-conditioning with adjustable controls</li><li>Wall-mounted reading lights</li><li>Desk and chair</li><li>Wall mirror</li><li>Hanging space</li><li>Power point</li><li>Shower</li></ul><p>Note: Bedding, towels and soap are provided.</p>',
        accommodationModalDescriptionTextMaleSharedFourShare: '<p>Other features:</p><ul><li>Air-conditioning with adjustable controls</li><li>Wall-mounted reading lights</li><li>Desk and chair</li><li>Wall mirror</li><li>Hanging space</li><li>Power point</li><li>Shower</li></ul><p>Note: Bedding, towels and soap are provided.</p>',
        accommodationModalDescriptionTextFemaleSharedTwoShare: '<p>Other features:</p><ul><li>Air-conditioning with adjustable controls</li><li>Wall-mounted reading lights</li><li>Desk and chair</li><li>Wall mirror</li><li>Hanging space</li><li>Power point</li><li>shower</li></ul><p>Note: Bedding, towels and soap are provided.</p>',
        accommodationModalDescriptionTextFemaleSharedFourShare: '<p>Other features:</p><ul><li>Air-conditioning with adjustable controls</li><li>Wall-mounted reading lights</li><li>Desk and chair</li><li>Wall mirror</li><li>Hanging space</li><li>Power point</li><li>shower</li></ul><p>Note: Bedding, towels and soap are provided.</p>',
        accommodationModalDescriptionTextRecliner: '<p>Features include:</p><ul><li>Swipe card access</li><li>Individual reading lights</li><li>Foot rest</li><li>Luggage racks (not lockable)</li><li>Blankets and pillows</li></ul><p>Note: It is recommended that children be accompanied by an adult. Infants are not permitted. Wheelchair accessible recliners are also available.</p>',
        accommodationModalDescriptionTextDay: '<p>There are no fasten your seatbelt signs here! Day Tickets have no specific seat allocation, which means you\'re free to roam the ship to your heart\'s content. A generous amount of comfortable public seating is available.</p>',
        accommodationModalDescriptionTextKennel: '<p><strong>Which pets can I take with me?</strong><br />Dogs, cats, rabbits, guinea pigs, ferrets, some birds, chickens and ducks may travel on Spirit of Tasmania. Quarantine restrictions may apply to ferrets entering Tasmania. For further information please call Department of Primary Industries, Parks, Water and Environment on 1300 368 550.</p><p><strong>Which animals are permitted on board?</strong><br />Wildlife such as reptiles, amphibians (i.e. frogs), birds, water-based animals (i.e. fish, yabbies, tortoises), worms, spiders, pigeons, doves and rodents cannot travel on board Spirit of Tasmania.</p><p><strong>Should I book a kennel?</strong><br />Yes. If travelling with a pet, it is a requirement your pet travels in a Spirit of Tasmania kennel. Our kennels are located on ventilated decks. Fresh water is supplied and regular checks are performed on pets throughout the sailing. Bedding is not provided.</p><p>One kennel must be booked per pet unless the animal is a mother with pups or kittens.</p><p>Smaller animals such as rabbits, guinea pigs, birds or chickens should be carried in their own cage and then placed into a kennel.</p><p><strong>Additional information</strong><br />Pets are not allowed inside cabins (with the exception of assistance dogs) and pets should not be left inside vehicles during the sailing.</p><p>For safety reasons, passengers are not permitted to access the vehicle decks to visit pets while the ship is at sea.</p><p>All dogs entering Tasmania are subject to quarantine entry conditions and must be treated for Hydatid Tape Worm within 14 days prior to entering Tasmania. Documentary proof of this treatment such as a receipt or vet\'s subscription is required.</p>',
        accommodationImagesDeluxe: ['/media/713827/accommodation-images-deluxe-1.jpg','/media/713828/accommodation-images-deluxe-2.jpg','/media/713829/accommodation-images-deluxe-3.jpg','/media/713830/accommodation-images-deluxe-4.jpg','/media/713831/accommodation-images-deluxe-5.jpg','/media/713832/accommodation-images-deluxe-6.jpg'],
        accommodationImagesPorthole2: ['/media/713840/accommodation-images-private-porthole2-1.jpg','/media/713841/accommodation-images-private-porthole2-2.jpg','/media/713842/accommodation-images-private-porthole2-3.jpg','/media/713843/accommodation-images-private-porthole2-4.jpg','/media/713844/accommodation-images-private-porthole2-5.jpg','/media/713845/accommodation-images-private-porthole2-6.jpg'],
        accommodationImagesPorthole4: ['/media/713846/accommodation-images-private-porthole4-1.jpg','/media/713847/accommodation-images-private-porthole4-2.jpg','/media/713848/accommodation-images-private-porthole4-3.jpg','/media/713849/accommodation-images-private-porthole4-4.jpg','/media/713850/accommodation-images-private-porthole4-5.jpg','/media/713851/accommodation-images-private-porthole4-6.jpg'],
        accommodationImagesInside: ['/media/713834/accommodation-images-private-inside-1.jpg','/media/713835/accommodation-images-private-inside-2.jpg','/media/713836/accommodation-images-private-inside-3.jpg','/media/713837/accommodation-images-private-inside-4.jpg','/media/713838/accommodation-images-private-inside-5.jpg','/media/713839/accommodation-images-private-inside-6.jpg'],
        accommodationImagesMaleSharedTwoShare: ['/media/713857/accommodation-images-shared-1m.jpg','/media/713858/accommodation-images-shared-2.jpg','/media/713859/accommodation-images-shared-3.jpg','/media/713860/accommodation-images-shared-4.jpg','/media/713861/accommodation-images-shared-5.jpg','/media/713862/accommodation-images-shared-6.jpg','/media/713863/accommodation-images-shared-7.jpg','/media/715079/shared-room-shower-500x334.jpg'],
        accommodationImagesMaleSharedFourShare: ['/media/713857/accommodation-images-shared-1m.jpg','/media/713858/accommodation-images-shared-2.jpg','/media/713859/accommodation-images-shared-3.jpg','/media/713860/accommodation-images-shared-4.jpg','/media/713861/accommodation-images-shared-5.jpg','/media/713862/accommodation-images-shared-6.jpg','/media/713863/accommodation-images-shared-7.jpg','/media/715079/shared-room-shower-500x334.jpg'],
        accommodationImagesFemaleSharedTwoShare: ['/media/713856/accommodation-images-shared-1f.jpg','/media/713858/accommodation-images-shared-2.jpg','/media/713859/accommodation-images-shared-3.jpg','/media/713860/accommodation-images-shared-4.jpg','/media/713861/accommodation-images-shared-5.jpg','/media/713862/accommodation-images-shared-6.jpg','/media/713863/accommodation-images-shared-7.jpg','/media/715079/shared-room-shower-500x334.jpg'],
        accommodationImagesFemaleSharedFourShare: ['/media/713856/accommodation-images-shared-1f.jpg','/media/713858/accommodation-images-shared-2.jpg','/media/713859/accommodation-images-shared-3.jpg','/media/713860/accommodation-images-shared-4.jpg','/media/713861/accommodation-images-shared-5.jpg','/media/713862/accommodation-images-shared-6.jpg','/media/713863/accommodation-images-shared-7.jpg','/media/715079/shared-room-shower-500x334.jpg'],
        accommodationImagesRecliner: ['/media/713852/accommodation-images-recliner-1.jpg','/media/713853/accommodation-images-recliner-2.jpg','/media/713854/accommodation-images-recliner-3.jpg','/media/713855/accommodation-images-recliner-4.jpg'],
        accommodationImagesDay: ['/media/713824/accommodation-images-day-tickets-1.jpg','/media/713825/accommodation-images-day-tickets-2.jpg','/media/713826/accommodation-images-day-tickets-3.jpg'],
        accommodationImagesKennel: ['/media/713833/accommodation-images-kennel-1.jpg'],
        inventoryNoLongerAvailableError: 'Sorry, it looks like someone beat you to it and snapped up something you were booking. We\'ll take you back to the start so you can make another selection.',
        
        tripSummaryAccommodationNameDeluxe: 'Deluxe Cabin',
        tripSummaryAccommodationNamePorthole2: 'Twin Bed Porthole Cabin',
        tripSummaryAccommodationNamePorthole2Male: 'Bed in Twin Bed Male Shared Cabin',
        tripSummaryAccommodationNamePorthole2Female: 'Bed in Twin Bed Female Shared Cabin',
        tripSummaryAccommodationNamePorthole4: 'Four Bed Porthole Cabin',
        tripSummaryAccommodationNamePorthole4Male: 'Bed in Four Bed Male Shared Cabin',
        tripSummaryAccommodationNamePorthole4Female: 'Bed in Four Bed Female Shared Cabin',
        tripSummaryAccommodationNamePortholeLimited4: 'Four Bed Porthole Cabin',
        tripSummaryAccommodationNamePortholeLimited4Male: 'Bed in Four Bed Male Shared Cabin',
        tripSummaryAccommodationNamePortholeLimited4Female: 'Bed in Four Bed Female Shared Cabin',
        tripSummaryAccommodationNameInside: 'Four Bed Inside Cabin',
        tripSummaryAccommodationNameInsideMale: 'Bed in Four Bed Male Shared Cabin',
        tripSummaryAccommodationNameInsideFemale: 'Bed in Four Bed Female Shared Cabin',
        tripSummaryAccommodationNameRecliner: 'Recliner',
        tripSummaryAccommodationNameDay: 'Day Ticket',
        tripSummaryAccommodationNameKennel: 'Pet Kennel',
        tripSummaryAccommodationNameWheelchairAccessible3BerthCabin: 'Three Bed Cabin (Wheelchair Access)',
        tripSummaryAccommodationNameWheelchairAccessibleOceanRecliner: 'Recliner (Wheelchair Access)',
        tripSummarySwapSailingDirectionConfirmationForAmendments: 'Are you sure you want to depart from %OPPOSITEPORT% instead? We\'ll need to confirm your sailing dates next.',
        tripSummarySuggestEditingOtherLegInAmendments: 'You\'ve selected changes for your %CHANGEDLEGOFJOURNEY% Sailing. Do you want to make changes for your %OTHERLEGOFJOURNEY% Sailing as well?',
        tripSummaryUndoAllChangesInAmendments: 'Undo all your changes and start again?',
        tripSummaryUpdateRegoConfirmationInAmendments: 'Looks like you haven\'t provided us rego details for all your vehicles. This is required prior to check-in. Do you wish to update them now?',
        
        passengerDetailsIntro: 'To continue to payment, we first need a few more details about those travelling',
        passengerDetailsInvalidPensionerNumber: 'Please enter the number as it appears on your pensioner card or',
        passengerDetailsSwapToAdultPriceHasChanged: 'Due to the change to an Adult fare, the price has changed from %PRICECHANGEDFROM% to %PRICECHANGEDTO%.',
        passengerDetailsChangedToChild: 'Due to the change to a Child fare, the price has changed from %PRICECHANGEDFROM% to %PRICECHANGEDTO%.',
        passengerDetailsChangedToInfant: 'Due to the change to a Infant fare, the price has changed from %PRICECHANGEDFROM% to %PRICECHANGEDTO%.',
        passengerDetailsAddPassengerValidationMaximumPassengers: 'You can have a maximum of %MAXPASSENGERS% passengers.',
        passengerDetailsAddPassengerValidationMaximumTwoInfantsPerGrownUp: 'You can only have a maximum of two infants per adult or pensioner.',
        passengerDetailsAddPassengerValidationSoldOutWithOtherYieldAvailable: 'Unfortunately the fare type you have purchased is now sold out on this sailing.  Adding another person will need a separate booking. For assistance contact our Customer Contact Centre on 1800 676 552.',
        passengerDetailsAddPassengerValidationSoldOutWithNoOtherYieldAvailable: 'It looks like this sailing date is sold out and can\'t hold any more passengers.',
        passengerDetailsAddPassengerValidationSoldOutForSpecificPassengerType: 'It looks like this sailing date is sold out and can\'t hold any more passengers of this type.',
        passengerDetailsAddPassengerValidationNoMoreAccommodationSpaceLeft: 'It looks like this sailing has no more accommodation left to add any more passengers to.',
        passengerDetailsAddPassengerValidationNoMorePensionerSpaceLeft: 'It looks like this sailing has no more pensioner fares left, please add them as an adult.',
        vehicleRegoIntro: 'We need a few more details about your vehicle',
        vehicleRegoProvideLaterCheckboxText: 'I do not have access to registration details at this time and will provide later',
        vehicleRegoProvideLaterWarningText: 'Please note: you must have provided registration details prior to check-in',
        
        cabinAllocationBookSameForReturn: 'Assign the same allocations on your return sailing?',
        cabinAllocationOnlyInfantsCanGoHere: 'Only infants can be assigned here',
        cabinAllocationNoInfantsCanGoHere: 'No infants can be assigned here',
        cabinAllocationFemalesOnly: 'Only females can be assigned here',
        cabinAllocationMalesOnly: 'Only males can be assigned here',
        
        paymentIntro: 'Our site is secure. Your personal details are protected at all times.',
        paymentTravelInsuranceFlavourText: 'Optional travel insurance for extra peace of mind for your trip',
        paymentNoTravelInsuranceWithGiftVouchers: 'We are unable to process travel Insurance with internet banking or gift voucher payments. If you continue, your selected travel insurance will be removed automatically. Should you wish to purchase travel Insurance, please call Allianz on 1800 023 797',
        paymentPhoneNumberFlavourText: 'Having your mobile number will help us send you updates about your sailing',
        paymentCvvTooltip: 'Your CVC number is located on the back of your card for Visa and MasterCard, and on the front of your card for American Express.',
        paymentCreditCardErrorGeneral: 'An error was reported while trying to process your payment - your bank may be unavailable or your details may be incorrect. Please verify your credit card details are correct.',
        paymentInternetBankingErrorGeneral: 'An error was reported while trying to process your payment. Please try again or select a different payment method.',
        paymentChequeRefundIntroText: 'A cheque will be made out to the following payee. Please confirm the payee details.',
        paymentCreditCardRefundIntroText: 'The refund will be processed to your credit card.',
        paymentChequeAndGiftVoucherRefundIntroText: 'A cheque will be made out to the following payee, and as a gift voucher. Please confirm the payee details.',
        paymentCreditCardAndGiftVoucherRefundIntroText: 'The refund will be processed to your credit card, and as a gift voucher.',
        paymentGiftVoucherRefundIntroText: 'The refund will be processed as a gift voucher.',
        paymentAllianzProductDisclosurePdf: '/media/717491/imp1919-_-spirit-of-tasmania-pds-eff-29-03-2018-mental-health-plusspds-ef_.pdf',
        paymentNewBookingPriceHasChanged: 'The price has changed from %PRICECHANGEDFROM% to %PRICECHANGEDTO% before you could reserve it. Continue with updated price?',
        paymentAmendmentPriceHasChanged: 'Price expected to be %PRICECHANGEDFROM% but was %PRICECHANGEDTO%',
        paymentCannotBuyInsuranceWithInternetBankingOrGiftVouchers: 'We are unable to process Travel Insurance with internet banking or gift voucher payments. If you continue, your selected travel insurance will be removed automatically. Should you wish to purchase travel insurance, please call Allianz on 1800 023 797.',
        paymentManualAddressEntrySelectOptionText: 'Address not in this list? Enter your own.',
        voucherFieldsHideButtonText: 'Actually, I don\'t want to add a voucher',
        
        bookingConfirmedTextTicket: 'We have sent you an email of your ticket. Your booking reference is %BOOKINGREFERENCE%.',
        bookingConfirmedTextRequest: 'Let us know how we can assist you with your requirements',
        bookingConfirmedTextInsurance: 'Purchase travel insurance for your booking here.',
        bookingConfirmedLinkRequest: 'https://www.spiritoftasmania.com.au/onboard-experience/special-requests',
        bookingConfirmedLinkInsurance: 'https://elevate.agatravelinsurance.com.au/spiritoftasmania',
        bookingConfirmedTextSailorsClub: 'Why not join our Sailors Club to enjoy a range of benefits?',
        
        modalUrlPensionerEligibility: '/umbraco/api/ibp/getmodalbody?id=4923',
        modalUrlPetsAndKennels: '/umbraco/api/ibp/getmodalbody?id=4924',
        modalUrlSpecialNeeds: '/umbraco/api/ibp/getmodalbody?id=4925',
        modalUrlTermsAndConditionsOfRefunds: '/umbraco/api/ibp/getmodalbody?id=4926',
        modalUrlPrivacyStatement: '/umbraco/api/ibp/getmodalbody?id=4928',
        modalUrlConditionsOfCarriage: '/umbraco/api/ibp/getmodalbody?id=4929',
        
        contextualHelpVehiclesStep: 'Let\'s find out your vehicle details for accurate prices and availability.',
        contextualHelpInvalidVehicleCount: 'Oops, it looks like you have more vehicles than adults and pensioners. Try removing some first.',
        contextualHelpReturnDateBeforeOutboundDate: 'Oops, looks like your return date is before your outbound date.',
        contextualHelpInvalidCabinCombination: 'Oops, the requested combination of cabins has sold out.',
        contextualHelpTooMuchAccommodation: 'Oops, looks like you\'ve selected too much accommodation.',
        contextualHelpNotEnoughInfantAccommodation: 'Oops, you don\'t have enough accommodation for your infant(s).',
        contextualHelpChildrenMustBeAccompanied: 'Oops, children must be accompanied by at least one grown-up in Deluxe Cabins and Shared Cabins.',
        contextualHelpIncorrectGenderOnSharedAccommodation: 'Oops, looks like your Shared Berth selection has the wrong genders',
        contextualHelpNotEnoughKennelsForAllPets: 'Oops, each pet needs a kennel.',
        contextualHelpNotEnoughKennelsForOnePet: 'Oops, your best friend needs a kennel.',
        contextualHelpSearchGenericError: 'Oops, something went wrong with your search. Please try again or call us on 1800 884 305 to complete this request.',
        contextualHelpSearchDatePassed: 'Oops, your booking date has already passed',
        contextualHelpSearchDateTooFarInAdvance: 'Oops, you can\'t book that far in advance.',
        contextualHelpSearchReturnDateBeforeOutboundDate: 'Oops, your departure date needs to be before your return date.',
        contextualHelpSearchNoGrownUps: 'Oops, you need to have at least one adult or pensioner.',
        contextualHelpSearchInfantsPerGrownUp: 'Oops, up to 2 infants can be booked per adult/pensioner online. Please call 1800 884 305 for assistance.',
        contextualHelpSearchMoreThanMaxPassenger: 'Oops, up to %MAXPASSENGERCOUNT% passengers can be booked at a time.',
        contextualHelpCabinAllocationDayTicketsMustBeAssigned: 'Oops, a passenger needs to be assigned to each Day Ticket.',
        contextualHelpCabinAllocationRecliningSeatMustBeAssigned: 'Oops, a passenger needs to be assigned to each Recliner.',
        contextualHelpCabinAllocationSharedBerthMustBeAssigned: 'Oops, a passenger needs to be assigned to each bed in a Shared Cabin.',
        contextualHelpCabinAllocationInfantsUnaccompanied: 'Oops, infants must be accompanied in a private cabin.',
        contextualHelpCabinAllocationCabinEmpty: 'Oops, you can\'t leave a cabin empty.',
        contextualHelpCabinAllocationDayTicketsTooManyInfants: 'Oops, there aren\'t enough grown-ups for the infants you have on Day Tickets.',
        contextualHelpCabinAllocationDeluxeChildUnaccompanied: 'Oops, children must be accompanied by at least one grown-up in Deluxe Cabins.',
        contextualHelpCabinAllocationSharedChildUnaccompanied: 'Oops, children must be accompanied by at least one grown-up in a Shared Cabin.',
        contextualHelpCabinAllocationMalesOnly: 'Oops, only males are allowed in Male Shared Cabins.',
        contextualHelpCabinAllocationFemalesOnly: 'Oops, only females are allowed in Female Shared Cabins.',
        contextualHelpInvalidCustomerNumber: 'Oops, we couldn\'t validate one or more customer numbers. Please make sure that there are no duplicates and you have entered the right first name, last name, gender and number.',
        contextualHelpFrequentTravellerRestriction: 'Restrictions apply to the discounted fares in this booking. Only one extra adult passenger that is not a Frequent Traveller can be booked.',
        contextualHelpResendItinerarySucceeded: 'Your booking itinerary/e-ticket has successfully been sent to %EMAIL%',
        contextualHelpResendItineraryFailed: 'Oops, resending booking itinerary/e-ticket has failed.',
        contextualHelpOfferCancelRestriction: 'We can\'t cancel that sailing due to restrictions on your offer, to proceed with this cancellation please call 1800 676 552.',
        contextualHelpIbpOfflineTitle: 'Be back soon',
        contextualHelpIbpOfflineMessageBody: 'Apologies – we’re temporarily down for maintenance. Please try again soon.',
        contextualHelpNoSailingOnSelectedDate: 'No sailings available for this date. Try selecting another one.',
        contextualHelpPreferredSailingNotAvailable: 'No %DAYORNIGHT% sailing available for this date. You can either select a different sailing or date.',
        contextualHelpAccommodationSelectionNotValidWithSelectedDeal: 'Your selection is not valid with this deal',
        contextualHelpVehicleSummary: 'That\'s a nice ride!',
        contextualHelpOutboundAccommodationStep: 'Time to find somewhere comfy for everyone.',
        contextualHelpTicketSummaryStep: 'All set! Review your details.',
        contextualHelpPassengerDetailsStep: 'Let\'s work out who\'s travelling.',
        contextualHelpCabinAllocationStep: 'Let\'s make sure everyone\'s where they want to be.',
        contextualHelpDealTaken: 'Good choice! Now let\'s see what accommodation is available!',
        contextualHelpPricesRefreshed: 'All good! Your prices have automatically been refreshed.',
        contextualHelpPriceRefreshError: 'Oops looks like someone beat you to it. Let\'s see what else is available.',
        
        validationBadDate: 'Incomplete date',
        validationChildAge: 'Children must be between 3-15 years of age at the time of travel. Not a child? ',
        validationInfantAge: 'Infants must be under 3 years of age at the time of travel. Not an infant? ',
        validationCreditCardExpiry: 'Expiry date is in the past',
        validationEmailsDoNotMatch: 'Emails do not match',
        validationGenericInvalid: 'Invalid',
        validationGenericError: 'Oops! Looks like we didn\'t get everything we need from you. Please fill in the required info.',
        
        dealActionWillRemoveDealFromSailing: 'This will remove the deal from your %LEGOFJOURNEY% sailing.',
        dealUserReeligibleForBookedDealInAmendments: 'You have become re-eligible for the deal you booked originally. We\'re loading you back on.',
        dealUserIneligibleForBookedDealInAmendmentsDueToAccommodation: 'If you make this change you will no longer be eligible for your deal. We will switch you automatically to the next available product.',
        dealUserIneligibleForBookedDealInAmendmentsDueToPassengers: 'With this change you would no longer be eligible for the "%PRODUCTNAME%" deal. We\'ll show you prices for our standard fares instead. (Don\'t worry, you will have the chance to abort later)',
        dealMissingProductCodesWarningTitle: 'Offer not found',
        dealMissingProductCodesWarning: 'Sorry, it looks like there\'s been a problem loading this offer. We are looking into it but if you\'d like to continue with your booking we\'ll show you current fares below. Alternatively, please come back later.',
        dealSoldOutProductCodesWarningTitle: 'Offer no longer available',
        dealSoldOutProductCodesWarning: 'Oops, looks like this offer is no longer available. We\'ll show you current fares below.',
        amendmentErrorResponse: {
            
            GenericError: 'Please check your booking number and last name are correct.  The last name must match the contact name on the booking.',
            BookingNotChangedError: 'There were no changes on your booking to submit.',
            BookingHasBeenUpdatedError: 'Oops looks like someone else has made changes to this booking since you logged in. We\'re going to have to reload the booking and start again I\'m afraid.',
            MustLogInForCreditAccountBooking: 'This booking was made by a Frequent Traveller with a credit account. To continue, you must log in as a member with the same credit account that was used to make the booking.',
            MustLogInForTravelAgentBooking: 'This booking was made by a Travel Agent. Please contact your Travel Agent to amend this booking.',
            MustLogOutForDirectAgentBooking: 'This booking was not made by a Travel Agent. Please log out to continue.',
            AmendmentInProgress: 'This booking is already in the process of being amended.',
            BookingChanged: 'Unfortunately your request could not be processed. An error has occurred whilst confirming this amendment. Please return to Manage my booking and try again. For further assistance please call 1800 676 552.',
            BookingNotOk: 'An error occurred while updating your booking. Please try again or for assistance, call 1800 676 552.',
            AgeRangeInvalid: 'Unfortunately your request cannot be processed at this time due to one or more passenger age changes during the trip. Please call us on 1800 884 305 to complete this request.',
            ConfirmationException: 'If payment required, amendment not confirmed until payment processed. An e-Ticket is provided on the completion of all successful amendments.',
            DepartureTooSoon: 'Your booking cannot be amended within 24 hours of your scheduled departure. For further assistance please call 1800 676 552.',
            InternetBankingPaymentInProgress: 'You have an internet banking transaction in progress. Please complete the transaction to finalise your payment or cancel the transaction and start a new payment.',
            PassengerTypeInvalid: 'One or more passengers on the %LEGOFJOURNEY% leg of your journey need to have their passenger type updated.',
            PaymentException: 'Your payment was not successful. Please verify your credit card details.',
            PaymentFailedTooManyTimes: 'Your card has failed too many times. In order to protect your online security, we cannot allow further attempts. Please call us on 1800 676 552.',
            ReservationException: 'Unfortunately your request could not be processed. An error has occurred whilst confirming this amendment. Please return to Manage my booking and try again. For further assistance please call 1800 676 552.',
            InventoryAlreadyTaken: 'Unfortunately the option you have requested is no longer available. Please return to My Booking page to try again.',
            RollBackException: 'Unfortunately your request could not be processed. An error has occurred whilst confirming this amendment. Please return to Manage my booking and try again. For further assistance please call 1800 676 552.',
            TimedOut: 'Your amendment time has exceeded 10 minutes and is no longer available. To start again, please enter your details below and click continue.',
            ProductCodeRestrictsAmendmentMessage: 'Unfortunately your fare prevents this change, to proceed with this change please call 1800 676 552'
        },
        cancellationErrorResponse: {
            ErrorContactCallCentre: 'Your cancellation was not successful. Your booking has not been changed.',
            ErrorDepartureTooSoon: 'Online cancellations can only be made up until 24 hours prior to your sailing\'s departure time. For assistance, please call 1800 676 552.',
            ErrorUpdatedByAnotherUser: 'An error occured while attempting to process your request. Your cancellation was not successful. Please try again or for assistance, please call 1800 676 552.',
            ErrorTryAgain: 'Your cancellation was not successful. Please try again.'
        }
    };
</script>


<div id="ibpApp" data-ng-controller="ibpController" data-ng-class="{'booking-summary-fixed': workflowState.searchFromWidgetComplete(), 'scroll-locked': isOverlayActive()}" data-swiftype-index="false">
    
<!--[if gt IE 9]><!-->
<div id="contextual-help" data-ng-controller="contextualHelpController" data-ng-show="isVisible()" data-ng-cloak></div>
<div id="modal-container" data-ng-controller="ibpModalController" data-ng-cloak>
    <div class="overlay" data-ng-if="modals.length > 0" data-ng-cloak>
        <div class="modal-positioner" data-ng-repeat="modal in modals">
            <div class="modal {{modal.type}}">
                <div class="cross" data-ng-bind-html="Resources.iconCross | asRawHtml" data-ng-click="dismissOnX(modal)" data-ng-show="modal.showDismissCross"></div>
                <div class="title section-heading">{{modal.title}}</div>
                <div class="subtitle" data-ng-if="!!modal.subtitle">{{modal.subtitle}}</div>
                <div class="content" data-ibp-modal-content="modal" data-confirm="confirm" data-dismiss="dismiss" data-dismiss-with-promise="dismissWithPromise">{{modal.content}}</div>
            </div>
        </div>
    </div>
</div>
<!--<![endif]-->
    

<header data-ng-controller="bookingSummaryController" data-ng-hide="!workflowState.showHeaderMask()" data-ng-cloak>
    
    <!--[if gt IE 9]><!-->
    <div id="header-shade" data-ng-class="{'on': bookingState.summaryExpanded}" data-ng-click="toggleExpansion(); toggleScrollLock()"></div>
    <div id="header-mask"
         data-ng-show="workflowState.showHeaderMask()"
         data-ng-class="{'small': !booking.outboundSailing, 'expanded': bookingState.summaryExpanded}"
         data-dynamic-header-scroll-height
         data-ng-click="adjustHeight()"
         class="ng-animate-disabled">
        <div class="cross ng-animate-disabled" data-ng-bind-html="Resources.iconCross | asRawHtml" data-ng-show="bookingState.summaryExpanded"></div>
        <div class="booking-summary expanded ng-animate-disabled">
            <a href="/" class="go-home" data-ng-class="{'expanded': bookingState.summaryExpanded}" target="_self" data-ng-click="cancelBooking()">
                <div class="logo" data-ng-bind-html="Resources.sotLogoSmall | asRawHtml"></div>
                <div class="home-link">
                    <div class="home-arrow" data-ng-bind-html="Resources.iconArrowLeft | asRawHtml"></div>
                    <div class="home-text">Home</div>
                </div>
            </a>

            <div class="mobile-collapse-toggle"
                 data-ng-click="toggleExpansion()"
                 data-ng-if="bookingState.summaryExpanded"></div>

            <div class="summary-for-legs-of-journey"
                 data-ng-click="toggleExpansion()"
                 data-ng-class="{'expanded': bookingState.summaryExpanded}">
                <div class="arrow ng-animate-disabled" data-ng-bind-html="Resources.iconArrowDown | asRawHtml" data-ng-class="{'expanded': bookingState.summaryExpanded}"></div>
                <div data-ng-if="!!booking.outboundSailing" class="outbound header-summary-sailing header-info-section"
                     data-ng-controller="bookingSummarySailingController"
                     data-ng-init="legOfJourney = LegOfJourney.Outbound">
                    <div class="quick-look" data-ng-class="{'search-incomplete': workflowState.isOnSearchInIbpFlowStep()}">
    <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Outbound" data-ng-bind-html="Resources.iconOutbound | asRawHtml"></div>
    <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Return" data-ng-bind-html="Resources.iconReturn | asRawHtml"></div>
    <div class="date date-compressed ng-animate-disabled" data-ng-show="!bookingState.summaryExpanded" data-ng-class="{'show-deal-ribbon': isDealApplied()}">
        <span class="display-date">
            {{booking.getDepartureDate(legOfJourney, 'D MMM').toUpperCase()}}
        </span>
        <span data-ng-if="booking.getDepartureDate(legOfJourney, 'HH:mm', true)" class="time">
            {{booking.getDepartureDate(legOfJourney, 'h:mm A')}}
        </span>
        <div class="arrival-info meta-info" data-ng-if="booking.getArrivalDate(legOfJourney, 'D MMM HH:mm', true)">
            Arrive {{booking.getArrivalDate(legOfJourney, 'D MMM h:mm A')}}
        </div>
        <div data-ng-if="isDealApplied()" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml" class="ribbon"></div>
    </div>
    <div class="date date-expanded ng-animate-disabled" data-ng-show="bookingState.summaryExpanded">
        <div class="title-desktop">
            Your {{legOfJourney.toLowerCase()}} ticket
        </div>
        <div class="title-tablet">
            {{legOfJourney}} ticket
        </div>
        <div class="departure-location">
            Departing
            <span>{{getSailing().getOriginName()}}</span>
        </div>
    </div>
    <div class="direction ng-animate-disabled" data-ng-hide="bookingState.summaryExpanded">
        {{getSailing().origin}} to {{Utils.reverseLocationCode(getSailing().origin)}}
        <div class="leg meta-info">
            {{legOfJourney}}
        </div>
    </div>
</div>
<ul class="breakdown expanded">
    <li class="passengers">
        <div class="heading">
            Fares
            <a data-ng-click="scrollToFare(legOfJourney)"
               data-ng-if="canShowHeaderChangeLink(workflowState.isOnFareStep() || workflowState.isOnAccommodationStep())"
               data-ng-hide="legOfJourney === LegOfJourney.Return && workflowState.isOnOutboundFareStep()">Change</a>
        </div>
        <ul>
            <li data-ng-if="!!booking.getPassengers(legOfJourney)" data-ng-repeat="passengerLine in getPassengerBookingLines()" class="passenger-line-item">
                <span class="item">
    <span class="display-override" data-ng-if="!!passengerLine.displayOverride && passengerLine.currentQuantity === 0">{{passengerLine.displayOverride}}</span>
    <span data-ng-if="!passengerLine.displayOverride || passengerLine.currentQuantity > 0">{{passengerLine.currentQuantity}} x {{passengerLine.displayName}}</span>
</span>
<span class="value" data-ng-if="!passengerLine.displayOverride || passengerLine.currentQuantity > 0" data-ng-class="{'unallocated': getSelectedPassengerGroupPrice(passengerLine) == null}">
    <span class="original-price" data-ng-if="getSelectedFareTypePassengerGroupPrice(passengerLine) != null && getSelectedFareTypePassengerGroupPrice(passengerLine) > getSelectedPassengerGroupPrice(passengerLine)">${{getSelectedFareTypePassengerGroupPrice(passengerLine)}}</span>
    <span data-ng-if="showPassengerPrice() && getSelectedPassengerGroupPrice(passengerLine) === 0">$0</span>
    <span data-ng-if="!!getSelectedPassengerGroupPrice(passengerLine)">$</span><span data-ng-if="getSelectedPassengerGroupPrice(passengerLine) !== 0">{{getSelectedPassengerGroupPrice(passengerLine) || 'To be selected'}} <span data-ng-if="showAgentCommission()">({{getPassengerNet(passengerLine) | money}})</span></span>
</span>
            </li>
            <li data-ng-if="booking.getPetCount(legOfJourney) > 0" class="passenger-line-item">
                <span class="item">
                    {{booking.getPetCount(legOfJourney)}} x {{Utils.pluralize('Pet', booking.getPetCount(legOfJourney))}}
                </span>
                <span class="value" data-ng-if="booking.showHeaderPrice()">$0</span>
            </li>
        </ul>
    </li>
    <li class="vehicles">
        <ul>
            <li data-ng-if="!!getSailing().vehicles" data-ng-repeat="vehicle in getSailing().vehicles.getOptions()" class="vehicle-line-item">
                <span class="item">1 x {{vehicle.getSummaryDisplay()}}</span>
                <ul class="vehicle-extras" data-ng-if="vehicle.getExtrasForSummary().length > 0">
                    <li data-ng-repeat="extra in vehicle.getExtrasForSummary()">{{extra}}</li>
                    <li>{{vehicle.getTotalLength()}}</li>
                </ul>
                <span class="value" data-ng-class="{'unallocated': !getVehiclePrice($index)}" data-ng-if="booking.showHeaderPrice()">
                    <span data-ng-if="!!getVehiclePrice($index)">$</span>{{getVehiclePrice($index) || 'To be selected'}} <span data-ng-if="!!getVehiclePrice($index) && showAgentCommission()">({{getVehicleNet($index) | money }})</span>
                </span>
            </li>
            <li data-ng-if="getPushbikesCount() > 0" class="vehicle-line-item">
                <span class="item">{{getPushbikesCount()}} x {{Utils.pluralize('Bicycle', getPushbikesCount())}}</span>
                <span class="value" data-ng-class="{'unallocated': !getPushbikesPrice()}" data-ng-if="booking.showHeaderPrice()">
                    <span data-ng-if="!!getPushbikesPrice()">$</span>{{getPushbikesPrice() || 'To be selected'}}
                </span>
            </li>
        </ul>
    </li>

    <li class="expanded-date">
        <div class="heading">
            Date
            <a data-ng-click="scrollToFare(legOfJourney)"
               data-ng-if="canShowHeaderChangeLink(workflowState.isOnFareStep() || workflowState.isOnAccommodationStep())"
               data-ng-hide="legOfJourney === LegOfJourney.Return && workflowState.isOnOutboundFareStep()">Change</a>
        </div>
        <ul>
            <li>Departing {{booking.getDepartureDate(legOfJourney, 'dddd D MMMM')}}<span data-ng-if="booking.getDepartureDate(legOfJourney, 'HH:mm', true)"> at {{booking.getDepartureDate(legOfJourney,  'h:mm A')}}</span></li>
            <li class="arrival-date">
                <span data-ng-if="booking.getArrivalDate(legOfJourney)">Arriving {{booking.getArrivalDate(legOfJourney, 'dddd D MMMM')}} at {{booking.getArrivalDate(legOfJourney, 'h:mm A')}}</span>
            </li>
        </ul>
    </li>

    <li class="accommodation">
        <div class="heading">
            Accommodation
            <a data-ng-click="scrollToAccommodation(legOfJourney)"
               data-ng-if="canShowHeaderChangeLink(workflowState.isOnAccommodationStep())"
               data-ng-hide="legOfJourney === LegOfJourney.Return && workflowState.isOnOutboundAccommodationStep()">Change</a>
        </div>
        <ul>
            <li data-ng-if="isDealApplied()" class="deal-applied">
                <div data-ng-bind-html="Resources.iconDealRibbon | asRawHtml" class="ribbon"></div>
                {{getAppliedDealProduct().productName}} deal applied
            </li>
            <li data-ng-if="!getSailing().selectedAccommodation.hasAllocation()" class="accommodation-line-item">
                <span class="value unallocated">To be selected</span>
            </li>
            <li data-ng-if="!!getSailing().selectedAccommodation.hasAllocation()" data-ng-repeat="selectedAccommodationOption in getSailing().getAccommodationLines()">
                <span class="item">{{selectedAccommodationOption.quantity}} x {{selectedAccommodationOption.displayText}}</span>
                <span class="value" data-ng-if="booking.showHeaderPrice()">
                    <span class=" original-price" data-ng-if="getSelectedFareTypeAccommodationOptionPrice(selectedAccommodationOption) > getSelectedAccommodationOptionPrice(selectedAccommodationOption)">${{getSelectedFareTypeAccommodationOptionPrice(selectedAccommodationOption)}}</span>
                    ${{getSelectedAccommodationOptionPrice(selectedAccommodationOption)}}
                    <span data-ng-if="showAgentCommission()">
                        ({{getSelectedAccommodationOptionNet(selectedAccommodationOption) | money}})
                    </span>
                </span>
            </li>
        </ul>
    </li>
    <li class="total" data-ng-if="shouldShowTotals()">
        <ul>
            <li class="outbound-total">Total {{legOfJourney.toLowerCase()}}</li>
            <li class="value">{{ getSailingTotalPriceText(legOfJourney) }}<span data-ng-if="showAgentCommission()"> ({{getSailingTotalNet(legOfJourney) | money}})</span></li>
        </ul>
    </li>
</ul>

                </div>

                <div data-ng-if="!!booking.returnSailing" class="return header-summary-sailing header-info-section"
                     data-ng-controller="bookingSummarySailingController"
                     data-ng-init="legOfJourney = LegOfJourney.Return">
                    <div class="quick-look" data-ng-class="{'search-incomplete': workflowState.isOnSearchInIbpFlowStep()}">
    <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Outbound" data-ng-bind-html="Resources.iconOutbound | asRawHtml"></div>
    <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Return" data-ng-bind-html="Resources.iconReturn | asRawHtml"></div>
    <div class="date date-compressed ng-animate-disabled" data-ng-show="!bookingState.summaryExpanded" data-ng-class="{'show-deal-ribbon': isDealApplied()}">
        <span class="display-date">
            {{booking.getDepartureDate(legOfJourney, 'D MMM').toUpperCase()}}
        </span>
        <span data-ng-if="booking.getDepartureDate(legOfJourney, 'HH:mm', true)" class="time">
            {{booking.getDepartureDate(legOfJourney, 'h:mm A')}}
        </span>
        <div class="arrival-info meta-info" data-ng-if="booking.getArrivalDate(legOfJourney, 'D MMM HH:mm', true)">
            Arrive {{booking.getArrivalDate(legOfJourney, 'D MMM h:mm A')}}
        </div>
        <div data-ng-if="isDealApplied()" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml" class="ribbon"></div>
    </div>
    <div class="date date-expanded ng-animate-disabled" data-ng-show="bookingState.summaryExpanded">
        <div class="title-desktop">
            Your {{legOfJourney.toLowerCase()}} ticket
        </div>
        <div class="title-tablet">
            {{legOfJourney}} ticket
        </div>
        <div class="departure-location">
            Departing
            <span>{{getSailing().getOriginName()}}</span>
        </div>
    </div>
    <div class="direction ng-animate-disabled" data-ng-hide="bookingState.summaryExpanded">
        {{getSailing().origin}} to {{Utils.reverseLocationCode(getSailing().origin)}}
        <div class="leg meta-info">
            {{legOfJourney}}
        </div>
    </div>
</div>
<ul class="breakdown expanded">
    <li class="passengers">
        <div class="heading">
            Fares
            <a data-ng-click="scrollToFare(legOfJourney)"
               data-ng-if="canShowHeaderChangeLink(workflowState.isOnFareStep() || workflowState.isOnAccommodationStep())"
               data-ng-hide="legOfJourney === LegOfJourney.Return && workflowState.isOnOutboundFareStep()">Change</a>
        </div>
        <ul>
            <li data-ng-if="!!booking.getPassengers(legOfJourney)" data-ng-repeat="passengerLine in getPassengerBookingLines()" class="passenger-line-item">
                <span class="item">
    <span class="display-override" data-ng-if="!!passengerLine.displayOverride && passengerLine.currentQuantity === 0">{{passengerLine.displayOverride}}</span>
    <span data-ng-if="!passengerLine.displayOverride || passengerLine.currentQuantity > 0">{{passengerLine.currentQuantity}} x {{passengerLine.displayName}}</span>
</span>
<span class="value" data-ng-if="!passengerLine.displayOverride || passengerLine.currentQuantity > 0" data-ng-class="{'unallocated': getSelectedPassengerGroupPrice(passengerLine) == null}">
    <span class="original-price" data-ng-if="getSelectedFareTypePassengerGroupPrice(passengerLine) != null && getSelectedFareTypePassengerGroupPrice(passengerLine) > getSelectedPassengerGroupPrice(passengerLine)">${{getSelectedFareTypePassengerGroupPrice(passengerLine)}}</span>
    <span data-ng-if="showPassengerPrice() && getSelectedPassengerGroupPrice(passengerLine) === 0">$0</span>
    <span data-ng-if="!!getSelectedPassengerGroupPrice(passengerLine)">$</span><span data-ng-if="getSelectedPassengerGroupPrice(passengerLine) !== 0">{{getSelectedPassengerGroupPrice(passengerLine) || 'To be selected'}} <span data-ng-if="showAgentCommission()">({{getPassengerNet(passengerLine) | money}})</span></span>
</span>
            </li>
            <li data-ng-if="booking.getPetCount(legOfJourney) > 0" class="passenger-line-item">
                <span class="item">
                    {{booking.getPetCount(legOfJourney)}} x {{Utils.pluralize('Pet', booking.getPetCount(legOfJourney))}}
                </span>
                <span class="value" data-ng-if="booking.showHeaderPrice()">$0</span>
            </li>
        </ul>
    </li>
    <li class="vehicles">
        <ul>
            <li data-ng-if="!!getSailing().vehicles" data-ng-repeat="vehicle in getSailing().vehicles.getOptions()" class="vehicle-line-item">
                <span class="item">1 x {{vehicle.getSummaryDisplay()}}</span>
                <ul class="vehicle-extras" data-ng-if="vehicle.getExtrasForSummary().length > 0">
                    <li data-ng-repeat="extra in vehicle.getExtrasForSummary()">{{extra}}</li>
                    <li>{{vehicle.getTotalLength()}}</li>
                </ul>
                <span class="value" data-ng-class="{'unallocated': !getVehiclePrice($index)}" data-ng-if="booking.showHeaderPrice()">
                    <span data-ng-if="!!getVehiclePrice($index)">$</span>{{getVehiclePrice($index) || 'To be selected'}} <span data-ng-if="!!getVehiclePrice($index) && showAgentCommission()">({{getVehicleNet($index) | money }})</span>
                </span>
            </li>
            <li data-ng-if="getPushbikesCount() > 0" class="vehicle-line-item">
                <span class="item">{{getPushbikesCount()}} x {{Utils.pluralize('Bicycle', getPushbikesCount())}}</span>
                <span class="value" data-ng-class="{'unallocated': !getPushbikesPrice()}" data-ng-if="booking.showHeaderPrice()">
                    <span data-ng-if="!!getPushbikesPrice()">$</span>{{getPushbikesPrice() || 'To be selected'}}
                </span>
            </li>
        </ul>
    </li>

    <li class="expanded-date">
        <div class="heading">
            Date
            <a data-ng-click="scrollToFare(legOfJourney)"
               data-ng-if="canShowHeaderChangeLink(workflowState.isOnFareStep() || workflowState.isOnAccommodationStep())"
               data-ng-hide="legOfJourney === LegOfJourney.Return && workflowState.isOnOutboundFareStep()">Change</a>
        </div>
        <ul>
            <li>Departing {{booking.getDepartureDate(legOfJourney, 'dddd D MMMM')}}<span data-ng-if="booking.getDepartureDate(legOfJourney, 'HH:mm', true)"> at {{booking.getDepartureDate(legOfJourney,  'h:mm A')}}</span></li>
            <li class="arrival-date">
                <span data-ng-if="booking.getArrivalDate(legOfJourney)">Arriving {{booking.getArrivalDate(legOfJourney, 'dddd D MMMM')}} at {{booking.getArrivalDate(legOfJourney, 'h:mm A')}}</span>
            </li>
        </ul>
    </li>

    <li class="accommodation">
        <div class="heading">
            Accommodation
            <a data-ng-click="scrollToAccommodation(legOfJourney)"
               data-ng-if="canShowHeaderChangeLink(workflowState.isOnAccommodationStep())"
               data-ng-hide="legOfJourney === LegOfJourney.Return && workflowState.isOnOutboundAccommodationStep()">Change</a>
        </div>
        <ul>
            <li data-ng-if="isDealApplied()" class="deal-applied">
                <div data-ng-bind-html="Resources.iconDealRibbon | asRawHtml" class="ribbon"></div>
                {{getAppliedDealProduct().productName}} deal applied
            </li>
            <li data-ng-if="!getSailing().selectedAccommodation.hasAllocation()" class="accommodation-line-item">
                <span class="value unallocated">To be selected</span>
            </li>
            <li data-ng-if="!!getSailing().selectedAccommodation.hasAllocation()" data-ng-repeat="selectedAccommodationOption in getSailing().getAccommodationLines()">
                <span class="item">{{selectedAccommodationOption.quantity}} x {{selectedAccommodationOption.displayText}}</span>
                <span class="value" data-ng-if="booking.showHeaderPrice()">
                    <span class=" original-price" data-ng-if="getSelectedFareTypeAccommodationOptionPrice(selectedAccommodationOption) > getSelectedAccommodationOptionPrice(selectedAccommodationOption)">${{getSelectedFareTypeAccommodationOptionPrice(selectedAccommodationOption)}}</span>
                    ${{getSelectedAccommodationOptionPrice(selectedAccommodationOption)}}
                    <span data-ng-if="showAgentCommission()">
                        ({{getSelectedAccommodationOptionNet(selectedAccommodationOption) | money}})
                    </span>
                </span>
            </li>
        </ul>
    </li>
    <li class="total" data-ng-if="shouldShowTotals()">
        <ul>
            <li class="outbound-total">Total {{legOfJourney.toLowerCase()}}</li>
            <li class="value">{{ getSailingTotalPriceText(legOfJourney) }}<span data-ng-if="showAgentCommission()"> ({{getSailingTotalNet(legOfJourney) | money}})</span></li>
        </ul>
    </li>
</ul>

                </div>

                <div data-ng-if="!booking.returnSailing"
                     class="return header-summary-sailing header-info-section">
                    <div class="quick-look" data-ng-class="{'search-incomplete': workflowState.isOnSearchInIbpFlowStep()}">
    <div class="direction-arrow" data-ng-bind-html="Resources.iconReturn | asRawHtml"></div>
    <div class="date date-expanded ng-animate-disabled" data-ng-show="bookingState.summaryExpanded">
        <div class="title-desktop">
            Your {{LegOfJourney.Return.toLowerCase()}} ticket
        </div>
        <div class="title-tablet">
            {{LegOfJourney.Return}} ticket
        </div>
        <div class="departure-location">
            No {{LegOfJourney.Return}} Trip
        </div>
    </div>
    <div class="direction ng-animate-disabled" data-ng-hide="bookingState.summaryExpanded">
        No {{LegOfJourney.Return}} Trip
        <div class="leg meta-info">
            {{LegOfJourney.Return}}
        </div>
    </div>
</div>
<ul class="breakdown expanded">
    <li class="spirit-tip" data-ng-if="canShowReturnTips()">
        <div class="tip-title">
            <div class="lightbulb" data-ng-bind-html="Resources.lightbulb | asRawHtml"></div>
            <h3>Spirit Tip</h3>
        </div>
        <div class="tip-contents">
            <div>{{IbpCms.headerSummaryReturnTipText}}</div>
            <a class="button primary" data-ng-show="canAddReturnTrip()" data-ng-click="addReturnTrip()">{{IbpCms.headerSummaryAddReturnTrip}}</a>
        </div>
    </li>
</ul>

                </div>

                <div class="mobile-padder"></div>
            </div>

            <div class="summary-total header-info-section clearfix"
                 data-ng-click="toggleExpansion()"
                 data-ng-class="{'expanded': bookingState.summaryExpanded, 'search-incomplete': workflowState.isOnSearchInIbpFlowStep() }" data-ng-if="shouldShowTotals()">
                <div class="total-container"
                     data-ng-class="{'expanded': bookingState.summaryExpanded}"
                     data-pulse-on-change="getBookingTotalPrice()" data-duration="1000">
                    <div class="arrow" data-ng-bind-html="Resources.iconArrowDown | asRawHtml" data-ng-class="{'expanded': bookingState.summaryExpanded}" data-ng-hide="bookingState.summaryExpanded"></div>
                    <div class="close-cross" data-ng-bind-html="Resources.iconCross | asRawHtml" data-ng-class="{'expanded': bookingState.summaryExpanded}" data-ng-show="bookingState.summaryExpanded"></div>
                    <div class="total" data-ng-class="{'showing-ribbon': isDealApplied()}" data-ng-show="!bookingState.summaryExpanded">
                        <div data-ng-if="isDealApplied()" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml" class="ribbon"></div>
                        <span class="chosen-so-far">
                            <strong class="chosen-so-far">{{ getChosenSoFarAmount() }}</strong>
                        </span>
                        <span class="see-breakdown" data-ng-show="!bookingState.summaryExpanded">See breakdown</span>
                    </div>
                    <div class="total total-expanded" data-ng-show="bookingState.summaryExpanded"><strong>Trip total</strong></div>
                    <div class="currency-indicator" data-ng-class="{'expanded': bookingState.summaryExpanded}">$AUD</div>
                </div>
                <ul class="summary-breakdown">
                    <li>Outbound<span class="value">{{ getSailingTotalPriceText(LegOfJourney.Outbound) }}<span data-ng-if="showAgentCommission()"> ({{getSailingTotalNet(LegOfJourney.Outbound) | money}})</span></span></li>
                    <li data-ng-if="!booking.isOneWay()">Return<span class="value">{{ getSailingTotalPriceText(LegOfJourney.Return) }}<span data-ng-if="showAgentCommission()"> ({{getSailingTotalNet(LegOfJourney.Return) | money}})</span></span></li>
                    <li data-ng-if="booking.hasInsurance()">
                        Travel Insurance<span class="value">${{booking.getTravelInsurancePrice()}}</span>
                    </li>
                    <li data-ng-if="booking.hasCreditCardFees()">
                        Credit card fees<span class="value">{{ booking.getCreditCardFeePrice() | money }}</span>
                    </li>
                    
                    <li class="total">Total<span class="value">{{ getBookingTotalPriceText() }}<span data-ng-if="showAgentCommission()"> ({{ booking.totalNet() | money }})</span></span></li>
                </ul>
                <div class="book-now" data-ng-show="bookingState.summaryExpanded">
                    
                    
                </div>
            </div>
        </div>
        <div class="booking-welcome-message">
            <div class="center-wrap">
                <div>You're ready to get started building your fare.</div>
                <div>Along the way you'll add passengers, any vehicles and accommodation.</div>
                <div>Let's get started!</div>
            </div>
        </div>
    </div>
    <!--<![endif]-->
</header>

    
    <div id="ibp">
            <!--[if gt IE 9]><!-->
            <div class="ibp-home" data-ng-class="{'home': !workflowState.searchFromWidgetComplete()}">
                <div data-ng-controller="ibpWorkflowController">
                    

                    <div data-ng-controller="searchController" class="ibp-search standard-form" data-ng-class="{'ibp-app-component': workflowState.searchFromWidgetComplete(), 'widget-mode': !workflowState.searchFromWidgetComplete()}" data-ng-hide="workflowState.isBookingSummaryOrLater()" data-ng-cloak>
    <div data-ng-class="{'ibp-section search-section': workflowState.searchFromWidgetComplete()}">
        <div class="section-heading">Find a Fare</div>
        <form name="searchForm" id="search-wrap" data-ng-show="search.searchSettings" data-ng-cloak>
            <!-- Where -->
            <div class="sw-origin-point sw-tip-type-point">
                <div class="trip-direction-wrap" data-ng-class="{ 'is-invalid': showOriginError() }">
                    <div class="table">
                        <div class="table-row">
                            <div class="cell">
                                <label class="from">
                                    From:
                                </label>
                                <div class="pad-clear">
                                    <select id="search-origin" data-ng-model="search.searchQuery.origin" data-ng-options="location.actualValue as location.displayValue for location in search.searchSettings.sailingLocationOptions">
                                        <option value="" selected="selected" label="Select" disabled>Select</option>
                                    </select>
                                </div>
                            </div>
                            <div class="cell">
                                <label class="from">
                                    To:
                                </label>
                                <div class="pad-clear">
                                    <select id="search-destination" data-ng-model="search.searchQuery.destination" data-ng-options="location.actualValue as location.displayValue for location in search.searchSettings.sailingLocationOptions | filter: {actualValue: '!' + search.searchQuery.origin }" data-ng-disabled="!search.searchQuery.origin">
                                        <option value="" selected="selected" label="Select" data-ng-if="!search.searchQuery.origin">Select</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="validate-positioner">
                        <div class="input-message-validate pos-bottom invalid tip-center">
                            Oops, looks like you haven't told us where you're going.
                        </div>
                    </div>
                </div>
            </div>

            <!-- Trip Type -->
            <div class="trip-type" data-ng-class="{'is-invalid': showTripTypeError()}">
                <div class="radio-group radio-horizontal">
                    <label data-ng-class="{ 'active': search.searchQuery.tripType === TripType.OneWay }">
                        <input type="radio" data-ng-model="search.searchQuery.tripType" data-ng-value="TripType.OneWay">
                        <span class="radiobtn"></span>One way
                    </label>
                    <label data-ng-class="{ 'active': search.searchQuery.tripType === TripType.Return }">
                        <input type="radio" data-ng-model="search.searchQuery.tripType" data-ng-value="TripType.Return">
                        <span class="radiobtn"></span>Return
                    </label>
                </div>
                <div class="validate-positioner">
                    <div class="input-message-validate pos-bottom invalid tip-center">
                        Oops, looks like you haven't told us if you're travelling one way or return.
                    </div>
                </div>
            </div>
            <!-- Date Selection -->
            <div class="booking-row date-time-row sw-outbound-date-point sw-return-date-point">
                <div>
                    <h3>When are you going?</h3>
                    <div data-ng-if="search.searchSettings">
                        <div data-ng-controller="searchDatesController">
                            <div class="date-container table">
                                <div class="table-row">
                                    <div class="sailing-date cell">
                                        <label class="departure-date">
                                            Departing
                                        </label>
                                        <div data-sailing-date-picker data-initial-date="search.searchSettings.initialOutboundDate" data-min-date="{{search.searchSettings.baseDate}}" data-max-date="{{search.searchSettings.lastDate}}" data-search-query="search.searchQuery" data-day-list="search.searchSettings.dayList" data-month-year-list="search.searchSettings.monthYearList" data-set-date="setDepartureDate" data-leg-of-journey="{{ LegOfJourney.Outbound }}" data-ng-class="{'is-invalid': showOutboundDateError()}"></div>
                                        <div class="validate-positioner" data-ng-class="{'msg-inactive': outboundDateHasValue && outboundDateIsValidDate}">
                                            <div class="input-message-validate pos-bottom invalid tip-center" data-ng-hide="outboundDateHasValue">
                                                Oops, please fill in your departure date.
                                            </div>
                                            <div class="input-message-validate pos-bottom invalid tip-center" data-ng-hide="outboundDateIsValidDate">
                                                Oops, your departure date is invalid.
                                            </div>
                                        </div>
                                    </div>

                                    <div class="preferred-sailing cell">
                                        <label for="preferred-departure-sailing">
                                            Preferred sailing
                                        </label>
                                        <div class="pad-clear">
                                            <select id="preferred-departure-sailing" data-ng-model="search.searchQuery.departurePreferredSailing" data-ng-options="type for type in search.searchSettings.sailingTimeOptions"></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="date-container table" data-ng-show="search.searchQuery.tripType === TripType.Return">
                                <div class="table-row">
                                    <div class="sailing-date cell">
                                        <label class="return-date">
                                            Returning
                                        </label>
                                        <div data-sailing-date-picker data-initial-date="search.searchSettings.initialReturnDate" data-min-date="{{search.searchSettings.baseDate}}" data-max-date="{{search.searchSettings.lastDate}}" data-search-query="search.searchQuery" data-day-list="search.searchSettings.dayList" data-month-year-list="search.searchSettings.monthYearList" data-set-date="setReturnDate" data-leg-of-journey="{{ LegOfJourney.Return }}" data-ng-class="{'is-invalid': showReturnDateError()}"></div>
                                        <div class="validate-positioner" data-ng-class="{'msg-inactive': returnDateHasValue && returnDateIsValidDate}">
                                            <div class="input-message-validate pos-bottom invalid tip-center" data-ng-show="!returnDateHasValue">
                                                Oops, please fill in your return date.
                                            </div>
                                            <div class="input-message-validate pos-bottom invalid tip-center" data-ng-show="!returnDateIsValidDate">
                                                Oops, your return date is invalid.
                                            </div>
                                        </div>
                                    </div>
                                    <div class="preferred-sailing cell">
                                        <label for="preferred-return-sailing">
                                            Preferred sailing
                                        </label>
                                        <div class="pad-clear">
                                            <select id="preferred-return-sailing" data-ng-model="search.searchQuery.returnPreferredSailing" data-ng-options="type for type in search.searchSettings.sailingTimeOptions"></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- End Date Selection-->
            <!-- Passenger Counts-->
            <div class="passenger-count sw-passenger-counts-point" data-ng-class="{ 'is-invalid': showPassengerCountsError()}">
                <h3>Who's going?</h3>
                <div class="count-wrap">
                    <table cellspacing="0">
                        <tr>
                            <td class="first">
                                <label for="adult-count">
                                    Adults
                                </label>
                                <div class="age-range">(16+)</div>
                            </td>
                            <td data-ng-click="viewPensionerEligibilityModal()">
                                <label>
                                    Pensioners
                                </label>
                                <div class="age-range">
                                    <i class="help desktop" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="bottom" data-tooltip-content="{{IbpCms.searchWidgetPensionerTooltip}}"></i>
                                    <i class="help mobile" data-ng-bind-html="Resources.help | asRawHtml"></i>
                                </div>
                            </td>
                            <td>
                                <label for="child-count">
                                    Children
                                </label>
                                <div class="age-range">(3-15)</div>
                            </td>
                            <td>
                                <label for="infant-count">
                                    Infants
                                </label>
                                <div class="age-range">(0-2)</div>
                            </td>
                            <td class="last" data-ng-click="viewPetsAndKennelsModal()">
                                <label>
                                    Pets
                                </label>
                                <div class="age-range">
                                    <i class="help desktop" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="bottom" data-tooltip-content="{{IbpCms.searchWidgetPetTooltip}}"></i>
                                    <i class="help mobile" data-ng-bind-html="Resources.help | asRawHtml"></i>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td class="first"><select name="adultCount" id="adult-count" data-ng-model="search.searchQuery.passengers.adultCount" data-ng-options="a as a for a in search.searchSettings.adultPassengerCountRange" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-class=" {'control-invalid': searchForm.adultCount.$invalid && workflowState.searchFromWidgetComplete()}"></select></td>
                            <td><select name="pensionerCount" id="pensioner-count" data-ng-model="search.searchQuery.passengers.pensionerCount" data-ng-options="p as p for p in search.searchSettings.pensionerPassengerCountRange" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-class="{'control-invalid': searchForm.pensionerCount.$invalid && workflowState.searchFromWidgetComplete()}"></select></td>
                            <td><select name="childCount" id="child-count" data-ng-model="search.searchQuery.passengers.childCount" data-ng-options="c as c for c in search.searchSettings.childPassengerCountRange" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-class="{'control-invalid': searchForm.childCount.$invalid && workflowState.searchFromWidgetComplete()}"></select></td>
                            <td><select name="infantCount" id="infant-count" data-ng-model="search.searchQuery.passengers.infantCount" data-ng-options="i as i for i in search.searchSettings.infantPassengerCountRange" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-class="{'control-invalid': searchForm.infantCount.$invalid && workflowState.searchFromWidgetComplete()}"></select></td>
                            <td class="last"><select name="petCount" id="pet-count" data-ng-model="search.searchQuery.petCount" data-ng-options="k as k for k in search.searchSettings.kennelsCountRange" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-class="{'control-invalid': searchForm.petCount.$invalid && workflowState.searchFromWidgetComplete()}"></select></td>
                        </tr>
                    </table>
                </div>
                <div class="count-wrap-mobile">
                    <label for="adult-count">
                        Adults
                        <span class="age-range">(16+)</span>
                    </label>
                    <select name="adultCount" id="adult-count" data-ng-model="search.searchQuery.passengers.adultCount" data-ng-options="a as a for a in search.searchSettings.adultPassengerCountRange" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-class=" {'control-invalid': searchForm.adultCount.$invalid && workflowState.searchFromWidgetComplete()}"></select>

                    <label for="pensioner-count">
                        Pensioners
                        <span class="age-range"><i class="help" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="right" data-tooltip-content="Pensioner help text goes here"></i></span>
                    </label>
                    <select name="pensionerCount" id="pensioner-count" data-ng-model="search.searchQuery.passengers.pensionerCount" data-ng-options="p as p for p in search.searchSettings.pensionerPassengerCountRange" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-class="{'control-invalid': searchForm.pensionerCount.$invalid && workflowState.searchFromWidgetComplete()}"></select>

                    <label for="child-count">
                        Children
                        <span class="age-range">(3-15)</span>
                    </label>
                    <select name="childCount" id="child-count" data-ng-model="search.searchQuery.passengers.childCount" data-ng-options="c as c for c in search.searchSettings.childPassengerCountRange" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-class="{'control-invalid': searchForm.childCount.$invalid && workflowState.searchFromWidgetComplete()}"></select>

                    <label for="infant-count">
                        Infants
                        <span class="age-range">(0-2)</span>
                    </label>
                    <select name="infantCount" id="infant-count" data-ng-model="search.searchQuery.passengers.infantCount" data-ng-options="i as i for i in search.searchSettings.infantPassengerCountRange" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-class="{'control-invalid': searchForm.infantCount.$invalid && workflowState.searchFromWidgetComplete()}"></select>

                    <label for="pet-count">
                        Pets
                        <span class="age-range"><i class="help" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="right" data-tooltip-content="Pets help text goes here"></i></span>
                    </label>
                    <select name="petCount" id="pet-count" data-ng-model="search.searchQuery.petCount" data-ng-options="k as k for k in search.searchSettings.kennelsCountRange" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-class="{'control-invalid': searchForm.petCount.$invalid && workflowState.searchFromWidgetComplete()}"></select>
                </div>
                <div class="validate-positioner" data-ng-class="{'msg-inactive': shouldValidate && hasPassengersSelected}">
                    <div class="input-message-validate pos-bottom invalid tip-center">
                        Oops, you need to have at least one passenger.
                    </div>
                </div>
            </div>
            <!-- Car Selection -->
            <div id="vehicle-types" class="sw-vehicles-point" data-ng-class="{'is-invalid': showVehiclesError()}">
                <div class="vehicle-left">
                    <h3>Taking a vehicle?</h3> <i class="help" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="left" data-tooltip-content="{{IbpCms.searchWidgetVehicleTooltip}}"></i>
                </div>
                <div class="text-left radio-group radio-horizontal">
                    <label data-ng-class="{ 'active': search.searchQuery.takingAVehicle != null && search.searchQuery.takingAVehicle === true }">
                        <input type="radio" data-ng-model="search.searchQuery.takingAVehicle" data-ng-value="true" id="ibp-init-vehicle-yes" name="taking-vehicle">
                        <span class="radiobtn"></span>Yes
                    </label>
                    <label data-ng-class="{ 'active': search.searchQuery.takingAVehicle != null && search.searchQuery.takingAVehicle === false }">
                        <input type="radio" data-ng-model="search.searchQuery.takingAVehicle" data-ng-value="false" id="ibp-init-vehicle-no" name="taking-vehicle">
                        <span class="radiobtn"></span>No
                    </label>
                </div>
                <div class="validate-positioner">
                    <div class="input-message-validate invalid pos-bottom tip-center">
                        Oops, looks like you haven't told us if you're taking a car.
                    </div>
                </div>
            </div>
            <button id="init-ibp-flow" class="button primary" data-ng-click="startSearch()"
                    data-ng-show="!workflowState.searchFromWidgetComplete()">
                Search
            </button>
            <a class="special-needs" data-ng-click="viewSpecialNeedsModal()">Special needs</a>
        </form>
    </div>
    <div class="next-step sticky-step stuck" data-ng-if="workflowState.isOnSearchInIbpFlowStep()">
        <button class="continue ng-animate-disabled button primary"
                data-ng-click="validateAndContinueIfValid()">
            Continue
        </button>
    </div>
</div>

                    <!-- Booking Step -->
                    <div id="vehicle-app" class="ibp-app-component" data-ng-show="workflowState.isOnVehicleStep() || (isTakingAVehicle() && workflowState.canShowVehicleStepIfTakingVehicles())" data-ng-controller="vehicleController" data-ng-cloak>
                        <div data-ng-controller="vehicleSailingController"
                             data-ng-if="!!booking.outboundSailing"
                             data-ng-init="legOfJourney = LegOfJourney.Outbound"
                             class="vehicle-selection" data-ng-cloak>
                            <div class="ibp-section vehicle-section">
    <form name="vehicleForm" class="vehicle-form standard-form">
        <div class="section-heading">Select {{legOfJourney.toLowerCase()}} vehicle</div>
        <div class="radio-group radio-horizontal vehicle-type-option">
            <label data-ng-class="{ 'active': isTakingAVehicleType(TakingAVehicleType.Yes) }">
                <input type="radio" name="takingAVehicle" data-ng-model="getSailingVehicles().takingVehiclesType" ng-value="TakingAVehicleType.Yes" data-ng-change="setTakingAVehicle()" data-ng-focus="updateCurrentSelections()">
                <span class=" radiobtn"></span> {{TakingAVehicleType.Yes}}
            </label>
            <label data-ng-class="{ 'active': isTakingAVehicleType(TakingAVehicleType.YesWithBicycle) }">
                <input type="radio" name="takingAVehicle" data-ng-model="getSailingVehicles().takingVehiclesType" ng-value="TakingAVehicleType.YesWithBicycle" data-ng-change="setTakingAVehicle()" data-ng-focus="updateCurrentSelections()">
                <span class="radiobtn"></span> {{TakingAVehicleType.YesWithBicycle}}
            </label>
            <label data-ng-class="{ 'active': isTakingAVehicleType(TakingAVehicleType.No) }">
                <input type="radio" name="takingAVehicle" data-ng-model="getSailingVehicles().takingVehiclesType" ng-value="TakingAVehicleType.No" data-ng-change="setTakingAVehicle()" data-ng-focus="updateCurrentSelections()">
                <span class="radiobtn"></span> {{TakingAVehicleType.No}}
            </label>
        </div>
        <div data-ng-show="isTakingAVehicleType(TakingAVehicleType.Yes)" data-ng-repeat="vehicleOptions in getSailingVehicles().options">
            <div class="vehicle-summary">
                <div class="summary-row">
                    <div class="make-model">
                        <span class="summary-icon vehicle-tick" data-ng-bind-html="Resources.iconTick | asRawHtml"></span>
                        {{vehicleOptions.getDisplay()}}
                    </div>
                    <div class="extras" data-ng-if="!!vehicleOptions.getExtrasDisplay()">
                        <span>
                            Including:
                            <span>{{vehicleOptions.getExtrasDisplay()}}</span>
                        </span>
                    </div>
                    <div class="actions">
                        <a data-ng-if="!isAddingOrEditingVehicle() && editingVehicleIndex !== $index" data-ng-click="editVehicle($index)" class="blue ng-animate-disabled">Change</a>
                        <a data-ng-if="!isAddingOrEditingVehicle() && editingVehicleIndex !== $index" data-ng-click="deleteVehicle($index)" class="negative-action ng-animate-disabled">Remove</a>
                        <span data-ng-if="editingVehicleIndex === $index">Editing</span>
                    </div>
                </div>
            </div>
        </div>
        <div data-ng-if="isTakingAVehicleType(TakingAVehicleType.YesWithBicycle)" class="text-center field-wrap control-wrap">
            <div>
                <label for="vehicle-make" class="select-label">
                    Number of bicycles
                </label>
                <select name="numberOfPushbikes" data-ng-model="getSailingVehicles().numberOfPushbikes" data-ng-options="a as a for a in getAllowablePushbikesRange()" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-change="changeNumberOfPushbikes()"><option value="">Select</option></select>
            </div>
        </div>
        <div data-ng-if="(isAdding() || isEditing()) && isTakingAVehicleType(TakingAVehicleType.Yes)" class="text-center">
            <div class="control-wrap errorable field-wrap" data-ng-class="{'is-invalid': getEditableVehicleOptions().type === VehicleType.LightTruck}">
                <label for="vehicle-type" class="select-label">
                    Vehicle type
                </label>
                <select id="vehicle-type" class="vehicle-type" data-ng-model="getEditableVehicleOptions().type" data-ng-options="t as VehicleType.getDisplay(t) for t in vehicleSettings.vehicleTypes"><option value="">Select</option></select>
                <div class="validate-positioner" data-ng-class="{'msg-inactive': getEditableVehicleOptions().type !== VehicleType.LightTruck}">
                    <div class="input-message-validate invalid pos-bottom tip-center">
                        <span data-ng-bind-html="IbpCms.vehiclesLightTruckError | asRawHtml"></span>
                    </div>
                </div>
            </div>

            <div data-ng-if="showRecentVehicles()" class="recent-vehicles">
                <div>Or use one from a recent search:</div>
                <table class="vehicles">
                    <tr data-ng-repeat="vehicleOptions in getRecentVehicles()">
                        <td>
                            <span class="vehicle-name">{{vehicleOptions.getDisplay()}}</span>
                            <span class="vehicle-inclusions" data-ng-if="vehicleOptions.getExtrasForSummary().length > 0">Including: {{vehicleOptions.getExtrasDisplay()}}</span>
                        </td>
                        <td>
                            <a data-ng-click="useRecentVehicle($index)">Add</a>
                            <a class="error" data-ng-click="deleteRecentVehicle($index)">Remove</a>
                        </td>
                    </tr>
                </table>
            </div>

            <div data-ng-show="getEditableVehicleOptions().type === VehicleType.Vehicle">
                <div class="control-wrap field-wrap">
                    <label for="vehicle-make" class="select-label">
                        Make
                    </label>
                    <select id="vehicle-make" data-ng-model="getEditableVehicleOptions().vehicle.make"
                            data-ng-options="make.value as make.text for make in vehicleSettings.carMakes"
                            data-ng-change="changeCarMake()">
                        <option value="">Select</option>
                    </select>
                </div>
                <div class="control-wrap unknown-vehicle-length-input field-wrap">
                    <label for="vehicle-model" class="select-label">Model</label>
                    <select id="vehicle-model" data-ng-model="getEditableVehicleOptions().vehicle.model"
                            data-ng-options="model.value as model.text for model in (vehicleSettings.carModels | filter: { make:getEditableVehicleOptions().vehicle.make })[0].models"
                            data-ng-change="changeCarModel()">
                        <option value="">Select</option>
                    </select>
                </div>
                <div data-ng-if="getSailingVehicleSettings().showCarBodyType && getSailingVehicleSettings().showYear" class="control-wrap unerrorable field-wrap">
                    <div class="row">
                        <div class="col-sm-6 col-md-6">
                            <label for="body-type" class="select-label">
                                Body type
                            </label>
                            <select id="body-type" data-ng-model="getEditableVehicleOptions().vehicle.bodyShape"
                                    data-ng-options="type as type for type in getSailingVehicleSettings().carBodyTypes"
                                    data-ng-change="changeCarBodyShape()">
                                <option value="">Select</option>
                            </select>
                        </div>
                        <div class="col-sm-6 col-md-6">
                            <label for="vehicle-year" class="select-label">
                                Year
                            </label>
                            <select data-ng-model="getEditableVehicleOptions().vehicle.year"
                                    data-ng-options="year.value as year.text for year in getSailingVehicleSettings().years"
                                    data-ng-change="changeCarYear()">
                                <option value="">Select</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div data-ng-if="getSailingVehicleSettings().showCarBodyType && !getSailingVehicleSettings().showYear" class="control-wrap unerrorable field-wrap">
                    <div class="row">
                        <div class="col-sm-offset-3 col-sm-6 col-sm-offset-6 col-md-6">
                            <label for="body-type" class="select-label">
                                Body type
                            </label>
                            <select id="body-type" data-ng-model="getEditableVehicleOptions().vehicle.bodyShape"
                                    data-ng-options="type as type for type in getSailingVehicleSettings().carBodyTypes"
                                    data-ng-change="changeCarBodyShape()">
                                <option value="">Select</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div data-ng-if="!getSailingVehicleSettings().showCarBodyType && getSailingVehicleSettings().showYear" class="control-wrap unerrorable field-wrap">
                    <div class="row">
                        <div class="col-sm-offset-3 col-sm-6 col-sm-offset-6 col-md-6">
                            <label for="vehicle-year" class="select-label">
                                Year
                            </label>
                            <select data-ng-model="getEditableVehicleOptions().vehicle.year"
                                    data-ng-options="year.value as year.text for year in getSailingVehicleSettings().years"
                                    data-ng-change="changeCarYear()">
                                <option value="">Select</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div data-ng-if="getSailingVehicleSettings().showCampervanOptions" class="field-wrap unknown-vehicle-length-input errorable control-wrap" data-ng-class="{'is-invalid': showBookingCampervanAsCarError()}">
                    <label for="vehicle-campervan" class="select-label field-wrap control-wrap">
                        Campervan
                    </label>
                    <select data-ng-model="getEditableVehicleOptions().vehicle.campervanSelection"
                            data-ng-options="campervan as VehicleIsCampervanType.getDisplay(campervan) for campervan in getSailingVehicleSettings().campervanOptions">
                        <option value="">Select</option>
                    </select>
                    <div class="validate-positioner" data-ng-class="{'msg-inactive': !showBookingCampervanAsCarError()}">
                        <div class="input-message-validate invalid pos-bottom tip-center">
                            {{IbpCms.vehiclesBookMotorhomeAsCarError}}
                        </div>
                    </div>
                </div>

                <div data-ng-if="getSailingVehicleSettings().showLength" class="field-wrap errorable control-wrap unknown-vehicle-length-input" data-ng-class="{'is-invalid': showVehicleLengthError() || showVehicleUnknownOversizedError()}">
                    <label for="vehicle-length" class="select-label">
                        Length
                    </label>
                    <select data-ng-model="getEditableVehicleOptions().vehicle.length"
                            data-ng-options="length as VehicleLength.getDisplay(length) for length in getSailingVehicleSettings().vehicleLengths"
                            data-ng-change="changeCarLength()">
                        <option value="">Select</option>
                    </select>
                    <div class="validate-positioner" data-ng-class="{'msg-inactive': !showVehicleLengthError()}">
                        <div class="input-message-validate invalid pos-bottom tip-center">
                            Total length cannot exceed {{getVehicleMaxTotalLength()}} metres.<br />Please call 1800 884 305 to complete your booking.
                        </div>
                    </div>
                    <div class="validate-positioner" data-ng-class="{'msg-inactive': !showVehicleUnknownOversizedError()}">
                        <div class="input-message-validate invalid pos-bottom tip-center">
                            Please ring 1800 634 906 to make this booking.
                        </div>
                    </div>
                </div>

                <div data-ng-if="getSailingVehicleSettings().showHeight" class="field-wrap control-wrap">
                    <div>
                        <label for="vehicle-height" class="select-label">
                            Height
                        </label>
                        <select data-ng-model="getEditableVehicleOptions().vehicle.height"
                                data-ng-options="height as VehicleHeight.getDisplay(height) for height in getSailingVehicleSettings().vehicleHeights"
                                data-ng-change="changeCarHeight()">
                            <option value="">Select</option>
                        </select>
                    </div>
                </div>
                
                <p class="text-center" data-ng-if="getEditableVehicleOptions().vehicle.heightInMetres > 0">
                   Your model of vehicle is up to {{getEditableVehicleOptions().vehicle.heightInMetres | number: 2}}m high.
                </p>

                <div class="text-center vertical-control-group icon-group control-wrap field-wrap vehicles-extras">
                    <label data-ng-class="{ 'active': getEditableVehicleOptions().vehicle.isAddingBikeRack }">
                        <input type="checkbox"
                               data-ng-model="getEditableVehicleOptions().vehicle.isAddingBikeRack"
                               data-ng-checked="getEditableVehicleOptions().vehicle.isAddingBikeRack">
                        <span class="checkbox"></span>
                        Bike Rack
                        <i class="help"
                           data-ng-bind-html="Resources.help | asRawHtml"
                           data-tooltips data-tooltip-side="left"
                           data-tooltip-content="{{IbpCms.vehiclesLoadedBikeRackTooltip}}"></i>
                        <div class="vehicle-icon" data-ng-bind-html="Resources.vehicleCarBikeRack | asRawHtml"></div>
                    </label>
                </div>

                <h2 ng-if="getEditableVehicleOptions().vehicle.needToAskIfCarryingAnythingOnRoof">Carrying anything on the roof?</h2>

                <div class="text-center vertical-control-group icon-group control-wrap field-wrap"
                     ng-if="getEditableVehicleOptions().vehicle.needToAskIfCarryingAnythingOnRoof">
                    
                    <label data-ng-class="{ 'active': getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof === true }" class="first">
                        <input type="radio"
                               data-ng-model="getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof"
                               data-ng-value="true"
                               data-ng-checked="getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof === true"
                               data-ng-change="getEditableVehicleOptions().vehicle.recalcAddingExtraHeight()"/>
                        <span class="radiobtn"></span> Yes
                        <div class="vehicle-icon roof-rack" data-ng-bind-html="Resources.vehicle4wdRoofRack | asRawHtml"></div>
                    </label>

                    <label data-ng-class="{ 'active': getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof === false }">
                        <input type="radio"
                               data-ng-model="getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof"
                               data-ng-value="false"
                               data-ng-checked="getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof === false"
                               data-ng-change="getEditableVehicleOptions().vehicle.recalcAddingExtraHeight()"/>
                        <span class="radiobtn"></span> No
                        <div class="vehicle-icon roof-rack" data-ng-bind-html="Resources.vehicle4wd | asRawHtml"></div>
                    </label>
                </div>
                
                <div ng-if="getEditableVehicleOptions().vehicle.needToAskIfCarryingOverheightCargoOnRoof">
                    <h2>How high is the cargo on your roof?</h2>
                    
                    <div class="roof-rack-cargo-examples__container vertical-control-group control-wrap">
                        <label class="roof-rack-cargo-examples__under-limit">
                            
                            <input type="radio" 
                                   data-ng-model="getEditableVehicleOptions().vehicle.userSaysRoofCargoIsLikelyToExceedHeightLimit"
                                   data-ng-value="false"
                                   data-ng-checked="getEditableVehicleOptions().vehicle.userSaysRoofCargoIsLikelyToExceedHeightLimit === false"
                                   data-ng-change="getEditableVehicleOptions().vehicle.recalcAddingExtraHeight()"/>
                            <span class="radiobtn"></span>
                            Under {{-getEditableVehicleOptions().vehicle.getHeightOverLimit() | number: 0}}cm
                            
                            <div class="roof-rack-cargo-examples__body">
                                Examples:
    
                                <ul class="roof-rack-cargo-examples__lists">
                                    <li data-ng-repeat="cargo in getEditableVehicleOptions().vehicle.getRoofCargoExamplesGrouped().underHeightLimit"
                                        data-typical-cargo-height-in-cm="{{cargo.typicalHeightInCentimetres}}">
                                        {{cargo.text}}
                                    </li>
                                </ul>
                            </div>
                        </label>
                        <label class="roof-rack-cargo-examples__over-limit">

                            <input type="radio" 
                                   data-ng-model="getEditableVehicleOptions().vehicle.userSaysRoofCargoIsLikelyToExceedHeightLimit"
                                   data-ng-value="true"
                                   data-ng-checked="getEditableVehicleOptions().vehicle.userSaysRoofCargoIsLikelyToExceedHeightLimit === true"
                                   data-ng-change="getEditableVehicleOptions().vehicle.recalcAddingExtraHeight()"/>
                            <span class="radiobtn"></span>
                            Over {{-getEditableVehicleOptions().vehicle.getHeightOverLimit() | number: 0}}cm

                            <div class="roof-rack-cargo-examples__body">
                                Examples:
    
                                <ul class="roof-rack-cargo-examples__lists">
                                    <li data-ng-repeat="cargo in getEditableVehicleOptions().vehicle.getRoofCargoExamplesGrouped().overHeightLimit"
                                        data-typical-cargo-height-in-cm="{{cargo.typicalHeightInCentimetres}}">
                                        {{cargo.text}}
                                    </li>
                                </ul>
                            </div>
                        </label>
                    </div>
                </div>

                <h2 class="caravan-or-trailer">Towing a caravan or trailer?</h2>
                <div class="radio-group radio-vertical vertical-control-group icon-group text-left control-wrap field-wrap">
                    <div data-ng-repeat="towingType in getSailingVehicleSettings().towingTypes">
                        <label data-ng-class="{'active': getEditableVehicleOptions().vehicle.towedVehicle.type === towingType, 'first': $first}">
                            <input type="radio" data-ng-model="getEditableVehicleOptions().vehicle.towedVehicle.type" data-ng-value="towingType" />
                            <span class="radiobtn"></span> {{TowedVehicleType.getDisplay(towingType)}} <i class="help" data-ng-if="towingType === TowedVehicleType.Trailer" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="left" data-tooltip-content="{{IbpCms.vehiclesTrailerDescription}}"></i>
                            <div class="towing-icon" data-ng-class="towingType" data-ng-bind-html="getEditableVehicleOptions().getIconForVehicleTowedType(towingType) | asRawHtml"></div>
                        </label>
                    </div>
                </div>
                <div data-ng-if="getEditableVehicleOptions().vehicle.towedVehicle.type === TowedVehicleType.Caravan || getEditableVehicleOptions().vehicle.towedVehicle.type === TowedVehicleType.Trailer" class="control-wrap">
                    <div class="field-wrap errorable" data-ng-class="{'is-invalid': showVehicleLengthError()}">
                        <label for="vehicleTowedLength" class="towed-input">
                            Length of caravan/trailer (including drawbar)
                            <div>
                                <div class="input-wrap input-border">
                                    <input type="number" name="vehicleTowedLength" id="vehicleTowedLength" class="input-text" data-ng-model="getEditableVehicleOptions().vehicle.towedVehicle.length" data-only-numbers data-only-numbers-allow-decimals="true" />
                                </div>
                                <div class="towed-measurement">metres</div>
                            </div>
                            <div class="validate-positioner" data-ng-class="{'msg-inactive': !showVehicleLengthError()}">
                                <div class="input-message-validate invalid pos-bottom tip-center">
                                    Total length cannot exceed {{getVehicleMaxTotalLength()}} metres.<br />Please call 1800 884 305 to complete your booking.
                                </div>
                            </div>
                        </label>
                    </div>
                    <div class="field-wrap">
                        <label for="vehicle-towed-height" class="select-label">
                            Height
                        </label>
                        <select data-ng-model="getEditableVehicleOptions().vehicle.towedVehicle.height"
                                data-ng-options="height as VehicleHeight.getDisplay(height) for height in getSailingVehicleSettings().vehicleHeights">
                            <option value="">Select</option>
                        </select>
                    </div>
                    <div class="text-center vertical-control-group field-wrap control-wrap">
                        <label class="first" data-ng-class="{'active': getEditableVehicleOptions().vehicle.towedVehicle.isFifthWheeler}">
                            <input type="checkbox" data-ng-model="getEditableVehicleOptions().vehicle.towedVehicle.isFifthWheeler" />
                            <span class="checkbox"></span> Fifth wheeler
                        </label>
                        <div class="fifth-wheeler-notice" data-ng-class="{'active': getEditableVehicleOptions().vehicle.towedVehicle.isFifthWheeler}">{{IbpCms.vehiclesFifthWheelerNotice}}</div>
                    </div>
                </div>
            </div>

            <div data-ng-show="getEditableVehicleOptions().type === VehicleType.Motorbike">
                <div class="radio-group vertical-control-group radio-vertical text-left field-wrap control-wrap vehicles-extras">
                    <div data-ng-repeat="type in getSailingVehicleSettings().motorbikeTypes">
                        <label data-ng-class="{'first': $first, 'last': $last, 'active': getEditableVehicleOptions().motorbike.type === type}">
                            <input type="radio" data-ng-model="getEditableVehicleOptions().motorbike.type" data-ng-value="type" />
                            <span class="radiobtn"></span> {{VehicleMotorbikeType.getDisplay(type)}}
                            <div class="vehicle-icon" data-ng-bind-html="getEditableVehicleOptions().getIconForVehicleSubType(type) | asRawHtml"></div>
                        </label>
                    </div>
                </div>
            </div>

            <div data-ng-show="getEditableVehicleOptions().type === VehicleType.Motorhome">
                <div class="field-wrap unknown-vehicle-length-input control-wrap errorable" data-ng-class="{'is-invalid': showVehicleLengthError() || showMotorhomeMinimumLengthError() }">
                    <label for="vehicleMotorhomeLength" class="towed-input">
                        Length
                        <div>
                            <div class="input-wrap input-border">
                                <input type="number" name="vehicleMotorhomeLength" id="vehicleMotorhomeLength" class="input-text" data-ng-model="getEditableVehicleOptions().motorhome.length" data-only-numbers data-only-numbers-allow-decimals="true" />
                            </div>
                            <div class="towed-measurement">metres</div>
                        </div>
                        <div class="validate-positioner" data-ng-class="{'msg-inactive': !showVehicleLengthError()}">
                            <div class="input-message-validate invalid pos-bottom tip-center">
                                Total length cannot exceed {{getVehicleMaxTotalLength()}} metres.<br />Please call 1800 884 305 to complete your booking.
                            </div>
                        </div>
                        <div class="validate-positioner" data-ng-class="{'msg-inactive': !showMotorhomeMinimumLengthError()}">
                            <div class="input-message-validate invalid pos-bottom tip-center">
                                Motorhome/campervan length must be at least {{getMotorhomeMinimumLength()}} metres.
                            </div>
                        </div>
                    </label>
                </div>
                <div class="field-wrap control-wrap">
                    <label for="vehicle-motorhome-height" class="select-label">
                        Height
                    </label>
                    <select id="vehicle-motorhome-height" data-ng-model="getEditableVehicleOptions().motorhome.height"
                            data-ng-options="height as VehicleHeight.getDisplay(height) for height in getSailingVehicleSettings().vehicleHeights">
                        <option value="">Select</option>
                    </select>
                </div>

                <h2>Towing a caravan or trailer?</h2>
                <div class="radio-group radio-vertical vertical-control-group icon-group text-left field-wrap control-wrap">
                    <div data-ng-repeat="towingType in getSailingVehicleSettings().towingTypes">
                        <label data-ng-class="{'active': getEditableVehicleOptions().motorhome.towedVehicle.type === towingType, 'first': $first}">
                            <input type="radio" data-ng-model="getEditableVehicleOptions().motorhome.towedVehicle.type" data-ng-value="towingType" />
                            <span class="radiobtn"></span> {{TowedVehicleType.getDisplay(towingType)}} <i class="help" data-ng-if="towingType === TowedVehicleType.Trailer" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="left" data-tooltip-content="{{IbpCms.vehiclesTrailerDescription}}"></i>
                            <div class="towing-icon" data-ng-class="towingType" data-ng-bind-html="getEditableVehicleOptions().getIconForVehicleTowedType(towingType) | asRawHtml"></div>
                        </label>
                    </div>
                </div>
                <div data-ng-if="getEditableVehicleOptions().motorhome.towedVehicle.type === TowedVehicleType.Caravan || getEditableVehicleOptions().motorhome.towedVehicle.type === TowedVehicleType.Trailer" class="control-wrap">
                    <div class="field-wrap errorable" data-ng-class="{'is-invalid': showVehicleLengthError()}">
                        <label for="motorhomeTowedLength" class="towed-input">
                            Length of caravan/trailer (including drawbar)
                            <div>
                                <div class="input-wrap input-border">
                                    <input type="number" name="motorhomeTowedLength" id="motorhomeTowedLength" class="input-text" data-ng-model="getEditableVehicleOptions().motorhome.towedVehicle.length" data-only-numbers data-only-numbers-allow-decimals="true" />
                                </div>
                                <div class="towed-measurement">metres</div>
                            </div>
                            <div class="validate-positioner" data-ng-class="{'msg-inactive': !showVehicleLengthError()}">
                                <div class="input-message-validate invalid pos-bottom tip-center">
                                    Total length cannot exceed {{getVehicleMaxTotalLength()}} metres.<br />Please call 1800 884 305 to complete your booking.
                                </div>
                            </div>
                        </label>
                    </div>
                    <div class="field-wrap">
                        <label for="motorhome-towed-height" class="select-label">
                            Height
                        </label>
                        <select id="motorhome-towed-height" data-ng-model="getEditableVehicleOptions().motorhome.towedVehicle.height"
                                data-ng-options="height as VehicleHeight.getDisplay(height) for height in getSailingVehicleSettings().vehicleHeights">
                            <option value="">Select</option>
                        </select>
                    </div>
                    <div class="text-center field-wrap vertical-control-group">
                        <label class="first" data-ng-class="{'active': getEditableVehicleOptions().motorhome.towedVehicle.isFifthWheeler}">
                            <input type="checkbox" data-ng-model="getEditableVehicleOptions().motorhome.towedVehicle.isFifthWheeler" />
                            <span class="checkbox"></span> Fifth wheeler
                        </label>
                        <div class="fifth-wheeler-notice" data-ng-class="{'active': getEditableVehicleOptions().motorhome.towedVehicle.isFifthWheeler}">{{IbpCms.vehiclesFifthWheelerNotice}}</div>
                    </div>
                </div>
            </div>
        </div>
        <div data-ng-if="isTakingAVehicleType(TakingAVehicleType.Yes)" class="text-center internal-action-bar">
            <button class="link-button" data-ng-click="addAnotherVehicle()"
                    data-ng-if="canAddVehicle() && !isAddingOrEditingVehicle()">
                + Add another vehicle
            </button>
            <button class="link-button" data-ng-click="addAnotherVehicle()"
                    data-ng-if="canAddAnotherVehicle() && isAdding() && isEditingVehicleValid()">
                + Add another vehicle
            </button>
            <button class="link-button" data-ng-click="cancelAddingVehicle()"
                    data-ng-if="isAdding() && hasVehicles()">
                Cancel
            </button>
            <button class="link-button" data-ng-click="cancelEditVehicle()"
                    data-ng-if="isEditing()">
                Undo Vehicle Editing
            </button>
        </div>
    </form>
</div>

<div class="next-step sticky-step stuck" data-ng-if="isContinueButtonVisible(legOfJourney)">
    <button data-ng-disabled="isContinueButtonDisabled()"
            data-ng-hide="isLoadingPrices()"
            data-ng-click="continueToNextStep()"
            class="ng-animate-disabled button primary">
        {{ (isAddingOrEditingVehicle() && !isEditingVehicleValid()) ? IbpCms.vehiclesVehicleIncompleteButtonPlaceholder : 'Continue' }}
    </button>
    <span class="results-loading" data-ng-show="isLoadingPrices()">
        <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
    </span>
</div>

                        </div>
                        <div data-ng-controller="vehicleSailingController"
                             data-ng-if="!!booking.returnSailing"
                             data-ng-init="legOfJourney = LegOfJourney.Return"
                             data-ng-show="workflowState.isOnReturnVehicleStep() && isReturnVehiclesVisibleOnReturnStep() || !workflowState.isOnVehicleStep()"
                             class="vehicle-selection return-vehicle-selection">
                            <div class="ibp-section vehicle-section">
    <form name="vehicleForm" class="vehicle-form standard-form">
        <div class="section-heading">Select {{legOfJourney.toLowerCase()}} vehicle</div>
        <div class="radio-group radio-horizontal vehicle-type-option">
            <label data-ng-class="{ 'active': isTakingAVehicleType(TakingAVehicleType.Yes) }">
                <input type="radio" name="takingAVehicle" data-ng-model="getSailingVehicles().takingVehiclesType" ng-value="TakingAVehicleType.Yes" data-ng-change="setTakingAVehicle()" data-ng-focus="updateCurrentSelections()">
                <span class=" radiobtn"></span> {{TakingAVehicleType.Yes}}
            </label>
            <label data-ng-class="{ 'active': isTakingAVehicleType(TakingAVehicleType.YesWithBicycle) }">
                <input type="radio" name="takingAVehicle" data-ng-model="getSailingVehicles().takingVehiclesType" ng-value="TakingAVehicleType.YesWithBicycle" data-ng-change="setTakingAVehicle()" data-ng-focus="updateCurrentSelections()">
                <span class="radiobtn"></span> {{TakingAVehicleType.YesWithBicycle}}
            </label>
            <label data-ng-class="{ 'active': isTakingAVehicleType(TakingAVehicleType.No) }">
                <input type="radio" name="takingAVehicle" data-ng-model="getSailingVehicles().takingVehiclesType" ng-value="TakingAVehicleType.No" data-ng-change="setTakingAVehicle()" data-ng-focus="updateCurrentSelections()">
                <span class="radiobtn"></span> {{TakingAVehicleType.No}}
            </label>
        </div>
        <div data-ng-show="isTakingAVehicleType(TakingAVehicleType.Yes)" data-ng-repeat="vehicleOptions in getSailingVehicles().options">
            <div class="vehicle-summary">
                <div class="summary-row">
                    <div class="make-model">
                        <span class="summary-icon vehicle-tick" data-ng-bind-html="Resources.iconTick | asRawHtml"></span>
                        {{vehicleOptions.getDisplay()}}
                    </div>
                    <div class="extras" data-ng-if="!!vehicleOptions.getExtrasDisplay()">
                        <span>
                            Including:
                            <span>{{vehicleOptions.getExtrasDisplay()}}</span>
                        </span>
                    </div>
                    <div class="actions">
                        <a data-ng-if="!isAddingOrEditingVehicle() && editingVehicleIndex !== $index" data-ng-click="editVehicle($index)" class="blue ng-animate-disabled">Change</a>
                        <a data-ng-if="!isAddingOrEditingVehicle() && editingVehicleIndex !== $index" data-ng-click="deleteVehicle($index)" class="negative-action ng-animate-disabled">Remove</a>
                        <span data-ng-if="editingVehicleIndex === $index">Editing</span>
                    </div>
                </div>
            </div>
        </div>
        <div data-ng-if="isTakingAVehicleType(TakingAVehicleType.YesWithBicycle)" class="text-center field-wrap control-wrap">
            <div>
                <label for="vehicle-make" class="select-label">
                    Number of bicycles
                </label>
                <select name="numberOfPushbikes" data-ng-model="getSailingVehicles().numberOfPushbikes" data-ng-options="a as a for a in getAllowablePushbikesRange()" data-ng-model-options="{ updateOn: 'default blur' }" data-ng-change="changeNumberOfPushbikes()"><option value="">Select</option></select>
            </div>
        </div>
        <div data-ng-if="(isAdding() || isEditing()) && isTakingAVehicleType(TakingAVehicleType.Yes)" class="text-center">
            <div class="control-wrap errorable field-wrap" data-ng-class="{'is-invalid': getEditableVehicleOptions().type === VehicleType.LightTruck}">
                <label for="vehicle-type" class="select-label">
                    Vehicle type
                </label>
                <select id="vehicle-type" class="vehicle-type" data-ng-model="getEditableVehicleOptions().type" data-ng-options="t as VehicleType.getDisplay(t) for t in vehicleSettings.vehicleTypes"><option value="">Select</option></select>
                <div class="validate-positioner" data-ng-class="{'msg-inactive': getEditableVehicleOptions().type !== VehicleType.LightTruck}">
                    <div class="input-message-validate invalid pos-bottom tip-center">
                        <span data-ng-bind-html="IbpCms.vehiclesLightTruckError | asRawHtml"></span>
                    </div>
                </div>
            </div>

            <div data-ng-if="showRecentVehicles()" class="recent-vehicles">
                <div>Or use one from a recent search:</div>
                <table class="vehicles">
                    <tr data-ng-repeat="vehicleOptions in getRecentVehicles()">
                        <td>
                            <span class="vehicle-name">{{vehicleOptions.getDisplay()}}</span>
                            <span class="vehicle-inclusions" data-ng-if="vehicleOptions.getExtrasForSummary().length > 0">Including: {{vehicleOptions.getExtrasDisplay()}}</span>
                        </td>
                        <td>
                            <a data-ng-click="useRecentVehicle($index)">Add</a>
                            <a class="error" data-ng-click="deleteRecentVehicle($index)">Remove</a>
                        </td>
                    </tr>
                </table>
            </div>

            <div data-ng-show="getEditableVehicleOptions().type === VehicleType.Vehicle">
                <div class="control-wrap field-wrap">
                    <label for="vehicle-make" class="select-label">
                        Make
                    </label>
                    <select id="vehicle-make" data-ng-model="getEditableVehicleOptions().vehicle.make"
                            data-ng-options="make.value as make.text for make in vehicleSettings.carMakes"
                            data-ng-change="changeCarMake()">
                        <option value="">Select</option>
                    </select>
                </div>
                <div class="control-wrap unknown-vehicle-length-input field-wrap">
                    <label for="vehicle-model" class="select-label">Model</label>
                    <select id="vehicle-model" data-ng-model="getEditableVehicleOptions().vehicle.model"
                            data-ng-options="model.value as model.text for model in (vehicleSettings.carModels | filter: { make:getEditableVehicleOptions().vehicle.make })[0].models"
                            data-ng-change="changeCarModel()">
                        <option value="">Select</option>
                    </select>
                </div>
                <div data-ng-if="getSailingVehicleSettings().showCarBodyType && getSailingVehicleSettings().showYear" class="control-wrap unerrorable field-wrap">
                    <div class="row">
                        <div class="col-sm-6 col-md-6">
                            <label for="body-type" class="select-label">
                                Body type
                            </label>
                            <select id="body-type" data-ng-model="getEditableVehicleOptions().vehicle.bodyShape"
                                    data-ng-options="type as type for type in getSailingVehicleSettings().carBodyTypes"
                                    data-ng-change="changeCarBodyShape()">
                                <option value="">Select</option>
                            </select>
                        </div>
                        <div class="col-sm-6 col-md-6">
                            <label for="vehicle-year" class="select-label">
                                Year
                            </label>
                            <select data-ng-model="getEditableVehicleOptions().vehicle.year"
                                    data-ng-options="year.value as year.text for year in getSailingVehicleSettings().years"
                                    data-ng-change="changeCarYear()">
                                <option value="">Select</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div data-ng-if="getSailingVehicleSettings().showCarBodyType && !getSailingVehicleSettings().showYear" class="control-wrap unerrorable field-wrap">
                    <div class="row">
                        <div class="col-sm-offset-3 col-sm-6 col-sm-offset-6 col-md-6">
                            <label for="body-type" class="select-label">
                                Body type
                            </label>
                            <select id="body-type" data-ng-model="getEditableVehicleOptions().vehicle.bodyShape"
                                    data-ng-options="type as type for type in getSailingVehicleSettings().carBodyTypes"
                                    data-ng-change="changeCarBodyShape()">
                                <option value="">Select</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div data-ng-if="!getSailingVehicleSettings().showCarBodyType && getSailingVehicleSettings().showYear" class="control-wrap unerrorable field-wrap">
                    <div class="row">
                        <div class="col-sm-offset-3 col-sm-6 col-sm-offset-6 col-md-6">
                            <label for="vehicle-year" class="select-label">
                                Year
                            </label>
                            <select data-ng-model="getEditableVehicleOptions().vehicle.year"
                                    data-ng-options="year.value as year.text for year in getSailingVehicleSettings().years"
                                    data-ng-change="changeCarYear()">
                                <option value="">Select</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div data-ng-if="getSailingVehicleSettings().showCampervanOptions" class="field-wrap unknown-vehicle-length-input errorable control-wrap" data-ng-class="{'is-invalid': showBookingCampervanAsCarError()}">
                    <label for="vehicle-campervan" class="select-label field-wrap control-wrap">
                        Campervan
                    </label>
                    <select data-ng-model="getEditableVehicleOptions().vehicle.campervanSelection"
                            data-ng-options="campervan as VehicleIsCampervanType.getDisplay(campervan) for campervan in getSailingVehicleSettings().campervanOptions">
                        <option value="">Select</option>
                    </select>
                    <div class="validate-positioner" data-ng-class="{'msg-inactive': !showBookingCampervanAsCarError()}">
                        <div class="input-message-validate invalid pos-bottom tip-center">
                            {{IbpCms.vehiclesBookMotorhomeAsCarError}}
                        </div>
                    </div>
                </div>

                <div data-ng-if="getSailingVehicleSettings().showLength" class="field-wrap errorable control-wrap unknown-vehicle-length-input" data-ng-class="{'is-invalid': showVehicleLengthError() || showVehicleUnknownOversizedError()}">
                    <label for="vehicle-length" class="select-label">
                        Length
                    </label>
                    <select data-ng-model="getEditableVehicleOptions().vehicle.length"
                            data-ng-options="length as VehicleLength.getDisplay(length) for length in getSailingVehicleSettings().vehicleLengths"
                            data-ng-change="changeCarLength()">
                        <option value="">Select</option>
                    </select>
                    <div class="validate-positioner" data-ng-class="{'msg-inactive': !showVehicleLengthError()}">
                        <div class="input-message-validate invalid pos-bottom tip-center">
                            Total length cannot exceed {{getVehicleMaxTotalLength()}} metres.<br />Please call 1800 884 305 to complete your booking.
                        </div>
                    </div>
                    <div class="validate-positioner" data-ng-class="{'msg-inactive': !showVehicleUnknownOversizedError()}">
                        <div class="input-message-validate invalid pos-bottom tip-center">
                            Please ring 1800 634 906 to make this booking.
                        </div>
                    </div>
                </div>

                <div data-ng-if="getSailingVehicleSettings().showHeight" class="field-wrap control-wrap">
                    <div>
                        <label for="vehicle-height" class="select-label">
                            Height
                        </label>
                        <select data-ng-model="getEditableVehicleOptions().vehicle.height"
                                data-ng-options="height as VehicleHeight.getDisplay(height) for height in getSailingVehicleSettings().vehicleHeights"
                                data-ng-change="changeCarHeight()">
                            <option value="">Select</option>
                        </select>
                    </div>
                </div>
                
                <p class="text-center" data-ng-if="getEditableVehicleOptions().vehicle.heightInMetres > 0">
                   Your model of vehicle is up to {{getEditableVehicleOptions().vehicle.heightInMetres | number: 2}}m high.
                </p>

                <div class="text-center vertical-control-group icon-group control-wrap field-wrap vehicles-extras">
                    <label data-ng-class="{ 'active': getEditableVehicleOptions().vehicle.isAddingBikeRack }">
                        <input type="checkbox"
                               data-ng-model="getEditableVehicleOptions().vehicle.isAddingBikeRack"
                               data-ng-checked="getEditableVehicleOptions().vehicle.isAddingBikeRack">
                        <span class="checkbox"></span>
                        Bike Rack
                        <i class="help"
                           data-ng-bind-html="Resources.help | asRawHtml"
                           data-tooltips data-tooltip-side="left"
                           data-tooltip-content="{{IbpCms.vehiclesLoadedBikeRackTooltip}}"></i>
                        <div class="vehicle-icon" data-ng-bind-html="Resources.vehicleCarBikeRack | asRawHtml"></div>
                    </label>
                </div>

                <h2 ng-if="getEditableVehicleOptions().vehicle.needToAskIfCarryingAnythingOnRoof">Carrying anything on the roof?</h2>

                <div class="text-center vertical-control-group icon-group control-wrap field-wrap"
                     ng-if="getEditableVehicleOptions().vehicle.needToAskIfCarryingAnythingOnRoof">
                    
                    <label data-ng-class="{ 'active': getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof === true }" class="first">
                        <input type="radio"
                               data-ng-model="getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof"
                               data-ng-value="true"
                               data-ng-checked="getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof === true"
                               data-ng-change="getEditableVehicleOptions().vehicle.recalcAddingExtraHeight()"/>
                        <span class="radiobtn"></span> Yes
                        <div class="vehicle-icon roof-rack" data-ng-bind-html="Resources.vehicle4wdRoofRack | asRawHtml"></div>
                    </label>

                    <label data-ng-class="{ 'active': getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof === false }">
                        <input type="radio"
                               data-ng-model="getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof"
                               data-ng-value="false"
                               data-ng-checked="getEditableVehicleOptions().vehicle.isCarryingSomethingOnRoof === false"
                               data-ng-change="getEditableVehicleOptions().vehicle.recalcAddingExtraHeight()"/>
                        <span class="radiobtn"></span> No
                        <div class="vehicle-icon roof-rack" data-ng-bind-html="Resources.vehicle4wd | asRawHtml"></div>
                    </label>
                </div>
                
                <div ng-if="getEditableVehicleOptions().vehicle.needToAskIfCarryingOverheightCargoOnRoof">
                    <h2>How high is the cargo on your roof?</h2>
                    
                    <div class="roof-rack-cargo-examples__container vertical-control-group control-wrap">
                        <label class="roof-rack-cargo-examples__under-limit">
                            
                            <input type="radio" 
                                   data-ng-model="getEditableVehicleOptions().vehicle.userSaysRoofCargoIsLikelyToExceedHeightLimit"
                                   data-ng-value="false"
                                   data-ng-checked="getEditableVehicleOptions().vehicle.userSaysRoofCargoIsLikelyToExceedHeightLimit === false"
                                   data-ng-change="getEditableVehicleOptions().vehicle.recalcAddingExtraHeight()"/>
                            <span class="radiobtn"></span>
                            Under {{-getEditableVehicleOptions().vehicle.getHeightOverLimit() | number: 0}}cm
                            
                            <div class="roof-rack-cargo-examples__body">
                                Examples:
    
                                <ul class="roof-rack-cargo-examples__lists">
                                    <li data-ng-repeat="cargo in getEditableVehicleOptions().vehicle.getRoofCargoExamplesGrouped().underHeightLimit"
                                        data-typical-cargo-height-in-cm="{{cargo.typicalHeightInCentimetres}}">
                                        {{cargo.text}}
                                    </li>
                                </ul>
                            </div>
                        </label>
                        <label class="roof-rack-cargo-examples__over-limit">

                            <input type="radio" 
                                   data-ng-model="getEditableVehicleOptions().vehicle.userSaysRoofCargoIsLikelyToExceedHeightLimit"
                                   data-ng-value="true"
                                   data-ng-checked="getEditableVehicleOptions().vehicle.userSaysRoofCargoIsLikelyToExceedHeightLimit === true"
                                   data-ng-change="getEditableVehicleOptions().vehicle.recalcAddingExtraHeight()"/>
                            <span class="radiobtn"></span>
                            Over {{-getEditableVehicleOptions().vehicle.getHeightOverLimit() | number: 0}}cm

                            <div class="roof-rack-cargo-examples__body">
                                Examples:
    
                                <ul class="roof-rack-cargo-examples__lists">
                                    <li data-ng-repeat="cargo in getEditableVehicleOptions().vehicle.getRoofCargoExamplesGrouped().overHeightLimit"
                                        data-typical-cargo-height-in-cm="{{cargo.typicalHeightInCentimetres}}">
                                        {{cargo.text}}
                                    </li>
                                </ul>
                            </div>
                        </label>
                    </div>
                </div>

                <h2 class="caravan-or-trailer">Towing a caravan or trailer?</h2>
                <div class="radio-group radio-vertical vertical-control-group icon-group text-left control-wrap field-wrap">
                    <div data-ng-repeat="towingType in getSailingVehicleSettings().towingTypes">
                        <label data-ng-class="{'active': getEditableVehicleOptions().vehicle.towedVehicle.type === towingType, 'first': $first}">
                            <input type="radio" data-ng-model="getEditableVehicleOptions().vehicle.towedVehicle.type" data-ng-value="towingType" />
                            <span class="radiobtn"></span> {{TowedVehicleType.getDisplay(towingType)}} <i class="help" data-ng-if="towingType === TowedVehicleType.Trailer" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="left" data-tooltip-content="{{IbpCms.vehiclesTrailerDescription}}"></i>
                            <div class="towing-icon" data-ng-class="towingType" data-ng-bind-html="getEditableVehicleOptions().getIconForVehicleTowedType(towingType) | asRawHtml"></div>
                        </label>
                    </div>
                </div>
                <div data-ng-if="getEditableVehicleOptions().vehicle.towedVehicle.type === TowedVehicleType.Caravan || getEditableVehicleOptions().vehicle.towedVehicle.type === TowedVehicleType.Trailer" class="control-wrap">
                    <div class="field-wrap errorable" data-ng-class="{'is-invalid': showVehicleLengthError()}">
                        <label for="vehicleTowedLength" class="towed-input">
                            Length of caravan/trailer (including drawbar)
                            <div>
                                <div class="input-wrap input-border">
                                    <input type="number" name="vehicleTowedLength" id="vehicleTowedLength" class="input-text" data-ng-model="getEditableVehicleOptions().vehicle.towedVehicle.length" data-only-numbers data-only-numbers-allow-decimals="true" />
                                </div>
                                <div class="towed-measurement">metres</div>
                            </div>
                            <div class="validate-positioner" data-ng-class="{'msg-inactive': !showVehicleLengthError()}">
                                <div class="input-message-validate invalid pos-bottom tip-center">
                                    Total length cannot exceed {{getVehicleMaxTotalLength()}} metres.<br />Please call 1800 884 305 to complete your booking.
                                </div>
                            </div>
                        </label>
                    </div>
                    <div class="field-wrap">
                        <label for="vehicle-towed-height" class="select-label">
                            Height
                        </label>
                        <select data-ng-model="getEditableVehicleOptions().vehicle.towedVehicle.height"
                                data-ng-options="height as VehicleHeight.getDisplay(height) for height in getSailingVehicleSettings().vehicleHeights">
                            <option value="">Select</option>
                        </select>
                    </div>
                    <div class="text-center vertical-control-group field-wrap control-wrap">
                        <label class="first" data-ng-class="{'active': getEditableVehicleOptions().vehicle.towedVehicle.isFifthWheeler}">
                            <input type="checkbox" data-ng-model="getEditableVehicleOptions().vehicle.towedVehicle.isFifthWheeler" />
                            <span class="checkbox"></span> Fifth wheeler
                        </label>
                        <div class="fifth-wheeler-notice" data-ng-class="{'active': getEditableVehicleOptions().vehicle.towedVehicle.isFifthWheeler}">{{IbpCms.vehiclesFifthWheelerNotice}}</div>
                    </div>
                </div>
            </div>

            <div data-ng-show="getEditableVehicleOptions().type === VehicleType.Motorbike">
                <div class="radio-group vertical-control-group radio-vertical text-left field-wrap control-wrap vehicles-extras">
                    <div data-ng-repeat="type in getSailingVehicleSettings().motorbikeTypes">
                        <label data-ng-class="{'first': $first, 'last': $last, 'active': getEditableVehicleOptions().motorbike.type === type}">
                            <input type="radio" data-ng-model="getEditableVehicleOptions().motorbike.type" data-ng-value="type" />
                            <span class="radiobtn"></span> {{VehicleMotorbikeType.getDisplay(type)}}
                            <div class="vehicle-icon" data-ng-bind-html="getEditableVehicleOptions().getIconForVehicleSubType(type) | asRawHtml"></div>
                        </label>
                    </div>
                </div>
            </div>

            <div data-ng-show="getEditableVehicleOptions().type === VehicleType.Motorhome">
                <div class="field-wrap unknown-vehicle-length-input control-wrap errorable" data-ng-class="{'is-invalid': showVehicleLengthError() || showMotorhomeMinimumLengthError() }">
                    <label for="vehicleMotorhomeLength" class="towed-input">
                        Length
                        <div>
                            <div class="input-wrap input-border">
                                <input type="number" name="vehicleMotorhomeLength" id="vehicleMotorhomeLength" class="input-text" data-ng-model="getEditableVehicleOptions().motorhome.length" data-only-numbers data-only-numbers-allow-decimals="true" />
                            </div>
                            <div class="towed-measurement">metres</div>
                        </div>
                        <div class="validate-positioner" data-ng-class="{'msg-inactive': !showVehicleLengthError()}">
                            <div class="input-message-validate invalid pos-bottom tip-center">
                                Total length cannot exceed {{getVehicleMaxTotalLength()}} metres.<br />Please call 1800 884 305 to complete your booking.
                            </div>
                        </div>
                        <div class="validate-positioner" data-ng-class="{'msg-inactive': !showMotorhomeMinimumLengthError()}">
                            <div class="input-message-validate invalid pos-bottom tip-center">
                                Motorhome/campervan length must be at least {{getMotorhomeMinimumLength()}} metres.
                            </div>
                        </div>
                    </label>
                </div>
                <div class="field-wrap control-wrap">
                    <label for="vehicle-motorhome-height" class="select-label">
                        Height
                    </label>
                    <select id="vehicle-motorhome-height" data-ng-model="getEditableVehicleOptions().motorhome.height"
                            data-ng-options="height as VehicleHeight.getDisplay(height) for height in getSailingVehicleSettings().vehicleHeights">
                        <option value="">Select</option>
                    </select>
                </div>

                <h2>Towing a caravan or trailer?</h2>
                <div class="radio-group radio-vertical vertical-control-group icon-group text-left field-wrap control-wrap">
                    <div data-ng-repeat="towingType in getSailingVehicleSettings().towingTypes">
                        <label data-ng-class="{'active': getEditableVehicleOptions().motorhome.towedVehicle.type === towingType, 'first': $first}">
                            <input type="radio" data-ng-model="getEditableVehicleOptions().motorhome.towedVehicle.type" data-ng-value="towingType" />
                            <span class="radiobtn"></span> {{TowedVehicleType.getDisplay(towingType)}} <i class="help" data-ng-if="towingType === TowedVehicleType.Trailer" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="left" data-tooltip-content="{{IbpCms.vehiclesTrailerDescription}}"></i>
                            <div class="towing-icon" data-ng-class="towingType" data-ng-bind-html="getEditableVehicleOptions().getIconForVehicleTowedType(towingType) | asRawHtml"></div>
                        </label>
                    </div>
                </div>
                <div data-ng-if="getEditableVehicleOptions().motorhome.towedVehicle.type === TowedVehicleType.Caravan || getEditableVehicleOptions().motorhome.towedVehicle.type === TowedVehicleType.Trailer" class="control-wrap">
                    <div class="field-wrap errorable" data-ng-class="{'is-invalid': showVehicleLengthError()}">
                        <label for="motorhomeTowedLength" class="towed-input">
                            Length of caravan/trailer (including drawbar)
                            <div>
                                <div class="input-wrap input-border">
                                    <input type="number" name="motorhomeTowedLength" id="motorhomeTowedLength" class="input-text" data-ng-model="getEditableVehicleOptions().motorhome.towedVehicle.length" data-only-numbers data-only-numbers-allow-decimals="true" />
                                </div>
                                <div class="towed-measurement">metres</div>
                            </div>
                            <div class="validate-positioner" data-ng-class="{'msg-inactive': !showVehicleLengthError()}">
                                <div class="input-message-validate invalid pos-bottom tip-center">
                                    Total length cannot exceed {{getVehicleMaxTotalLength()}} metres.<br />Please call 1800 884 305 to complete your booking.
                                </div>
                            </div>
                        </label>
                    </div>
                    <div class="field-wrap">
                        <label for="motorhome-towed-height" class="select-label">
                            Height
                        </label>
                        <select id="motorhome-towed-height" data-ng-model="getEditableVehicleOptions().motorhome.towedVehicle.height"
                                data-ng-options="height as VehicleHeight.getDisplay(height) for height in getSailingVehicleSettings().vehicleHeights">
                            <option value="">Select</option>
                        </select>
                    </div>
                    <div class="text-center field-wrap vertical-control-group">
                        <label class="first" data-ng-class="{'active': getEditableVehicleOptions().motorhome.towedVehicle.isFifthWheeler}">
                            <input type="checkbox" data-ng-model="getEditableVehicleOptions().motorhome.towedVehicle.isFifthWheeler" />
                            <span class="checkbox"></span> Fifth wheeler
                        </label>
                        <div class="fifth-wheeler-notice" data-ng-class="{'active': getEditableVehicleOptions().motorhome.towedVehicle.isFifthWheeler}">{{IbpCms.vehiclesFifthWheelerNotice}}</div>
                    </div>
                </div>
            </div>
        </div>
        <div data-ng-if="isTakingAVehicleType(TakingAVehicleType.Yes)" class="text-center internal-action-bar">
            <button class="link-button" data-ng-click="addAnotherVehicle()"
                    data-ng-if="canAddVehicle() && !isAddingOrEditingVehicle()">
                + Add another vehicle
            </button>
            <button class="link-button" data-ng-click="addAnotherVehicle()"
                    data-ng-if="canAddAnotherVehicle() && isAdding() && isEditingVehicleValid()">
                + Add another vehicle
            </button>
            <button class="link-button" data-ng-click="cancelAddingVehicle()"
                    data-ng-if="isAdding() && hasVehicles()">
                Cancel
            </button>
            <button class="link-button" data-ng-click="cancelEditVehicle()"
                    data-ng-if="isEditing()">
                Undo Vehicle Editing
            </button>
        </div>
    </form>
</div>

<div class="next-step sticky-step stuck" data-ng-if="isContinueButtonVisible(legOfJourney)">
    <button data-ng-disabled="isContinueButtonDisabled()"
            data-ng-hide="isLoadingPrices()"
            data-ng-click="continueToNextStep()"
            class="ng-animate-disabled button primary">
        {{ (isAddingOrEditingVehicle() && !isEditingVehicleValid()) ? IbpCms.vehiclesVehicleIncompleteButtonPlaceholder : 'Continue' }}
    </button>
    <span class="results-loading" data-ng-show="isLoadingPrices()">
        <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
    </span>
</div>

                        </div>
                    </div>

                    <div id="fare-app" class="ibp-app-component" data-ng-if="workflowState.isOnFareOrAccommodationStep()" data-ng-controller="fareController" data-ng-cloak>
                        
                        <div data-ng-controller="fareSailingController"
                             data-ng-if="!!booking.outboundSailing"
                             data-ng-init="legOfJourney = LegOfJourney.Outbound"
                             class="accommodation-build-ticket choose-outbound-fare"
                             data-ng-cloak>
                            <div class="ibp-section fare-section"
     data-date-view-mode-auto-breakpoint="setSelectedDateViewMode"
     data-selected-date-view-mode="getSailingDateViewMode"
     data-price-refresh-hook="refreshPrices">
    <div id="deal-alert" data-ng-if="displayInvalidDealAlert">
        <div class="deal-alert-title">
            <i class="fa fa-warning"></i> <span data-ng-bind="invalidDealAlertTitle"></span>
        </div>
        <div>
            <span data-ng-bind="invalidDealAlert"></span>
        </div>

    </div>
    <div class="section-heading">Select {{legOfJourney.toLowerCase()}} date</div>
    <h3>
        <span data-ng-if="getTotalMinimumPriceAdvice().canTravelForBasePrice === false">
            {{ IbpCms.fareTotalMinimumPrice.replace('%LEGOFJOURNEY%', legOfJourney.toLowerCase()) }} <span class="total-minimum-price-value">${{getTotalMinimumPriceAdvice().totalMinimumPrice}}</span>
            <i class="help" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="left" data-tooltip-content="{{getTotalMinimumPriceHelpText()}}"></i>
        </span>
    </h3>

    <div data-ng-if="showFaresRunningOutText()" class="fares-running-out">
        <div>
    <div class="hurry" data-ng-bind-html="Resources.iconHurryClock | asRawHtml">
    </div>
    {{ IbpCms.fareNotManyPlacesLeftAtThisPriceMessage }}
</div>

    </div>

    <div data-ab-test-campaign="NumberOfPeopleViewing" data-ab-test-variation-if="ShowNumberOfPeopleViewing" data-ng-if="getNumberOfPeopleViewing() > 0" class="people-looking-at-these-dates">
        <div class="binoculars" data-ng-bind-html="Resources.iconBinoculars | asRawHtml"></div>
        <span>{{getNumberOfPeopleViewingText()}}</span>
    </div>

    <div id="view-controls" class="clearfix">
        <div class="legend">
            <div class="deals-available-indicator" data-ng-class="{'visible': prices.areDealsAvailable(legOfJourney) && getSailing().areDealsVisible()}">
                <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
                {{getDealAvailableText()}}
            </div>
        </div>
        <div id="view-toggle" data-ng-class="{'no-deal-adjust': !(prices.areDealsAvailable(legOfJourney) && getSailing().areDealsVisible())}">
            <select class="fare-price-selector"
                    data-ng-model="getSailing().productViewMode"
                    data-ng-options="mode as mode for mode in productViewModes"
                    data-ng-change="changeFareType('{{getSailing().productViewMode}}')"></select>
            <ul>
                <li class="{{mode.toLowerCase() + '-toggle'}}"
                    data-ng-repeat="mode in dateViewModes"
                    data-ng-class="{'active': getSailingDateViewMode() === mode}"
                    data-ng-click="switchDateViewMode(mode)">
                    {{mode}}
                </li>
            </ul>
        </div>
        <select class="month-selector"
                data-ng-class="{'no-deal-adjust': !(prices.areDealsAvailable(legOfJourney) && getSailing().areDealsVisible())}"
                data-ng-model="getSailing().monthYear"
                data-ng-options="month.actualValue as month.displayValue for month in search.searchSettings.monthSelector.options"
                data-ng-change="refreshPrices()"></select>
    </div>

    <div class="fare-calendar clearfix" data-ng-class="{'no-deal-adjust': !(prices.areDealsAvailable(legOfJourney) && getSailing().areDealsVisible())}" data-fare-calendar-fluid>
        <div class="results-loading" data-ng-show="isRetrievingPrices()">
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"
                 data-ng-class="{'month': getSailingDateViewMode() === DateViewMode.Month}" />
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"
                 data-ng-class="{'month': getSailingDateViewMode() === DateViewMode.Month}" />
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"
                 data-ng-class="{'month': getSailingDateViewMode() === DateViewMode.Month}" />
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"
                 data-ng-class="{'month': getSailingDateViewMode() === DateViewMode.Month}" />
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"
                 data-ng-class="{'month': getSailingDateViewMode() === DateViewMode.Month}" />
        </div>
        <div class="calendar-arrow arrow-left"
             data-ng-class="{'day-mode': getSailingDateViewMode() === DateViewMode.Day, 'week-mode': getSailingDateViewMode() === DateViewMode.Week, 'month-mode': getSailingDateViewMode() === DateViewMode.Month, 'disabled': isPreviousDatesButtonDisabled() }"
             data-ng-click="getPreviousDates()"
             data-ng-bind-html="Resources.iconArrowLeft | asRawHtml"
             
             data-ng-hide="getSailingDateViewMode() === DateViewMode.Month"></div><div class="calendar-wrapper clearfix" data-ng-class="{'day-mode': getSailingDateViewMode() === DateViewMode.Day, 'week-mode': getSailingDateViewMode() === DateViewMode.Week, 'month-mode': getSailingDateViewMode() === DateViewMode.Month}">
            <div class="track">
                <ul class="results clearfix"
                    data-ng-repeat="priceChunk in prices.getSelectedPrices(legOfJourney)" data-ng-class="{'day-mode': getSailingDateViewMode() === DateViewMode.Day, 'week-mode': getSailingDateViewMode() === DateViewMode.Week, 'month-mode': getSailingDateViewMode() === DateViewMode.Month, 'slide-direction-reversed': isSlideDirectionReversed}">
                    <li class="next-day-sailing-wrapper" data-ng-if="!hasDaySailings() && !isRetrievingPrices()" data-ng-repeat="i in Utils.getRange(0, 5) track by $index">
                        <table class="next-day-sailing">
                            <tr>
                                <td class="previous-sailing">
                                    <div data-ng-show="!!getPrevDaySailingDate()" data-ng-click="selectSailingFromDate(getPrevDaySailingDate())">
                                        <div class="arrow" data-ng-bind-html="Resources.iconArrowLeft | asRawHtml"></div>
                                        Previous day sailing {{Utils.dateFormat(getPrevDaySailingDate(), 'MMM DD')}}
                                    </div>
                                </td>
                                <td class="centre-message">
                                    <div>
                                        <div class="message">
                                            <div class="sun" data-ng-bind-html="Resources.iconSun | asRawHtml"></div>
                                            <div>
                                                No day sailings <span class="during-this-period">during this period</span>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="next-sailing">
                                    <div data-ng-show="!!getNextDaySailingDate()" data-ng-click="selectSailingFromDate(getNextDaySailingDate())">
                                        <div class="arrow" data-ng-bind-html="Resources.iconArrowRight | asRawHtml"></div>
                                        Next day sailing {{Utils.dateFormat(getNextDaySailingDate(), 'MMM DD')}}
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </li>
                    <li class="result" data-ng-class="{'active': Utils.dateStringsEqual(date.date, booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime), 'past': isBeforeBaseDate(date.date)}" data-ng-repeat="date in priceChunk track by $index"
                        ng-style="{'width': getFareItemWidth(priceChunk.length) + '%'}" ng-show="shouldShowSailingDate($index)">
                        <div class="date">
                            <span class="day">{{Utils.dateFormat(date.date, 'ddd').toUpperCase()}}</span><span class="day-of-month">
                                {{Utils.dateFormat(date.date, 'DD')}}
                                <span class="month-string">
                                    {{Utils.dateFormat(date.date, 'MMM').toUpperCase()}}
                                </span>
                            </span>
                        </div>
                        <ul class="sailings">
                            <li class="day-sailing no-sail" data-ng-if="date.daySailings.length < 1">
                                <div class="no-sail-icon no-day" data-ng-show="!isRetrievingPrices()" data-ng-bind-html="Resources.iconSun | asRawHtml"></div>
                                <div class="message" data-ng-show="!isRetrievingPrices()">No day <div class="break">sailing</div></div>
                            </li>
                            <li class="day-sailing" data-ng-if="date.daySailings.length > 0"
                                data-ng-repeat="sailingPriceSet in date.daySailings"
                                data-ng-class="{
                                    'active': booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime,
                                    'unavailable': !sailingPriceSet,
                                    'sailing-sold-out': showGeneralSoldOut(sailingPriceSet),
                                    'no-vehicles': sailingPriceSet.soldOutReason === SoldOutReason.Vehicles || sailingPriceSet.soldOutReason === SoldOutReason.Pushbikes,
                                    'no-pets': sailingPriceSet.soldOutReason === SoldOutReason.Pets
                                }">
                                <div data-ng-class="{'red-hot-fare': showSpecialFareText(sailingPriceSet)}">
    <!-- Hover mini breakdown -->
    <div class="click-absorber touch-disabled"
         data-ng-class="{active: booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime}"
         data-mini-breakdown-positioner="showMiniBreakdown"
         data-mini-breakdown-hider="hideMiniBreakdown"
         data-ng-if="!showGeneralSoldOut(sailingPriceSet)"
         data-ng-mouseover="setMiniBreakdownSet(getSailing(), sailingPriceSet); showMiniBreakdown(getSailingPriceSetProductType(sailingPriceSet))"
         data-ng-mouseleave="hideMiniBreakdown()"
         data-ng-click="selectSailing(sailingPriceSet)"></div>
    <div class="click-absorber touch-enabled"
         data-ng-class="{active: booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime}"
         data-ng-click="selectSailing(sailingPriceSet)"></div>
    <!-- Departure Time -->
    <div class="time" data-ng-class="{'not-red-hot-fare': !showRedHotText(sailingPriceSet), 'vehicle-or-pet-sold-out': sailingPriceSet.isSoldOut}"
         data-ng-if="!showGeneralSoldOut(sailingPriceSet)">
        <span>{{Utils.dateFormat(sailingPriceSet.departureDateTime, 'h:mm A')}}</span>
    </div>
    <!-- Price -->
    <div class="price">
        <div class="hurry" data-ng-if="showRunningOut(sailingPriceSet)" data-ng-bind-html="Resources.iconHurryClock | asRawHtml"></div>
        <span data-ng-if="canShowPrice(sailingPriceSet)" class="refundable-price">
            {{getFareTotalPrice(sailingPriceSet)}}
            <span data-ng-if="getPriceDifferenceAmountText(sailingPriceSet)">
                <br/>
                {{ getPriceDifferenceAmountText(sailingPriceSet) }}
            </span>
        </span>
        <!-- Passengers sold out -->
        <div data-ng-if="showGeneralSoldOut(sailingPriceSet)">
            <div class="no-sail-icon" data-ng-bind-html="Resources.iconNoSail | asRawHtml"></div>
            <div class="message" data-ng-if="!Utils.timeAtNight(sailingPriceSet.departureDateTime)">
                <div class="break">Day</div>sold out
            </div>
            <div class="message" data-ng-if="Utils.timeAtNight(sailingPriceSet.departureDateTime)">
                <div class="break">Night</div>sold out
            </div>
        </div>
        <!-- Vehicle sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Vehicles">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailableVehicle | asRawHtml"></div>
        </div>
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.VehiclesWithLowCarAvailability">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailableVehicle | asRawHtml"></div>
        </div>
        <!-- Pets sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Pets">
            <div class="unavailable-pets" data-ng-bind-html="Resources.iconUnavailablePets | asRawHtml"></div>
        </div>
        <!-- Pushbikes sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Pushbikes">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailablePushbike | asRawHtml"></div>
        </div>
    </div>
    <div class="fare-price" data-ng-if="showSpecialFareText(sailingPriceSet)">
        <span class="redht">Special Fare</span>
    </div>

    <div class="ribbon" data-ng-if="getSailing().areDealsVisible() && !!sailingPriceSet && sailingPriceSet.restrictedProductCodes.length > 0" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
</div>

                            </li>
                            <li class="night-sailing" data-ng-if="date.nightSailings.length > 0"
                                data-ng-repeat="sailingPriceSet in date.nightSailings"
                                data-ng-class="{
                                    'active': booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime,
                                    'unavailable': !sailingPriceSet,
                                    'sailing-sold-out': showGeneralSoldOut(sailingPriceSet),
                                    'no-vehicles': sailingPriceSet.soldOutReason === SoldOutReason.Vehicles || sailingPriceSet.soldOutReason === SoldOutReason.Pushbikes,
                                    'no-pets': sailingPriceSet.soldOutReason === SoldOutReason.Pets
                                }">
                                <div data-ng-class="{'red-hot-fare': showSpecialFareText(sailingPriceSet)}">
    <!-- Hover mini breakdown -->
    <div class="click-absorber touch-disabled"
         data-ng-class="{active: booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime}"
         data-mini-breakdown-positioner="showMiniBreakdown"
         data-mini-breakdown-hider="hideMiniBreakdown"
         data-ng-if="!showGeneralSoldOut(sailingPriceSet)"
         data-ng-mouseover="setMiniBreakdownSet(getSailing(), sailingPriceSet); showMiniBreakdown(getSailingPriceSetProductType(sailingPriceSet))"
         data-ng-mouseleave="hideMiniBreakdown()"
         data-ng-click="selectSailing(sailingPriceSet)"></div>
    <div class="click-absorber touch-enabled"
         data-ng-class="{active: booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime}"
         data-ng-click="selectSailing(sailingPriceSet)"></div>
    <!-- Departure Time -->
    <div class="time" data-ng-class="{'not-red-hot-fare': !showRedHotText(sailingPriceSet), 'vehicle-or-pet-sold-out': sailingPriceSet.isSoldOut}"
         data-ng-if="!showGeneralSoldOut(sailingPriceSet)">
        <span>{{Utils.dateFormat(sailingPriceSet.departureDateTime, 'h:mm A')}}</span>
    </div>
    <!-- Price -->
    <div class="price">
        <div class="hurry" data-ng-if="showRunningOut(sailingPriceSet)" data-ng-bind-html="Resources.iconHurryClock | asRawHtml"></div>
        <span data-ng-if="canShowPrice(sailingPriceSet)" class="refundable-price">
            {{getFareTotalPrice(sailingPriceSet)}}
            <span data-ng-if="getPriceDifferenceAmountText(sailingPriceSet)">
                <br/>
                {{ getPriceDifferenceAmountText(sailingPriceSet) }}
            </span>
        </span>
        <!-- Passengers sold out -->
        <div data-ng-if="showGeneralSoldOut(sailingPriceSet)">
            <div class="no-sail-icon" data-ng-bind-html="Resources.iconNoSail | asRawHtml"></div>
            <div class="message" data-ng-if="!Utils.timeAtNight(sailingPriceSet.departureDateTime)">
                <div class="break">Day</div>sold out
            </div>
            <div class="message" data-ng-if="Utils.timeAtNight(sailingPriceSet.departureDateTime)">
                <div class="break">Night</div>sold out
            </div>
        </div>
        <!-- Vehicle sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Vehicles">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailableVehicle | asRawHtml"></div>
        </div>
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.VehiclesWithLowCarAvailability">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailableVehicle | asRawHtml"></div>
        </div>
        <!-- Pets sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Pets">
            <div class="unavailable-pets" data-ng-bind-html="Resources.iconUnavailablePets | asRawHtml"></div>
        </div>
        <!-- Pushbikes sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Pushbikes">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailablePushbike | asRawHtml"></div>
        </div>
    </div>
    <div class="fare-price" data-ng-if="showSpecialFareText(sailingPriceSet)">
        <span class="redht">Special Fare</span>
    </div>

    <div class="ribbon" data-ng-if="getSailing().areDealsVisible() && !!sailingPriceSet && sailingPriceSet.restrictedProductCodes.length > 0" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
</div>

                            </li>
                            <li class="night-sailing no-sail" data-ng-if="date.nightSailings.length < 1">
                                <div class="no-sail-icon no-night" data-ng-show="!isRetrievingPrices()" data-ng-bind-html="Resources.iconMoon | asRawHtml"></div>
                                <div class="message" data-ng-show="!isRetrievingPrices()">No night <div class="break">sailing</div></div>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
            
        </div><div class="calendar-arrow arrow-right"
                   data-ng-click="getNextDates()"
                   data-ng-bind-html="Resources.iconArrowRight | asRawHtml"
                   data-ng-class="{'day-mode': getSailingDateViewMode() === DateViewMode.Day, 'week-mode': getSailingDateViewMode() === DateViewMode.Week, 'month-mode': getSailingDateViewMode() === DateViewMode.Month}"
                   data-ng-hide="getSailingDateViewMode() === DateViewMode.Month"></div>
    </div>
    <div class="accommodation-availability clearfix no-select"
         data-pulse-on-trigger="triggerAccommodationPulse" data-duration="3000"
         data-ng-class="{'invisible': isRetrievingPrices() || !booking.getSelectedSailingPriceSet(legOfJourney)}"
         data-ng-if="isAccommodationAvailabilityVisible()">
        <div data-ng-controller="fareAccommodationBoxController">
            <div>
                <h4 class="text-center">
                    Accommodation availability &ndash; {{booking.getDepartureDate(legOfJourney, 'dddd D MMMM')}} at {{booking.getDepartureDate(legOfJourney, 'HH:mm')}}
                </h4>
                <ul>
                    <li data-ng-repeat="option in accommodationAvailabilityItems">
                        <h5>{{option.displayText}}</h5>
                        <span data-ng-if="showAmOnlyDayTicketFlag(option.categoryCode)" class="no-price">AM only</span>
                        <span data-ng-if="showPetsOnlyFlag(option.categoryCode)" class="no-price">Pets only</span>

                        <div data-ng-if="showSoldOutFlag(option)
                             && !showAmOnlyDayTicketFlag(option.categoryCode) && !showPetsOnlyFlag(option.categoryCode)"
                             class="no-price">
                            Sold out
                        </div>

                        <div data-ng-if="!showSoldOutFlag(option)" class="price-available">
                            <div data-ng-if="option.categoryCode !== AccommodationCode.Day" class="price price-available">
                                <span data-ng-if="!option.categoryCode">From </span>
                                <span>${{getCheapestPrice(option)}}</span>
                                <span data-ng-if="option.categoryCode !== AccommodationCode.Day" class="price-available">per {{option.unitText}}</span>
                            </div>
                            <div data-ng-if="option.categoryCode === AccommodationCode.Day" class="price no-price">Included</div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="ibp-spirit-tip clearfix fare-spirit-tip" data-ng-show="showCotSoldOutSpiritTip()" data-ng-cloak>
        <div class="section-row">
            <div class="info">
                <div class="title-section">
                    
<svg xmlns="http://www.w3.org/2000/svg" class="icon-custom lightbulb" x="0" y="0" viewBox="-276 395.9 42 50" enable-background="new -276 395.9 42 50" xml:space="preserve"><g transform="translate(-260.000000, -2305.000000)"><g transform="translate(210.000000, 2260.000000)"><g transform="translate(50.000000, 45.000000)"><path fill="#0BC3FF" d="M-250.1 435.3h-9.6c-0.7 0-1.2 0.5-1.2 1.2 0 0.6 0.5 1.2 1.2 1.2h9.6c0.7 0 1.2-0.5 1.2-1.2C-248.9 435.9-249.4 435.3-250.1 435.3L-250.1 435.3zM-250.3 439.2h-9.1c-0.7 0-1.2 0.5-1.2 1.2 0 0.6 0.5 1.2 1.2 1.2h9.1c0.7 0 1.2-0.5 1.2-1.2C-249.1 439.8-249.7 439.2-250.3 439.2L-250.3 439.2zM-259.4 443.1c2.4 2.1 2.6 2.5 3.6 2.5h1.8c0.9 0 1.2-0.4 3.6-2.5H-259.4L-259.4 443.1zM-258.4 433.6h-3.3c0-6.3-7.1-10.7-7.1-18.7 0-17.1 27.7-17.1 27.7 0 0 8-7.1 12.4-7.1 18.7H-258.4L-258.4 433.6zM-253.2 397.7c0 0.8-0.7 1.5-1.7 1.5 -0.9 0-1.7-0.7-1.7-1.5s0.7-1.5 1.7-1.5C-253.9 396.1-253.2 396.8-253.2 397.7M-244 400.4c0.4-0.8 0.1-1.7-0.7-2.1 -0.8-0.4-1.8-0.1-2.2 0.6 -0.4 0.8-0.1 1.7 0.7 2.1C-245.4 401.4-244.4 401.1-244 400.4M-237.3 407.2c0.7-0.5 0.9-1.5 0.3-2.2 -0.5-0.7-1.6-0.9-2.3-0.4 -0.7 0.5-0.9 1.5-0.3 2.2C-239.1 407.5-238.1 407.7-237.3 407.2M-236.1 425c0.3-0.8-0.1-1.8-1-2.1s-1.9 0.1-2.2 0.9c-0.3 0.8 0.1 1.8 1 2.1C-237.5 426.2-236.4 425.8-236.1 425M-234.1 414.9c0-0.9-0.8-1.6-1.7-1.6 -0.9 0-1.7 0.7-1.7 1.6 0 0.9 0.8 1.6 1.7 1.6C-234.9 416.5-234.1 415.8-234.1 414.9M-263.7 401c0.8-0.4 1.1-1.4 0.7-2.1 -0.4-0.7-1.4-1-2.2-0.6 -0.8 0.4-1.1 1.4-0.7 2.1C-265.5 401.1-264.5 401.4-263.7 401M-270.3 406.8c0.5-0.7 0.4-1.7-0.4-2.2 -0.7-0.5-1.8-0.3-2.3 0.4 -0.5 0.7-0.4 1.7 0.4 2.2C-271.8 407.7-270.8 407.5-270.3 406.8M-271.4 425.7c0.9-0.4 1.3-1.3 0.9-2.1 -0.4-0.8-1.4-1.2-2.2-0.8 -0.9 0.4-1.3 1.3-0.9 2.1C-273.3 425.7-272.3 426-271.4 425.7M-272.3 414.9c0-0.9-0.8-1.6-1.7-1.6 -0.9 0-1.7 0.7-1.7 1.6 0 0.9 0.8 1.6 1.7 1.6C-273.1 416.5-272.3 415.8-272.3 414.9" /></g></g></g></svg>
                    Spirit Tip
                </div>
            </div>
            <div class="message">
                {{IbpCms.accommodationSpiritTipCotSoldOut}}
            </div>
        </div>
    </div>
    <h3>
        {{ getFareDescription() }}<br />
        {{ IbpCms.fareAdditionalDescription }}
    </h3>
    <div class="current-date-notice">
    </div>
</div>

<!--Continue to next step-->
<div class="next-step sticky-step stuck" data-ng-if="(legOfJourney === LegOfJourney.Outbound && workflowState.isOnOutboundFareStep()) || (legOfJourney === LegOfJourney.Return && workflowState.isOnReturnFareStep())">
    <button class="continue button primary ng-animate-disabled"
            data-ng-click="continueFromFareForLeg()" data-ng-disabled="!canContinueToAccommodation()">
        Continue
    </button>
</div>
                        </div>

                        
                        <div data-ng-controller="fareSailingController"
                             data-ng-if="!!booking.returnSailing"
                             data-ng-init="legOfJourney = LegOfJourney.Return"
                             data-ng-show="!workflowState.isOnOutboundFareStep()"
                             class="accommodation-build-ticket choose-return-fare">
                            <div class="ibp-section fare-section"
     data-date-view-mode-auto-breakpoint="setSelectedDateViewMode"
     data-selected-date-view-mode="getSailingDateViewMode"
     data-price-refresh-hook="refreshPrices">
    <div id="deal-alert" data-ng-if="displayInvalidDealAlert">
        <div class="deal-alert-title">
            <i class="fa fa-warning"></i> <span data-ng-bind="invalidDealAlertTitle"></span>
        </div>
        <div>
            <span data-ng-bind="invalidDealAlert"></span>
        </div>

    </div>
    <div class="section-heading">Select {{legOfJourney.toLowerCase()}} date</div>
    <h3>
        <span data-ng-if="getTotalMinimumPriceAdvice().canTravelForBasePrice === false">
            {{ IbpCms.fareTotalMinimumPrice.replace('%LEGOFJOURNEY%', legOfJourney.toLowerCase()) }} <span class="total-minimum-price-value">${{getTotalMinimumPriceAdvice().totalMinimumPrice}}</span>
            <i class="help" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="left" data-tooltip-content="{{getTotalMinimumPriceHelpText()}}"></i>
        </span>
    </h3>

    <div data-ng-if="showFaresRunningOutText()" class="fares-running-out">
        <div>
    <div class="hurry" data-ng-bind-html="Resources.iconHurryClock | asRawHtml">
    </div>
    {{ IbpCms.fareNotManyPlacesLeftAtThisPriceMessage }}
</div>

    </div>

    <div data-ab-test-campaign="NumberOfPeopleViewing" data-ab-test-variation-if="ShowNumberOfPeopleViewing" data-ng-if="getNumberOfPeopleViewing() > 0" class="people-looking-at-these-dates">
        <div class="binoculars" data-ng-bind-html="Resources.iconBinoculars | asRawHtml"></div>
        <span>{{getNumberOfPeopleViewingText()}}</span>
    </div>

    <div id="view-controls" class="clearfix">
        <div class="legend">
            <div class="deals-available-indicator" data-ng-class="{'visible': prices.areDealsAvailable(legOfJourney) && getSailing().areDealsVisible()}">
                <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
                {{getDealAvailableText()}}
            </div>
        </div>
        <div id="view-toggle" data-ng-class="{'no-deal-adjust': !(prices.areDealsAvailable(legOfJourney) && getSailing().areDealsVisible())}">
            <select class="fare-price-selector"
                    data-ng-model="getSailing().productViewMode"
                    data-ng-options="mode as mode for mode in productViewModes"
                    data-ng-change="changeFareType('{{getSailing().productViewMode}}')"></select>
            <ul>
                <li class="{{mode.toLowerCase() + '-toggle'}}"
                    data-ng-repeat="mode in dateViewModes"
                    data-ng-class="{'active': getSailingDateViewMode() === mode}"
                    data-ng-click="switchDateViewMode(mode)">
                    {{mode}}
                </li>
            </ul>
        </div>
        <select class="month-selector"
                data-ng-class="{'no-deal-adjust': !(prices.areDealsAvailable(legOfJourney) && getSailing().areDealsVisible())}"
                data-ng-model="getSailing().monthYear"
                data-ng-options="month.actualValue as month.displayValue for month in search.searchSettings.monthSelector.options"
                data-ng-change="refreshPrices()"></select>
    </div>

    <div class="fare-calendar clearfix" data-ng-class="{'no-deal-adjust': !(prices.areDealsAvailable(legOfJourney) && getSailing().areDealsVisible())}" data-fare-calendar-fluid>
        <div class="results-loading" data-ng-show="isRetrievingPrices()">
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"
                 data-ng-class="{'month': getSailingDateViewMode() === DateViewMode.Month}" />
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"
                 data-ng-class="{'month': getSailingDateViewMode() === DateViewMode.Month}" />
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"
                 data-ng-class="{'month': getSailingDateViewMode() === DateViewMode.Month}" />
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"
                 data-ng-class="{'month': getSailingDateViewMode() === DateViewMode.Month}" />
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"
                 data-ng-class="{'month': getSailingDateViewMode() === DateViewMode.Month}" />
        </div>
        <div class="calendar-arrow arrow-left"
             data-ng-class="{'day-mode': getSailingDateViewMode() === DateViewMode.Day, 'week-mode': getSailingDateViewMode() === DateViewMode.Week, 'month-mode': getSailingDateViewMode() === DateViewMode.Month, 'disabled': isPreviousDatesButtonDisabled() }"
             data-ng-click="getPreviousDates()"
             data-ng-bind-html="Resources.iconArrowLeft | asRawHtml"
             
             data-ng-hide="getSailingDateViewMode() === DateViewMode.Month"></div><div class="calendar-wrapper clearfix" data-ng-class="{'day-mode': getSailingDateViewMode() === DateViewMode.Day, 'week-mode': getSailingDateViewMode() === DateViewMode.Week, 'month-mode': getSailingDateViewMode() === DateViewMode.Month}">
            <div class="track">
                <ul class="results clearfix"
                    data-ng-repeat="priceChunk in prices.getSelectedPrices(legOfJourney)" data-ng-class="{'day-mode': getSailingDateViewMode() === DateViewMode.Day, 'week-mode': getSailingDateViewMode() === DateViewMode.Week, 'month-mode': getSailingDateViewMode() === DateViewMode.Month, 'slide-direction-reversed': isSlideDirectionReversed}">
                    <li class="next-day-sailing-wrapper" data-ng-if="!hasDaySailings() && !isRetrievingPrices()" data-ng-repeat="i in Utils.getRange(0, 5) track by $index">
                        <table class="next-day-sailing">
                            <tr>
                                <td class="previous-sailing">
                                    <div data-ng-show="!!getPrevDaySailingDate()" data-ng-click="selectSailingFromDate(getPrevDaySailingDate())">
                                        <div class="arrow" data-ng-bind-html="Resources.iconArrowLeft | asRawHtml"></div>
                                        Previous day sailing {{Utils.dateFormat(getPrevDaySailingDate(), 'MMM DD')}}
                                    </div>
                                </td>
                                <td class="centre-message">
                                    <div>
                                        <div class="message">
                                            <div class="sun" data-ng-bind-html="Resources.iconSun | asRawHtml"></div>
                                            <div>
                                                No day sailings <span class="during-this-period">during this period</span>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="next-sailing">
                                    <div data-ng-show="!!getNextDaySailingDate()" data-ng-click="selectSailingFromDate(getNextDaySailingDate())">
                                        <div class="arrow" data-ng-bind-html="Resources.iconArrowRight | asRawHtml"></div>
                                        Next day sailing {{Utils.dateFormat(getNextDaySailingDate(), 'MMM DD')}}
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </li>
                    <li class="result" data-ng-class="{'active': Utils.dateStringsEqual(date.date, booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime), 'past': isBeforeBaseDate(date.date)}" data-ng-repeat="date in priceChunk track by $index"
                        ng-style="{'width': getFareItemWidth(priceChunk.length) + '%'}" ng-show="shouldShowSailingDate($index)">
                        <div class="date">
                            <span class="day">{{Utils.dateFormat(date.date, 'ddd').toUpperCase()}}</span><span class="day-of-month">
                                {{Utils.dateFormat(date.date, 'DD')}}
                                <span class="month-string">
                                    {{Utils.dateFormat(date.date, 'MMM').toUpperCase()}}
                                </span>
                            </span>
                        </div>
                        <ul class="sailings">
                            <li class="day-sailing no-sail" data-ng-if="date.daySailings.length < 1">
                                <div class="no-sail-icon no-day" data-ng-show="!isRetrievingPrices()" data-ng-bind-html="Resources.iconSun | asRawHtml"></div>
                                <div class="message" data-ng-show="!isRetrievingPrices()">No day <div class="break">sailing</div></div>
                            </li>
                            <li class="day-sailing" data-ng-if="date.daySailings.length > 0"
                                data-ng-repeat="sailingPriceSet in date.daySailings"
                                data-ng-class="{
                                    'active': booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime,
                                    'unavailable': !sailingPriceSet,
                                    'sailing-sold-out': showGeneralSoldOut(sailingPriceSet),
                                    'no-vehicles': sailingPriceSet.soldOutReason === SoldOutReason.Vehicles || sailingPriceSet.soldOutReason === SoldOutReason.Pushbikes,
                                    'no-pets': sailingPriceSet.soldOutReason === SoldOutReason.Pets
                                }">
                                <div data-ng-class="{'red-hot-fare': showSpecialFareText(sailingPriceSet)}">
    <!-- Hover mini breakdown -->
    <div class="click-absorber touch-disabled"
         data-ng-class="{active: booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime}"
         data-mini-breakdown-positioner="showMiniBreakdown"
         data-mini-breakdown-hider="hideMiniBreakdown"
         data-ng-if="!showGeneralSoldOut(sailingPriceSet)"
         data-ng-mouseover="setMiniBreakdownSet(getSailing(), sailingPriceSet); showMiniBreakdown(getSailingPriceSetProductType(sailingPriceSet))"
         data-ng-mouseleave="hideMiniBreakdown()"
         data-ng-click="selectSailing(sailingPriceSet)"></div>
    <div class="click-absorber touch-enabled"
         data-ng-class="{active: booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime}"
         data-ng-click="selectSailing(sailingPriceSet)"></div>
    <!-- Departure Time -->
    <div class="time" data-ng-class="{'not-red-hot-fare': !showRedHotText(sailingPriceSet), 'vehicle-or-pet-sold-out': sailingPriceSet.isSoldOut}"
         data-ng-if="!showGeneralSoldOut(sailingPriceSet)">
        <span>{{Utils.dateFormat(sailingPriceSet.departureDateTime, 'h:mm A')}}</span>
    </div>
    <!-- Price -->
    <div class="price">
        <div class="hurry" data-ng-if="showRunningOut(sailingPriceSet)" data-ng-bind-html="Resources.iconHurryClock | asRawHtml"></div>
        <span data-ng-if="canShowPrice(sailingPriceSet)" class="refundable-price">
            {{getFareTotalPrice(sailingPriceSet)}}
            <span data-ng-if="getPriceDifferenceAmountText(sailingPriceSet)">
                <br/>
                {{ getPriceDifferenceAmountText(sailingPriceSet) }}
            </span>
        </span>
        <!-- Passengers sold out -->
        <div data-ng-if="showGeneralSoldOut(sailingPriceSet)">
            <div class="no-sail-icon" data-ng-bind-html="Resources.iconNoSail | asRawHtml"></div>
            <div class="message" data-ng-if="!Utils.timeAtNight(sailingPriceSet.departureDateTime)">
                <div class="break">Day</div>sold out
            </div>
            <div class="message" data-ng-if="Utils.timeAtNight(sailingPriceSet.departureDateTime)">
                <div class="break">Night</div>sold out
            </div>
        </div>
        <!-- Vehicle sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Vehicles">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailableVehicle | asRawHtml"></div>
        </div>
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.VehiclesWithLowCarAvailability">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailableVehicle | asRawHtml"></div>
        </div>
        <!-- Pets sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Pets">
            <div class="unavailable-pets" data-ng-bind-html="Resources.iconUnavailablePets | asRawHtml"></div>
        </div>
        <!-- Pushbikes sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Pushbikes">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailablePushbike | asRawHtml"></div>
        </div>
    </div>
    <div class="fare-price" data-ng-if="showSpecialFareText(sailingPriceSet)">
        <span class="redht">Special Fare</span>
    </div>

    <div class="ribbon" data-ng-if="getSailing().areDealsVisible() && !!sailingPriceSet && sailingPriceSet.restrictedProductCodes.length > 0" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
</div>

                            </li>
                            <li class="night-sailing" data-ng-if="date.nightSailings.length > 0"
                                data-ng-repeat="sailingPriceSet in date.nightSailings"
                                data-ng-class="{
                                    'active': booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime,
                                    'unavailable': !sailingPriceSet,
                                    'sailing-sold-out': showGeneralSoldOut(sailingPriceSet),
                                    'no-vehicles': sailingPriceSet.soldOutReason === SoldOutReason.Vehicles || sailingPriceSet.soldOutReason === SoldOutReason.Pushbikes,
                                    'no-pets': sailingPriceSet.soldOutReason === SoldOutReason.Pets
                                }">
                                <div data-ng-class="{'red-hot-fare': showSpecialFareText(sailingPriceSet)}">
    <!-- Hover mini breakdown -->
    <div class="click-absorber touch-disabled"
         data-ng-class="{active: booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime}"
         data-mini-breakdown-positioner="showMiniBreakdown"
         data-mini-breakdown-hider="hideMiniBreakdown"
         data-ng-if="!showGeneralSoldOut(sailingPriceSet)"
         data-ng-mouseover="setMiniBreakdownSet(getSailing(), sailingPriceSet); showMiniBreakdown(getSailingPriceSetProductType(sailingPriceSet))"
         data-ng-mouseleave="hideMiniBreakdown()"
         data-ng-click="selectSailing(sailingPriceSet)"></div>
    <div class="click-absorber touch-enabled"
         data-ng-class="{active: booking.getSelectedSailingPriceSet(legOfJourney).departureDateTime === sailingPriceSet.departureDateTime}"
         data-ng-click="selectSailing(sailingPriceSet)"></div>
    <!-- Departure Time -->
    <div class="time" data-ng-class="{'not-red-hot-fare': !showRedHotText(sailingPriceSet), 'vehicle-or-pet-sold-out': sailingPriceSet.isSoldOut}"
         data-ng-if="!showGeneralSoldOut(sailingPriceSet)">
        <span>{{Utils.dateFormat(sailingPriceSet.departureDateTime, 'h:mm A')}}</span>
    </div>
    <!-- Price -->
    <div class="price">
        <div class="hurry" data-ng-if="showRunningOut(sailingPriceSet)" data-ng-bind-html="Resources.iconHurryClock | asRawHtml"></div>
        <span data-ng-if="canShowPrice(sailingPriceSet)" class="refundable-price">
            {{getFareTotalPrice(sailingPriceSet)}}
            <span data-ng-if="getPriceDifferenceAmountText(sailingPriceSet)">
                <br/>
                {{ getPriceDifferenceAmountText(sailingPriceSet) }}
            </span>
        </span>
        <!-- Passengers sold out -->
        <div data-ng-if="showGeneralSoldOut(sailingPriceSet)">
            <div class="no-sail-icon" data-ng-bind-html="Resources.iconNoSail | asRawHtml"></div>
            <div class="message" data-ng-if="!Utils.timeAtNight(sailingPriceSet.departureDateTime)">
                <div class="break">Day</div>sold out
            </div>
            <div class="message" data-ng-if="Utils.timeAtNight(sailingPriceSet.departureDateTime)">
                <div class="break">Night</div>sold out
            </div>
        </div>
        <!-- Vehicle sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Vehicles">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailableVehicle | asRawHtml"></div>
        </div>
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.VehiclesWithLowCarAvailability">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailableVehicle | asRawHtml"></div>
        </div>
        <!-- Pets sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Pets">
            <div class="unavailable-pets" data-ng-bind-html="Resources.iconUnavailablePets | asRawHtml"></div>
        </div>
        <!-- Pushbikes sold out -->
        <div data-ng-if="sailingPriceSet.isSoldOut && sailingPriceSet.soldOutReason === SoldOutReason.Pushbikes">
            <div class="unavailable-vehicle" data-ng-bind-html="Resources.iconUnavailablePushbike | asRawHtml"></div>
        </div>
    </div>
    <div class="fare-price" data-ng-if="showSpecialFareText(sailingPriceSet)">
        <span class="redht">Special Fare</span>
    </div>

    <div class="ribbon" data-ng-if="getSailing().areDealsVisible() && !!sailingPriceSet && sailingPriceSet.restrictedProductCodes.length > 0" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
</div>

                            </li>
                            <li class="night-sailing no-sail" data-ng-if="date.nightSailings.length < 1">
                                <div class="no-sail-icon no-night" data-ng-show="!isRetrievingPrices()" data-ng-bind-html="Resources.iconMoon | asRawHtml"></div>
                                <div class="message" data-ng-show="!isRetrievingPrices()">No night <div class="break">sailing</div></div>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
            
        </div><div class="calendar-arrow arrow-right"
                   data-ng-click="getNextDates()"
                   data-ng-bind-html="Resources.iconArrowRight | asRawHtml"
                   data-ng-class="{'day-mode': getSailingDateViewMode() === DateViewMode.Day, 'week-mode': getSailingDateViewMode() === DateViewMode.Week, 'month-mode': getSailingDateViewMode() === DateViewMode.Month}"
                   data-ng-hide="getSailingDateViewMode() === DateViewMode.Month"></div>
    </div>
    <div class="accommodation-availability clearfix no-select"
         data-pulse-on-trigger="triggerAccommodationPulse" data-duration="3000"
         data-ng-class="{'invisible': isRetrievingPrices() || !booking.getSelectedSailingPriceSet(legOfJourney)}"
         data-ng-if="isAccommodationAvailabilityVisible()">
        <div data-ng-controller="fareAccommodationBoxController">
            <div>
                <h4 class="text-center">
                    Accommodation availability &ndash; {{booking.getDepartureDate(legOfJourney, 'dddd D MMMM')}} at {{booking.getDepartureDate(legOfJourney, 'HH:mm')}}
                </h4>
                <ul>
                    <li data-ng-repeat="option in accommodationAvailabilityItems">
                        <h5>{{option.displayText}}</h5>
                        <span data-ng-if="showAmOnlyDayTicketFlag(option.categoryCode)" class="no-price">AM only</span>
                        <span data-ng-if="showPetsOnlyFlag(option.categoryCode)" class="no-price">Pets only</span>

                        <div data-ng-if="showSoldOutFlag(option)
                             && !showAmOnlyDayTicketFlag(option.categoryCode) && !showPetsOnlyFlag(option.categoryCode)"
                             class="no-price">
                            Sold out
                        </div>

                        <div data-ng-if="!showSoldOutFlag(option)" class="price-available">
                            <div data-ng-if="option.categoryCode !== AccommodationCode.Day" class="price price-available">
                                <span data-ng-if="!option.categoryCode">From </span>
                                <span>${{getCheapestPrice(option)}}</span>
                                <span data-ng-if="option.categoryCode !== AccommodationCode.Day" class="price-available">per {{option.unitText}}</span>
                            </div>
                            <div data-ng-if="option.categoryCode === AccommodationCode.Day" class="price no-price">Included</div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="ibp-spirit-tip clearfix fare-spirit-tip" data-ng-show="showCotSoldOutSpiritTip()" data-ng-cloak>
        <div class="section-row">
            <div class="info">
                <div class="title-section">
                    
<svg xmlns="http://www.w3.org/2000/svg" class="icon-custom lightbulb" x="0" y="0" viewBox="-276 395.9 42 50" enable-background="new -276 395.9 42 50" xml:space="preserve"><g transform="translate(-260.000000, -2305.000000)"><g transform="translate(210.000000, 2260.000000)"><g transform="translate(50.000000, 45.000000)"><path fill="#0BC3FF" d="M-250.1 435.3h-9.6c-0.7 0-1.2 0.5-1.2 1.2 0 0.6 0.5 1.2 1.2 1.2h9.6c0.7 0 1.2-0.5 1.2-1.2C-248.9 435.9-249.4 435.3-250.1 435.3L-250.1 435.3zM-250.3 439.2h-9.1c-0.7 0-1.2 0.5-1.2 1.2 0 0.6 0.5 1.2 1.2 1.2h9.1c0.7 0 1.2-0.5 1.2-1.2C-249.1 439.8-249.7 439.2-250.3 439.2L-250.3 439.2zM-259.4 443.1c2.4 2.1 2.6 2.5 3.6 2.5h1.8c0.9 0 1.2-0.4 3.6-2.5H-259.4L-259.4 443.1zM-258.4 433.6h-3.3c0-6.3-7.1-10.7-7.1-18.7 0-17.1 27.7-17.1 27.7 0 0 8-7.1 12.4-7.1 18.7H-258.4L-258.4 433.6zM-253.2 397.7c0 0.8-0.7 1.5-1.7 1.5 -0.9 0-1.7-0.7-1.7-1.5s0.7-1.5 1.7-1.5C-253.9 396.1-253.2 396.8-253.2 397.7M-244 400.4c0.4-0.8 0.1-1.7-0.7-2.1 -0.8-0.4-1.8-0.1-2.2 0.6 -0.4 0.8-0.1 1.7 0.7 2.1C-245.4 401.4-244.4 401.1-244 400.4M-237.3 407.2c0.7-0.5 0.9-1.5 0.3-2.2 -0.5-0.7-1.6-0.9-2.3-0.4 -0.7 0.5-0.9 1.5-0.3 2.2C-239.1 407.5-238.1 407.7-237.3 407.2M-236.1 425c0.3-0.8-0.1-1.8-1-2.1s-1.9 0.1-2.2 0.9c-0.3 0.8 0.1 1.8 1 2.1C-237.5 426.2-236.4 425.8-236.1 425M-234.1 414.9c0-0.9-0.8-1.6-1.7-1.6 -0.9 0-1.7 0.7-1.7 1.6 0 0.9 0.8 1.6 1.7 1.6C-234.9 416.5-234.1 415.8-234.1 414.9M-263.7 401c0.8-0.4 1.1-1.4 0.7-2.1 -0.4-0.7-1.4-1-2.2-0.6 -0.8 0.4-1.1 1.4-0.7 2.1C-265.5 401.1-264.5 401.4-263.7 401M-270.3 406.8c0.5-0.7 0.4-1.7-0.4-2.2 -0.7-0.5-1.8-0.3-2.3 0.4 -0.5 0.7-0.4 1.7 0.4 2.2C-271.8 407.7-270.8 407.5-270.3 406.8M-271.4 425.7c0.9-0.4 1.3-1.3 0.9-2.1 -0.4-0.8-1.4-1.2-2.2-0.8 -0.9 0.4-1.3 1.3-0.9 2.1C-273.3 425.7-272.3 426-271.4 425.7M-272.3 414.9c0-0.9-0.8-1.6-1.7-1.6 -0.9 0-1.7 0.7-1.7 1.6 0 0.9 0.8 1.6 1.7 1.6C-273.1 416.5-272.3 415.8-272.3 414.9" /></g></g></g></svg>
                    Spirit Tip
                </div>
            </div>
            <div class="message">
                {{IbpCms.accommodationSpiritTipCotSoldOut}}
            </div>
        </div>
    </div>
    <h3>
        {{ getFareDescription() }}<br />
        {{ IbpCms.fareAdditionalDescription }}
    </h3>
    <div class="current-date-notice">
    </div>
</div>

<!--Continue to next step-->
<div class="next-step sticky-step stuck" data-ng-if="(legOfJourney === LegOfJourney.Outbound && workflowState.isOnOutboundFareStep()) || (legOfJourney === LegOfJourney.Return && workflowState.isOnReturnFareStep())">
    <button class="continue button primary ng-animate-disabled"
            data-ng-click="continueFromFareForLeg()" data-ng-disabled="!canContinueToAccommodation()">
        Continue
    </button>
</div>
                        </div>
                        
                        <div id="mini-breakdown" data-mini-breakdown data-selected-sailing="miniBreakdownSet.selectedSailing" data-sailing-price-set="miniBreakdownSet.sailingPriceSet"></div>
                    </div>

                    <div id="accommodation-app" class="ibp-app-component" data-ng-show="workflowState.isOnFareOrAccommodationStep()" data-ng-controller="accommodationController" data-ng-cloak>
                        
                        <div data-ng-controller="accommodationSailingController"
                             data-ng-if="!!booking.outboundSailing"
                             data-ng-init="legOfJourney = LegOfJourney.Outbound"
                             data-ng-show="workflowState.isOnAccommodationStep()"
                             class="accommodation-build-ticket choose-outbound-accommodation" data-ng-cloak>
                            <div class="ibp-section accommodation-section">
    <div class="section-heading">Select {{legOfJourney.toLowerCase()}} accommodation</div>
    <h3 class="accommodation-date">{{booking.getDepartureDate(legOfJourney, 'dddd D MMMM')}} at {{booking.getDepartureDate(legOfJourney, 'h:mm A')}}</h3>
    <div class="ibp-spirit-tip clearfix accommodation-spirit-tip" data-ng-show="showCotSoldOutSpiritTip()" data-ng-cloak>
        <div class="section-row">
            <div class="info">
                <div class="title-section">
                
<svg xmlns="http://www.w3.org/2000/svg" class="icon-custom lightbulb" x="0" y="0" viewBox="-276 395.9 42 50" enable-background="new -276 395.9 42 50" xml:space="preserve"><g transform="translate(-260.000000, -2305.000000)"><g transform="translate(210.000000, 2260.000000)"><g transform="translate(50.000000, 45.000000)"><path fill="#0BC3FF" d="M-250.1 435.3h-9.6c-0.7 0-1.2 0.5-1.2 1.2 0 0.6 0.5 1.2 1.2 1.2h9.6c0.7 0 1.2-0.5 1.2-1.2C-248.9 435.9-249.4 435.3-250.1 435.3L-250.1 435.3zM-250.3 439.2h-9.1c-0.7 0-1.2 0.5-1.2 1.2 0 0.6 0.5 1.2 1.2 1.2h9.1c0.7 0 1.2-0.5 1.2-1.2C-249.1 439.8-249.7 439.2-250.3 439.2L-250.3 439.2zM-259.4 443.1c2.4 2.1 2.6 2.5 3.6 2.5h1.8c0.9 0 1.2-0.4 3.6-2.5H-259.4L-259.4 443.1zM-258.4 433.6h-3.3c0-6.3-7.1-10.7-7.1-18.7 0-17.1 27.7-17.1 27.7 0 0 8-7.1 12.4-7.1 18.7H-258.4L-258.4 433.6zM-253.2 397.7c0 0.8-0.7 1.5-1.7 1.5 -0.9 0-1.7-0.7-1.7-1.5s0.7-1.5 1.7-1.5C-253.9 396.1-253.2 396.8-253.2 397.7M-244 400.4c0.4-0.8 0.1-1.7-0.7-2.1 -0.8-0.4-1.8-0.1-2.2 0.6 -0.4 0.8-0.1 1.7 0.7 2.1C-245.4 401.4-244.4 401.1-244 400.4M-237.3 407.2c0.7-0.5 0.9-1.5 0.3-2.2 -0.5-0.7-1.6-0.9-2.3-0.4 -0.7 0.5-0.9 1.5-0.3 2.2C-239.1 407.5-238.1 407.7-237.3 407.2M-236.1 425c0.3-0.8-0.1-1.8-1-2.1s-1.9 0.1-2.2 0.9c-0.3 0.8 0.1 1.8 1 2.1C-237.5 426.2-236.4 425.8-236.1 425M-234.1 414.9c0-0.9-0.8-1.6-1.7-1.6 -0.9 0-1.7 0.7-1.7 1.6 0 0.9 0.8 1.6 1.7 1.6C-234.9 416.5-234.1 415.8-234.1 414.9M-263.7 401c0.8-0.4 1.1-1.4 0.7-2.1 -0.4-0.7-1.4-1-2.2-0.6 -0.8 0.4-1.1 1.4-0.7 2.1C-265.5 401.1-264.5 401.4-263.7 401M-270.3 406.8c0.5-0.7 0.4-1.7-0.4-2.2 -0.7-0.5-1.8-0.3-2.3 0.4 -0.5 0.7-0.4 1.7 0.4 2.2C-271.8 407.7-270.8 407.5-270.3 406.8M-271.4 425.7c0.9-0.4 1.3-1.3 0.9-2.1 -0.4-0.8-1.4-1.2-2.2-0.8 -0.9 0.4-1.3 1.3-0.9 2.1C-273.3 425.7-272.3 426-271.4 425.7M-272.3 414.9c0-0.9-0.8-1.6-1.7-1.6 -0.9 0-1.7 0.7-1.7 1.6 0 0.9 0.8 1.6 1.7 1.6C-273.1 416.5-272.3 415.8-272.3 414.9" /></g></g></g></svg>
                Spirit Tip</div>
            </div>
            <div class="message">
               {{IbpCms.accommodationSpiritTipCotSoldOut}}
            </div>
        </div>
    </div>
    <div class="package-deals" data-ng-if="areDealsAvailableOnSailing()">
        <!-- Package deal applied -->
        <div class="accommodation-mode package-deals deal-applied" data-ng-if="isDealApplied()">
            <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
            <span>Deal applied</span>
        </div>
        <ul class="accommodation-options deals-options" data-ng-if="isDealApplied()">
            <li class="restricted-product-offer ng-animate-disabled clearfix">
                <div class="container">
                    <div class="images deal-applied" data-ng-style="{'background-image': 'url(' + getDealDetails(getAppliedDeal()).heroImageUrl + ')'}"></div>
                    <div class="deal-summary information">
                        <h3>
                            <div class="tick" data-ng-bind-html="Resources.iconTick | asRawHtml"></div>
                            {{getDealDetails(getAppliedDeal()).title}}
                            <a class="details" data-ng-click="showDealDetails(getAppliedDeal())">Details</a>
                        </h3>
                        <p>{{getDealDetails(getAppliedDeal()).shortDescription}}</p>
                    </div>
                    <div class="deal-details item-selector">
                        <div class="info-box">Nice! Now it's time to add your cabin to the package.</div>
                        <a data-ng-click="removeDeal()" class="remove-deal">Remove</a>
                    </div>
                </div>
            </li>
        </ul>
        <!-- Package deal(s) available -->
        <div class="accommodation-mode package-deals" data-ng-if="getUnappliedDeals().length > 0">
            <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
            <span>{{Utils.pluralize('Deal', numDealsOnSailing())}} available</span>
        </div>
        <ul class="accommodation-options deals-options">
            <li data-ng-repeat="code in getUnappliedDeals()" class="restricted-product-offer ng-animate-disabled clearfix" data-ng-class="{'active': getSailing().selectedProductCode === code}">
                <div class="container">
                    <div class="images" data-ng-style="{'background-image': 'url(' + getDealDetails(code).heroImageUrl + ')'}"></div>
                    <div class="deal-summary information">
                        <h3>
                            <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml" data-ng-if="getSailing().selectedProductCode !== code"></div>
                            <div class="tick" data-ng-bind-html="Resources.iconTick | asRawHtml" data-ng-if="getSailing().selectedProductCode === code"></div>
                            {{getDealDetails(code).title}}
                            <a class="details" data-ng-click="showDealDetails(code)">Details</a>
                        </h3>
                        <p>{{getDealDetails(code).shortDescription}}</p>
                    </div>
                    <div class="deal-details item-selector">
                        <div class="deal-available" data-ng-show="getSailing().selectedProductCode !== code">Deal available</div>
                        <button data-ng-click="takeDeal(code)" data-ng-show="getSailing().selectedProductCode !== code" class="apply-deal button special ng-animate-disabled">Take this deal</button>
                        <a data-ng-click="removeDeal()" data-ng-show="getSailing().selectedProductCode === code" class="remove-deal">Remove</a>
                    </div>
                </div>
            </li>
        </ul>
    </div>
    <div class="results-loading whole-page-loader" data-ng-show="!booking.getSelectedSailingPriceSet(legOfJourney)"><img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" /></div>
    <div class="accommodation-selection-section" data-ng-show="!!booking.getSelectedSailingPriceSet(legOfJourney)">
        <div class="accommodation-mode default" data-ng-if="showAccommodationAvailableBar()">
            Accommodation available
        </div>
        <ul class="accommodation-options"
            data-ng-if="workflowState.isOnAccommodationStep()"
            data-ng-init="mixMatchAccommodation = getAccommodationList()">
            <li data-ng-repeat="option in mixMatchAccommodation.options" class="clearfix" data-ng-class="{'is-popular': isPopularAccommodation(option)}" data-ng-if="!!booking.getSelectedSailingPriceSet(legOfJourney) && isAccommodationTypeVisible(option)">
    <div class="accommodation-mode default pet-kennels" data-ng-if="option.extrasCode === ExtrasCode.Kennel">
        Pet Kennels
    </div>
    <div class="container" data-ng-class="{'not-shared': !isSharedAccommodationType(option)}">
        <div class="images" data-ng-style="{'background-image': 'url(' + getThumbnailUrl(option) + ')'}">
            <div class="popular-banner">
                <div>
                    <img src="/images/popular-banner.png" alt="Popular" />
                </div>
            </div>
        </div>
        <div class="information" data-ng-class="{'shared-cabin': isSharedAccommodationType(option), 'day-ticket': option.categoryCode === AccommodationCode.Day, 'has-private-cabin-descriptor': isPortholeOrInsideCabin(option), 'kennel': option.extrasCode === ExtrasCode.Kennel}">
            <div class="popular-banner">
                <div>
                    POPULAR
                </div>
            </div>
            <div class="private-cabin-descriptor" data-ng-if="isPortholeOrInsideCabin(option)">
                <span data-ng-if="option.categoryCode === AccommodationCode.Porthole2">Twin Bed</span>
                <span data-ng-if="option.categoryCode !== AccommodationCode.Porthole2">Four Bed</span>
            </div>
            <h3>
                {{option.displayText}}
                <a class="details" data-ng-click="showAccommodationDetails(option)">Details</a>
            </h3>
            <div class="description" data-ng-if="option.categoryCode === AccommodationCode.Day">
                {{IbpCms.accommodationDayTicketsFlavourText}}
            </div>
            <div class="description" data-ng-if="option.extrasCode === ExtrasCode.Kennel">
                {{IbpCms.accommodationPetKennelsFlavourText}}
            </div>
            <ul class="features clearfix"
                data-ng-class="{'day-ticket': option.categoryCode === AccommodationCode.Day, 'kennel': option.extrasCode === ExtrasCode.Kennel}">
                <li data-ng-repeat="feature in option.features" data-ng-if="!isACot(feature) || showCotFeature(feature)" data-ng-class="{'danger': isAProhibitiveFeature(feature)}" data-ng-hide="isInvalidBedTypeForShare(option, feature)">
                    <div>
                        <div class="feature-icon" data-ng-bind-html="feature.resource | asRawHtml"></div>
                        <div class="feature-name" data-ng-class="{'length-adjust': isChildAccompanied(feature)}">
                            <span data-ng-if="isSharedForMales(feature) && sharedCabinUserSelection.male === SharedCabinUserSelection.TwoShare">2</span>
                            <span data-ng-if="isSharedForMales(feature) && sharedCabinUserSelection.male === SharedCabinUserSelection.FourShare">4</span>
                            <span data-ng-if="isSharedForFemales(feature) && sharedCabinUserSelection.female === SharedCabinUserSelection.TwoShare">2</span>
                            <span data-ng-if="isSharedForFemales(feature) && sharedCabinUserSelection.female === SharedCabinUserSelection.FourShare">4</span>
                            {{feature.displayName}}
                        </div>
                    </div>
                </li>
            </ul>
            <div class="containing-cabin-type-switch standard-form" data-ng-if="isSharedAccommodationType(option)">
                <div class="radio-group" data-ng-if="option.cabinSex === Sex.Male">
                    <label data-ng-class="{'active': sharedCabinUserSelection.male === SharedCabinUserSelection.TwoShare}">
                        <input type="radio" data-ng-model="sharedCabinUserSelection.male" data-ng-value="SharedCabinUserSelection.TwoShare" data-ng-change="modifySailingContainingCabinType(Sex.Male)">
                        <span class="radiobtn"></span>2 Share
                    </label>
                    <label data-ng-class="{'active': sharedCabinUserSelection.male === SharedCabinUserSelection.FourShare}">
                        <input type="radio" data-ng-model="sharedCabinUserSelection.male " data-ng-value="SharedCabinUserSelection.FourShare" data-ng-change="modifySailingContainingCabinType(Sex.Male)">
                        <span class="radiobtn"></span>4 Share
                    </label>
                </div>
                <div class="radio-group" data-ng-if="option.cabinSex === Sex.Female">
                    <label data-ng-class="{'active': sharedCabinUserSelection.female === SharedCabinUserSelection.TwoShare}">
                        <input type="radio" data-ng-model="sharedCabinUserSelection.female" data-ng-value="SharedCabinUserSelection.TwoShare" data-ng-change="modifySailingContainingCabinType(Sex.Female)">
                        <span class="radiobtn"></span>2 Share
                    </label>
                    <label data-ng-class="{'active': sharedCabinUserSelection.female === SharedCabinUserSelection.FourShare}">
                        <input type="radio" data-ng-model="sharedCabinUserSelection.female" data-ng-value="SharedCabinUserSelection.FourShare" data-ng-change="modifySailingContainingCabinType(Sex.Female)">
                        <span class="radiobtn"></span>4 Share
                    </label>
                </div>
            </div>
        </div>
        <div class="item-selector" data-ng-if="areUnitsAvailable(getCabinType(option))" data-ng-class="{'not-shared': !isSharedAccommodationType(option), 'day-ticket': option.categoryCode === AccommodationCode.Day, 'kennel': option.extrasCode === ExtrasCode.Kennel}">
            <div class="price-and-select">
                <!-- Functional price -->
                <div class="price">
                    <span class="dollar">$</span>{{getOptionUnitPrice(option)}}
                </div>
                <span class="per-display-text">per {{option.unitText}}</span>

                <!-- Original price (if functional price discounted) -->
                <div class="original-price" data-ng-if="getSelectedFareTypeOptionUnitPrice(option) > getOptionUnitPrice(option)" data-ng-show="canShowStrikethroughPrice()">
                    <span class="dollar">$</span><span class="value">{{getSelectedFareTypeOptionUnitPrice(option)}}</span>
                    <span class="description">Original Price</span>
                </div>

                <div class="availability-warning" data-ng-if="canShowLowAvailabilityLabel(option)">
                    {{getOptionQuantity(option)}} or fewer {{Utils.pluralize(option.unitText, getOptionQuantity(option))}} available
                </div>

                <select data-ng-if="!option.extrasCode"
                        data-ng-model="getSailing().selectedAccommodation.getOption(getCabinType(option)).quantity"
                        data-ng-options="element.value as element.text for element in getUnitAmountListElements(option)"></select>
                <select data-ng-if="!!option.extrasCode"
                        data-ng-model="getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity"
                        data-ng-change="updatePetCountOnSailing(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity)"
                        data-ng-options="element.value as element.text for element in getUnitAmountListElements(option)"></select>
            </div>
            <div class="per-unit-text">
                <span data-ng-if="!isSharedAccommodationType(option)">
                    {{option.tooltipText}}
                </span>
                <span data-ng-if="isSharedAccommodationType(option)">
                    <span data-ng-if="option.cabinSex === Sex.Male">
                        <span data-ng-if="sharedCabinUserSelection.male === SharedCabinUserSelection.TwoShare">{{IbpCms.accommodationTypeDescriptionSharedMale2Berth}}</span>
                        <span data-ng-if="sharedCabinUserSelection.male === SharedCabinUserSelection.FourShare">{{IbpCms.accommodationTypeDescriptionSharedMale4Berth}}</span>
                    </span>
                    <span data-ng-if="option.cabinSex === Sex.Female">
                        <span data-ng-if="sharedCabinUserSelection.female === SharedCabinUserSelection.TwoShare">{{IbpCms.accommodationTypeDescriptionSharedFemale2Berth}}</span>
                        <span data-ng-if="sharedCabinUserSelection.female === SharedCabinUserSelection.FourShare">{{IbpCms.accommodationTypeDescriptionSharedFemale4Berth}}</span>
                    </span>
                </span>
            </div>
        </div>
        <div class="sold-out-selector" data-ng-if="isAccommodationSoldOut(option)">
            <div class="sold-out">Sold out</div>
            <div class="for-this-sailing">For this sailing</div>
            <a data-ng-click="showAccommodationAvailability()" data-ng-if="findAvailabilityEnabled()">Find availability</a>
        </div>
        <div class="not-available" data-ng-if="canShowFourPortholeBlockedMessage(option)">
            <div class="container">
                <div class="notice">
                    <div>{{IbpCms.accommodationNotEnoughPeople}}</div>
                </div>
            </div>
        </div>
        <div class="not-available" data-ng-if="dealMakesAccommodationUnavailable(option)">
            <div class="container">
                <div class="notice">
                    <div>{{option.displayText}}s not available with this deal.</div>
                    <a data-ng-click="removeDeal()">Remove Deal</a>
                </div>
            </div>
        </div>
        <div class="not-available" data-ng-if="canShowDayTicketsBlockedMessage(option)">
            <div class="container">
                <div class="notice">
                    <div>{{IbpCms.accommodationNoDayTicketsForNightSailings}}</div>
                </div>
            </div>
        </div>
        <div class="not-available" data-ng-if="!isInPriceTable(ExtrasCode.Kennel) && isKennel(option)">
            <div class="container">
                <div class="notice">
                    <div>Kennels are available for pets only.</div>
                </div>
            </div>
        </div>
    </div>
</li>

        </ul>
    </div>
</div>

<div class="next-step sticky-step stuck"
     data-ng-if="legOfJourney === LegOfJourney.Outbound && booking.isOneWay()"
     data-ng-show="workflowState.isOnOutboundAccommodationStep()">
    <button class="continue button primary ng-animate-disabled"
            data-ng-hide="isLoadingAutoAllocation()"
            data-ng-disabled="!areAllSailingsValidWithoutAccommodation()"
            data-ng-click="continueFromOutboundAccommodation()">
        {{continueButtonText()}}
    </button>
    <span class="results-loading" data-ng-show="isLoadingAutoAllocation()">
        <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
    </span>
</div>

<div class="next-step sticky-step stuck"
     data-ng-if="legOfJourney === LegOfJourney.Outbound && !booking.isOneWay()"
     data-ng-show="workflowState.isOnOutboundAccommodationStep()">
    <!-- Two way Outbound -->
    <div>
        <button class="continue button primary ng-animate-disabled"
                data-ng-hide="(canCopyToReturnAccommodation() && hasReturnPriceForSameSelection()) || isLoadingAutoAllocation()"
                data-ng-click="continueToCopyReturnAccommodation()">
            <span>Continue</span>
        </button>
        <span class="results-loading" data-ng-show="isLoadingAutoAllocation()">
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
        </span>
        <div data-ng-if="canCopyToReturnAccommodation() && hasReturnPriceForSameSelection()"
             data-ng-show="workflowState.isOnOutboundAccommodationStep()"
             class="copy-to-return-accommodation ng-animate-disabled">
            <div class="important">
                Book the same accommodation on your return?
                <span class="note">
                    Return accommodation price is {{ getReturnPriceForSameSelection() | money }}
                </span>
            </div>
            <button class="continue button primary ng-animate-disabled" data-ng-click="continueFromOutboundAccommodation()">
                No
            </button>
            <button class="continue button primary ng-animate-disabled"
                    data-ng-if="booking.isSelectedProductRestricted(legOfJourney)"
                    data-ng-click="copyToReturnAccommodationWithDeal()">
                Yes
            </button>
            <button class="continue button primary ng-animate-disabled"
                    data-ng-if="!booking.isSelectedProductRestricted(legOfJourney)"
                    data-ng-click="copyToReturnAccommodation()">
                Yes
            </button>
        </div>
    </div>
</div>

<div class="next-step sticky-step stuck"
     data-ng-if="legOfJourney === LegOfJourney.Return"
     data-ng-show="workflowState.isOnReturnAccommodationStep()">
    <!-- Return -->
    <button class="continue button primary ng-animate-disabled"
            data-ng-disabled="!areAllSailingsValidWithoutAccommodation()"
            data-ng-hide="isLoadingAutoAllocation()"
            data-ng-click="continueFromReturnAccommodation()">
        {{continueButtonText()}}
    </button>
    <span class="results-loading" data-ng-show="isLoadingAutoAllocation()">
        <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
    </span>
</div>
                        </div>

                        
                        <div data-ng-controller="accommodationSailingController"
                             data-ng-if="!!booking.returnSailing"
                             data-ng-init="legOfJourney = LegOfJourney.Return"
                             data-ng-show="workflowState.isOnReturnAccommodationStep()"
                             class="accommodation-build-ticket choose-return-accommodation" data-ng-cloak>
                            <div class="ibp-section accommodation-section">
    <div class="section-heading">Select {{legOfJourney.toLowerCase()}} accommodation</div>
    <h3 class="accommodation-date">{{booking.getDepartureDate(legOfJourney, 'dddd D MMMM')}} at {{booking.getDepartureDate(legOfJourney, 'h:mm A')}}</h3>
    <div class="ibp-spirit-tip clearfix accommodation-spirit-tip" data-ng-show="showCotSoldOutSpiritTip()" data-ng-cloak>
        <div class="section-row">
            <div class="info">
                <div class="title-section">
                
<svg xmlns="http://www.w3.org/2000/svg" class="icon-custom lightbulb" x="0" y="0" viewBox="-276 395.9 42 50" enable-background="new -276 395.9 42 50" xml:space="preserve"><g transform="translate(-260.000000, -2305.000000)"><g transform="translate(210.000000, 2260.000000)"><g transform="translate(50.000000, 45.000000)"><path fill="#0BC3FF" d="M-250.1 435.3h-9.6c-0.7 0-1.2 0.5-1.2 1.2 0 0.6 0.5 1.2 1.2 1.2h9.6c0.7 0 1.2-0.5 1.2-1.2C-248.9 435.9-249.4 435.3-250.1 435.3L-250.1 435.3zM-250.3 439.2h-9.1c-0.7 0-1.2 0.5-1.2 1.2 0 0.6 0.5 1.2 1.2 1.2h9.1c0.7 0 1.2-0.5 1.2-1.2C-249.1 439.8-249.7 439.2-250.3 439.2L-250.3 439.2zM-259.4 443.1c2.4 2.1 2.6 2.5 3.6 2.5h1.8c0.9 0 1.2-0.4 3.6-2.5H-259.4L-259.4 443.1zM-258.4 433.6h-3.3c0-6.3-7.1-10.7-7.1-18.7 0-17.1 27.7-17.1 27.7 0 0 8-7.1 12.4-7.1 18.7H-258.4L-258.4 433.6zM-253.2 397.7c0 0.8-0.7 1.5-1.7 1.5 -0.9 0-1.7-0.7-1.7-1.5s0.7-1.5 1.7-1.5C-253.9 396.1-253.2 396.8-253.2 397.7M-244 400.4c0.4-0.8 0.1-1.7-0.7-2.1 -0.8-0.4-1.8-0.1-2.2 0.6 -0.4 0.8-0.1 1.7 0.7 2.1C-245.4 401.4-244.4 401.1-244 400.4M-237.3 407.2c0.7-0.5 0.9-1.5 0.3-2.2 -0.5-0.7-1.6-0.9-2.3-0.4 -0.7 0.5-0.9 1.5-0.3 2.2C-239.1 407.5-238.1 407.7-237.3 407.2M-236.1 425c0.3-0.8-0.1-1.8-1-2.1s-1.9 0.1-2.2 0.9c-0.3 0.8 0.1 1.8 1 2.1C-237.5 426.2-236.4 425.8-236.1 425M-234.1 414.9c0-0.9-0.8-1.6-1.7-1.6 -0.9 0-1.7 0.7-1.7 1.6 0 0.9 0.8 1.6 1.7 1.6C-234.9 416.5-234.1 415.8-234.1 414.9M-263.7 401c0.8-0.4 1.1-1.4 0.7-2.1 -0.4-0.7-1.4-1-2.2-0.6 -0.8 0.4-1.1 1.4-0.7 2.1C-265.5 401.1-264.5 401.4-263.7 401M-270.3 406.8c0.5-0.7 0.4-1.7-0.4-2.2 -0.7-0.5-1.8-0.3-2.3 0.4 -0.5 0.7-0.4 1.7 0.4 2.2C-271.8 407.7-270.8 407.5-270.3 406.8M-271.4 425.7c0.9-0.4 1.3-1.3 0.9-2.1 -0.4-0.8-1.4-1.2-2.2-0.8 -0.9 0.4-1.3 1.3-0.9 2.1C-273.3 425.7-272.3 426-271.4 425.7M-272.3 414.9c0-0.9-0.8-1.6-1.7-1.6 -0.9 0-1.7 0.7-1.7 1.6 0 0.9 0.8 1.6 1.7 1.6C-273.1 416.5-272.3 415.8-272.3 414.9" /></g></g></g></svg>
                Spirit Tip</div>
            </div>
            <div class="message">
               {{IbpCms.accommodationSpiritTipCotSoldOut}}
            </div>
        </div>
    </div>
    <div class="package-deals" data-ng-if="areDealsAvailableOnSailing()">
        <!-- Package deal applied -->
        <div class="accommodation-mode package-deals deal-applied" data-ng-if="isDealApplied()">
            <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
            <span>Deal applied</span>
        </div>
        <ul class="accommodation-options deals-options" data-ng-if="isDealApplied()">
            <li class="restricted-product-offer ng-animate-disabled clearfix">
                <div class="container">
                    <div class="images deal-applied" data-ng-style="{'background-image': 'url(' + getDealDetails(getAppliedDeal()).heroImageUrl + ')'}"></div>
                    <div class="deal-summary information">
                        <h3>
                            <div class="tick" data-ng-bind-html="Resources.iconTick | asRawHtml"></div>
                            {{getDealDetails(getAppliedDeal()).title}}
                            <a class="details" data-ng-click="showDealDetails(getAppliedDeal())">Details</a>
                        </h3>
                        <p>{{getDealDetails(getAppliedDeal()).shortDescription}}</p>
                    </div>
                    <div class="deal-details item-selector">
                        <div class="info-box">Nice! Now it's time to add your cabin to the package.</div>
                        <a data-ng-click="removeDeal()" class="remove-deal">Remove</a>
                    </div>
                </div>
            </li>
        </ul>
        <!-- Package deal(s) available -->
        <div class="accommodation-mode package-deals" data-ng-if="getUnappliedDeals().length > 0">
            <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
            <span>{{Utils.pluralize('Deal', numDealsOnSailing())}} available</span>
        </div>
        <ul class="accommodation-options deals-options">
            <li data-ng-repeat="code in getUnappliedDeals()" class="restricted-product-offer ng-animate-disabled clearfix" data-ng-class="{'active': getSailing().selectedProductCode === code}">
                <div class="container">
                    <div class="images" data-ng-style="{'background-image': 'url(' + getDealDetails(code).heroImageUrl + ')'}"></div>
                    <div class="deal-summary information">
                        <h3>
                            <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml" data-ng-if="getSailing().selectedProductCode !== code"></div>
                            <div class="tick" data-ng-bind-html="Resources.iconTick | asRawHtml" data-ng-if="getSailing().selectedProductCode === code"></div>
                            {{getDealDetails(code).title}}
                            <a class="details" data-ng-click="showDealDetails(code)">Details</a>
                        </h3>
                        <p>{{getDealDetails(code).shortDescription}}</p>
                    </div>
                    <div class="deal-details item-selector">
                        <div class="deal-available" data-ng-show="getSailing().selectedProductCode !== code">Deal available</div>
                        <button data-ng-click="takeDeal(code)" data-ng-show="getSailing().selectedProductCode !== code" class="apply-deal button special ng-animate-disabled">Take this deal</button>
                        <a data-ng-click="removeDeal()" data-ng-show="getSailing().selectedProductCode === code" class="remove-deal">Remove</a>
                    </div>
                </div>
            </li>
        </ul>
    </div>
    <div class="results-loading whole-page-loader" data-ng-show="!booking.getSelectedSailingPriceSet(legOfJourney)"><img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" /></div>
    <div class="accommodation-selection-section" data-ng-show="!!booking.getSelectedSailingPriceSet(legOfJourney)">
        <div class="accommodation-mode default" data-ng-if="showAccommodationAvailableBar()">
            Accommodation available
        </div>
        <ul class="accommodation-options"
            data-ng-if="workflowState.isOnAccommodationStep()"
            data-ng-init="mixMatchAccommodation = getAccommodationList()">
            <li data-ng-repeat="option in mixMatchAccommodation.options" class="clearfix" data-ng-class="{'is-popular': isPopularAccommodation(option)}" data-ng-if="!!booking.getSelectedSailingPriceSet(legOfJourney) && isAccommodationTypeVisible(option)">
    <div class="accommodation-mode default pet-kennels" data-ng-if="option.extrasCode === ExtrasCode.Kennel">
        Pet Kennels
    </div>
    <div class="container" data-ng-class="{'not-shared': !isSharedAccommodationType(option)}">
        <div class="images" data-ng-style="{'background-image': 'url(' + getThumbnailUrl(option) + ')'}">
            <div class="popular-banner">
                <div>
                    <img src="/images/popular-banner.png" alt="Popular" />
                </div>
            </div>
        </div>
        <div class="information" data-ng-class="{'shared-cabin': isSharedAccommodationType(option), 'day-ticket': option.categoryCode === AccommodationCode.Day, 'has-private-cabin-descriptor': isPortholeOrInsideCabin(option), 'kennel': option.extrasCode === ExtrasCode.Kennel}">
            <div class="popular-banner">
                <div>
                    POPULAR
                </div>
            </div>
            <div class="private-cabin-descriptor" data-ng-if="isPortholeOrInsideCabin(option)">
                <span data-ng-if="option.categoryCode === AccommodationCode.Porthole2">Twin Bed</span>
                <span data-ng-if="option.categoryCode !== AccommodationCode.Porthole2">Four Bed</span>
            </div>
            <h3>
                {{option.displayText}}
                <a class="details" data-ng-click="showAccommodationDetails(option)">Details</a>
            </h3>
            <div class="description" data-ng-if="option.categoryCode === AccommodationCode.Day">
                {{IbpCms.accommodationDayTicketsFlavourText}}
            </div>
            <div class="description" data-ng-if="option.extrasCode === ExtrasCode.Kennel">
                {{IbpCms.accommodationPetKennelsFlavourText}}
            </div>
            <ul class="features clearfix"
                data-ng-class="{'day-ticket': option.categoryCode === AccommodationCode.Day, 'kennel': option.extrasCode === ExtrasCode.Kennel}">
                <li data-ng-repeat="feature in option.features" data-ng-if="!isACot(feature) || showCotFeature(feature)" data-ng-class="{'danger': isAProhibitiveFeature(feature)}" data-ng-hide="isInvalidBedTypeForShare(option, feature)">
                    <div>
                        <div class="feature-icon" data-ng-bind-html="feature.resource | asRawHtml"></div>
                        <div class="feature-name" data-ng-class="{'length-adjust': isChildAccompanied(feature)}">
                            <span data-ng-if="isSharedForMales(feature) && sharedCabinUserSelection.male === SharedCabinUserSelection.TwoShare">2</span>
                            <span data-ng-if="isSharedForMales(feature) && sharedCabinUserSelection.male === SharedCabinUserSelection.FourShare">4</span>
                            <span data-ng-if="isSharedForFemales(feature) && sharedCabinUserSelection.female === SharedCabinUserSelection.TwoShare">2</span>
                            <span data-ng-if="isSharedForFemales(feature) && sharedCabinUserSelection.female === SharedCabinUserSelection.FourShare">4</span>
                            {{feature.displayName}}
                        </div>
                    </div>
                </li>
            </ul>
            <div class="containing-cabin-type-switch standard-form" data-ng-if="isSharedAccommodationType(option)">
                <div class="radio-group" data-ng-if="option.cabinSex === Sex.Male">
                    <label data-ng-class="{'active': sharedCabinUserSelection.male === SharedCabinUserSelection.TwoShare}">
                        <input type="radio" data-ng-model="sharedCabinUserSelection.male" data-ng-value="SharedCabinUserSelection.TwoShare" data-ng-change="modifySailingContainingCabinType(Sex.Male)">
                        <span class="radiobtn"></span>2 Share
                    </label>
                    <label data-ng-class="{'active': sharedCabinUserSelection.male === SharedCabinUserSelection.FourShare}">
                        <input type="radio" data-ng-model="sharedCabinUserSelection.male " data-ng-value="SharedCabinUserSelection.FourShare" data-ng-change="modifySailingContainingCabinType(Sex.Male)">
                        <span class="radiobtn"></span>4 Share
                    </label>
                </div>
                <div class="radio-group" data-ng-if="option.cabinSex === Sex.Female">
                    <label data-ng-class="{'active': sharedCabinUserSelection.female === SharedCabinUserSelection.TwoShare}">
                        <input type="radio" data-ng-model="sharedCabinUserSelection.female" data-ng-value="SharedCabinUserSelection.TwoShare" data-ng-change="modifySailingContainingCabinType(Sex.Female)">
                        <span class="radiobtn"></span>2 Share
                    </label>
                    <label data-ng-class="{'active': sharedCabinUserSelection.female === SharedCabinUserSelection.FourShare}">
                        <input type="radio" data-ng-model="sharedCabinUserSelection.female" data-ng-value="SharedCabinUserSelection.FourShare" data-ng-change="modifySailingContainingCabinType(Sex.Female)">
                        <span class="radiobtn"></span>4 Share
                    </label>
                </div>
            </div>
        </div>
        <div class="item-selector" data-ng-if="areUnitsAvailable(getCabinType(option))" data-ng-class="{'not-shared': !isSharedAccommodationType(option), 'day-ticket': option.categoryCode === AccommodationCode.Day, 'kennel': option.extrasCode === ExtrasCode.Kennel}">
            <div class="price-and-select">
                <!-- Functional price -->
                <div class="price">
                    <span class="dollar">$</span>{{getOptionUnitPrice(option)}}
                </div>
                <span class="per-display-text">per {{option.unitText}}</span>

                <!-- Original price (if functional price discounted) -->
                <div class="original-price" data-ng-if="getSelectedFareTypeOptionUnitPrice(option) > getOptionUnitPrice(option)" data-ng-show="canShowStrikethroughPrice()">
                    <span class="dollar">$</span><span class="value">{{getSelectedFareTypeOptionUnitPrice(option)}}</span>
                    <span class="description">Original Price</span>
                </div>

                <div class="availability-warning" data-ng-if="canShowLowAvailabilityLabel(option)">
                    {{getOptionQuantity(option)}} or fewer {{Utils.pluralize(option.unitText, getOptionQuantity(option))}} available
                </div>

                <select data-ng-if="!option.extrasCode"
                        data-ng-model="getSailing().selectedAccommodation.getOption(getCabinType(option)).quantity"
                        data-ng-options="element.value as element.text for element in getUnitAmountListElements(option)"></select>
                <select data-ng-if="!!option.extrasCode"
                        data-ng-model="getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity"
                        data-ng-change="updatePetCountOnSailing(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity)"
                        data-ng-options="element.value as element.text for element in getUnitAmountListElements(option)"></select>
            </div>
            <div class="per-unit-text">
                <span data-ng-if="!isSharedAccommodationType(option)">
                    {{option.tooltipText}}
                </span>
                <span data-ng-if="isSharedAccommodationType(option)">
                    <span data-ng-if="option.cabinSex === Sex.Male">
                        <span data-ng-if="sharedCabinUserSelection.male === SharedCabinUserSelection.TwoShare">{{IbpCms.accommodationTypeDescriptionSharedMale2Berth}}</span>
                        <span data-ng-if="sharedCabinUserSelection.male === SharedCabinUserSelection.FourShare">{{IbpCms.accommodationTypeDescriptionSharedMale4Berth}}</span>
                    </span>
                    <span data-ng-if="option.cabinSex === Sex.Female">
                        <span data-ng-if="sharedCabinUserSelection.female === SharedCabinUserSelection.TwoShare">{{IbpCms.accommodationTypeDescriptionSharedFemale2Berth}}</span>
                        <span data-ng-if="sharedCabinUserSelection.female === SharedCabinUserSelection.FourShare">{{IbpCms.accommodationTypeDescriptionSharedFemale4Berth}}</span>
                    </span>
                </span>
            </div>
        </div>
        <div class="sold-out-selector" data-ng-if="isAccommodationSoldOut(option)">
            <div class="sold-out">Sold out</div>
            <div class="for-this-sailing">For this sailing</div>
            <a data-ng-click="showAccommodationAvailability()" data-ng-if="findAvailabilityEnabled()">Find availability</a>
        </div>
        <div class="not-available" data-ng-if="canShowFourPortholeBlockedMessage(option)">
            <div class="container">
                <div class="notice">
                    <div>{{IbpCms.accommodationNotEnoughPeople}}</div>
                </div>
            </div>
        </div>
        <div class="not-available" data-ng-if="dealMakesAccommodationUnavailable(option)">
            <div class="container">
                <div class="notice">
                    <div>{{option.displayText}}s not available with this deal.</div>
                    <a data-ng-click="removeDeal()">Remove Deal</a>
                </div>
            </div>
        </div>
        <div class="not-available" data-ng-if="canShowDayTicketsBlockedMessage(option)">
            <div class="container">
                <div class="notice">
                    <div>{{IbpCms.accommodationNoDayTicketsForNightSailings}}</div>
                </div>
            </div>
        </div>
        <div class="not-available" data-ng-if="!isInPriceTable(ExtrasCode.Kennel) && isKennel(option)">
            <div class="container">
                <div class="notice">
                    <div>Kennels are available for pets only.</div>
                </div>
            </div>
        </div>
    </div>
</li>

        </ul>
    </div>
</div>

<div class="next-step sticky-step stuck"
     data-ng-if="legOfJourney === LegOfJourney.Outbound && booking.isOneWay()"
     data-ng-show="workflowState.isOnOutboundAccommodationStep()">
    <button class="continue button primary ng-animate-disabled"
            data-ng-hide="isLoadingAutoAllocation()"
            data-ng-disabled="!areAllSailingsValidWithoutAccommodation()"
            data-ng-click="continueFromOutboundAccommodation()">
        {{continueButtonText()}}
    </button>
    <span class="results-loading" data-ng-show="isLoadingAutoAllocation()">
        <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
    </span>
</div>

<div class="next-step sticky-step stuck"
     data-ng-if="legOfJourney === LegOfJourney.Outbound && !booking.isOneWay()"
     data-ng-show="workflowState.isOnOutboundAccommodationStep()">
    <!-- Two way Outbound -->
    <div>
        <button class="continue button primary ng-animate-disabled"
                data-ng-hide="(canCopyToReturnAccommodation() && hasReturnPriceForSameSelection()) || isLoadingAutoAllocation()"
                data-ng-click="continueToCopyReturnAccommodation()">
            <span>Continue</span>
        </button>
        <span class="results-loading" data-ng-show="isLoadingAutoAllocation()">
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
        </span>
        <div data-ng-if="canCopyToReturnAccommodation() && hasReturnPriceForSameSelection()"
             data-ng-show="workflowState.isOnOutboundAccommodationStep()"
             class="copy-to-return-accommodation ng-animate-disabled">
            <div class="important">
                Book the same accommodation on your return?
                <span class="note">
                    Return accommodation price is {{ getReturnPriceForSameSelection() | money }}
                </span>
            </div>
            <button class="continue button primary ng-animate-disabled" data-ng-click="continueFromOutboundAccommodation()">
                No
            </button>
            <button class="continue button primary ng-animate-disabled"
                    data-ng-if="booking.isSelectedProductRestricted(legOfJourney)"
                    data-ng-click="copyToReturnAccommodationWithDeal()">
                Yes
            </button>
            <button class="continue button primary ng-animate-disabled"
                    data-ng-if="!booking.isSelectedProductRestricted(legOfJourney)"
                    data-ng-click="copyToReturnAccommodation()">
                Yes
            </button>
        </div>
    </div>
</div>

<div class="next-step sticky-step stuck"
     data-ng-if="legOfJourney === LegOfJourney.Return"
     data-ng-show="workflowState.isOnReturnAccommodationStep()">
    <!-- Return -->
    <button class="continue button primary ng-animate-disabled"
            data-ng-disabled="!areAllSailingsValidWithoutAccommodation()"
            data-ng-hide="isLoadingAutoAllocation()"
            data-ng-click="continueFromReturnAccommodation()">
        {{continueButtonText()}}
    </button>
    <span class="results-loading" data-ng-show="isLoadingAutoAllocation()">
        <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
    </span>
</div>
                        </div>
                    </div>

                    <div id="ticket-summary-app" class="ibp-app-component" data-ng-show="workflowState.isOnSummaryStep()" data-ng-controller="ticketSummaryController" data-ng-cloak>
                        <div class="ibp-section accommodation-build-ticket trip-summary">
                            <div class="section-heading">Your trip summary</div>
                            <div class="ticket-summary"
                                 data-ng-controller="bookingSummarySailingController"
                                 data-ng-if="!!booking.outboundSailing"
                                 data-ng-init="legOfJourney = LegOfJourney.Outbound" data-ng-cloak>
                                <h2>
    <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Outbound" data-ng-bind-html="Resources.iconOutbound | asRawHtml"></div>
    <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Return" data-ng-bind-html="Resources.iconReturn | asRawHtml"></div>
    <span class="full-title">
        Your {{legOfJourney.toLowerCase()}} ticket
    </span>
    <span class="shortened-title">
        {{legOfJourney}} ticket
    </span>
    <span class="departing-from">
        Departing
        <span>{{getSailing().getOriginName()}}</span>
    </span>
    <span class="destination">
        <span>{{getSailing().origin}} to {{Utils.reverseLocationCode(getSailing().origin)}}</span>
    </span>
</h2>

<div class="restrictions-ribbon-for-amendments" data-ng-if="isAmendments" data-ng-show="isDealApplied()">
    <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
    {{getDealName(legOfJourney)}} deal applied
    <a class="see-details" data-ng-click="showDealDetails(legOfJourney)">See details</a>
</div>

<!---->
<div class="your-fare" data-ng-class="{'cancelled': getSailing().isBeingCancelled}">
    <div class="date">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconCalendar | asRawHtml"></div>

            Date
        </div>
        <ul>
            <li>
                Departing
                {{booking.getDepartureDate(legOfJourney, 'dddd D MMMM, YYYY')}} at
                {{booking.getDepartureDate(legOfJourney, 'h:mm A')}}
                <a data-ng-click="backFromSummaryToDates(legOfJourney)" data-ng-show="showChangeDates()" class="change">Change</a>
            </li>
            <li>
                Arriving
                {{booking.getArrivalDate(legOfJourney, 'dddd D MMMM, YYYY')}} at
                {{booking.getArrivalDate(legOfJourney, 'h:mm A')}}
            </li>
            <li>
                Disembarking from
                {{booking.getDisembarkTime(legOfJourney, 'h:mm A')}}
            </li>
        </ul>
    </div>
    <div class="fares">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconFare | asRawHtml"></div>
            Fares
        </div>
        <ul>
            <li class="details">
                <span class="details-text">Details</span>
                <a class="change" data-ng-click="backFromSummaryToPassengers(legOfJourney)" data-ng-show="showChangeFares()">Change</a>
            </li>
            <li data-ng-if="!!booking.getPassengers(legOfJourney)" data-ng-repeat="passengerLine in getPassengerBookingLines()" class="passenger-line-item clearfix">
                <span class="item">
    <span class="display-override" data-ng-if="!!passengerLine.displayOverride && passengerLine.currentQuantity === 0">{{passengerLine.displayOverride}}</span>
    <span data-ng-if="!passengerLine.displayOverride || passengerLine.currentQuantity > 0">{{passengerLine.currentQuantity}} x {{passengerLine.displayName}}</span>
</span>
<span class="value" data-ng-if="!passengerLine.displayOverride || passengerLine.currentQuantity > 0" data-ng-class="{'unallocated': getSelectedPassengerGroupPrice(passengerLine) == null}">
    <span class="original-price" data-ng-if="getSelectedFareTypePassengerGroupPrice(passengerLine) != null && getSelectedFareTypePassengerGroupPrice(passengerLine) > getSelectedPassengerGroupPrice(passengerLine)">${{getSelectedFareTypePassengerGroupPrice(passengerLine)}}</span>
    <span data-ng-if="showPassengerPrice() && getSelectedPassengerGroupPrice(passengerLine) === 0">$0</span>
    <span data-ng-if="!!getSelectedPassengerGroupPrice(passengerLine)">$</span><span data-ng-if="getSelectedPassengerGroupPrice(passengerLine) !== 0">{{getSelectedPassengerGroupPrice(passengerLine) || 'To be selected'}} <span data-ng-if="showAgentCommission()">({{getPassengerNet(passengerLine) | money}})</span></span>
</span>
            </li>
            <li data-ng-if="booking.getPetCount(legOfJourney) > 0 && !isAmendments">
                <span class="item">
                    {{booking.getPetCount(legOfJourney)}} x {{Utils.pluralize('Pet', booking.getPetCount(legOfJourney))}}
                </span>
                <span data-ng-if="booking.showPetPrices()" class="value">$0</span>
            </li>
            <li data-ng-if="showFaresRunningOutText(legOfJourney)">
                <span class="item">&nbsp;</span>
                <span class="value"><div>
    <div class="hurry" data-ng-bind-html="Resources.iconHurryClock | asRawHtml">
    </div>
    {{ IbpCms.fareNotManyPlacesLeftAtThisPriceMessage }}
</div>
</span>
            </li>
        </ul>
    </div>
    <div class="vehicles">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconVehicle | asRawHtml"></div>
            Vehicles
        </div>
        <ul>
            <li class="details">
                <span class="details-text">Details</span>
                <a class="change" data-ng-click="backFromSummaryToVehicle(legOfJourney)" data-ng-show="showChangeVehicles()">Change</a>
                <a class="update-rego" data-ng-click="backFromSummaryToVehicleRego(legOfJourney)" data-ng-show="canShowUpdateRego()" data-ng-class="{'rego-required': anyVehicleMissingRego()}">Update Rego</a>
            </li>
            <li data-ng-if="getPushbikesCount() < 1 && getSailing().vehicles.getOptions().length < 1">No vehicles</li>
            <li data-ng-if="!!getSailing().vehicles" data-ng-repeat="vehicle in getSailing().vehicles.getOptions()" class="vehicle-line-item clearfix">
                <span class="item">1 x {{vehicle.getSummaryDisplay()}}</span>
                <ul class="vehicle-extras" data-ng-if="vehicle.getExtrasForSummary().length > 0">
                    <li data-ng-repeat="extra in vehicle.getExtrasForSummary()">{{extra}}</li>
                    <li>{{vehicle.getTotalLength()}}</li>
                </ul>
                <span class="value" data-ng-class="{'unallocated': !getVehiclePrice($index)}" data-ng-if="booking.showVehiclePrice(vehicle)">
                    <span data-ng-if="!!getVehiclePrice($index)">$</span>{{getVehiclePrice($index) || 'To be selected'}} <span data-ng-if="!!getVehiclePrice($index) && showAgentCommission()">({{getVehicleNet($index) | money }})</span>
                </span>
            </li>
            <li data-ng-if="getPushbikesCount() > 0" class="vehicle-line-item">
                <span class="item">{{getPushbikesCount()}} x {{Utils.pluralize('Bicycle', getPushbikesCount())}}</span>
                <span class="value" data-ng-class="{'unallocated': !getPushbikesPrice()}" data-ng-if="booking.showBicyclePrice()">
                    <span data-ng-if="!!getPushbikesPrice()">$</span>{{getPushbikesPrice() || 'To be selected'}}
                </span>
            </li>
        </ul>
    </div>
    <div class="accommodation">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconAccommodation | asRawHtml"></div>
            Accommodation
        </div>
        <ul>
            <li class="details">
                <span class="details-text">Details</span>
                <a data-ng-click="backFromSummaryToAccommodation(legOfJourney)" data-ng-show="showChangeAccommodation()" class="change">Change</a>
            </li>
            <li class="applied-deal" data-ng-if="isDealApplied()" data-ng-show="!isAmendments">
                <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
                {{getAppliedDealProduct().productName}} deal applied
            </li>
            <li data-ng-if="!getSailing().selectedAccommodation.hasAllocation()" class="accommodation-line-item">
                <span class="value unallocated">To be selected</span>
            </li>
            <li data-ng-if="!!getSailing().selectedAccommodation.hasAllocation()" data-ng-repeat="option in getSailing().getAccommodationLines()" class="clearfix">
                <span class="item">{{option.quantity}} x {{option.displayText}}</span>
                <span class="value" data-ng-if="showAccommodationPrice(option)">
                    <span class="original-price"
                          data-ng-if="getSelectedFareTypeAccommodationOptionPrice(option) > getSelectedAccommodationOptionPrice(option)">${{getSelectedFareTypeAccommodationOptionPrice(option)}}</span>
                    ${{getSelectedAccommodationOptionPrice(option)}}
                    <span data-ng-if="showAgentCommission()">
                        ({{getSelectedAccommodationOptionNet(option) | money}})
                    </span>
                </span>
            </li>
        </ul>
    </div>
    <div class="pets-and-kennels" data-ng-if="isAmendments">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconPetsAndKennels | asRawHtml"></div>
            Pets &amp; Kennels
        </div>
        <ul>
            <li class="details">
                <span class="details-text">Details</span>
                <a data-ng-click="backFromSummaryToPets(legOfJourney)" data-ng-show="showChangeKennels()" class="change">Change</a>
            </li>
            <li data-ng-if="getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity > 0" class="clearfix">
                <span class="item">{{getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity}} x {{Utils.pluralize("Pet", getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity)}} with {{Utils.pluralize("kennel", getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity)}}</span>
                <span class="value" data-ng-if="showAccommodationPrice(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel))">
                    <span class="original-price"
                          data-ng-if="getSelectedFareTypeAccommodationOptionPrice(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel)) !== getSelectedAccommodationOptionPrice(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel))">${{getSelectedFareTypeAccommodationOptionPrice(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel))}}</span>
                    ${{getSelectedAccommodationOptionPrice(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel))}}
                </span>
            </li>
            <li data-ng-if="getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity <= 0" class="clearfix">
                <span>No pets travelling</span>
            </li>
        </ul>
    </div>
    <div class="passengers-and-allocation" data-ng-if="isAmendments">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconPassengersAndAllocation | asRawHtml"></div>
            Passengers &amp; Allocation
        </div>
        <ul>
            <li class="details">
                <span class="details-text">Full Name</span>
                <a data-ng-click="backFromSummaryToPassengers(legOfJourney)" data-ng-show="showChangePassengers()" class="change">Change</a>
            </li>
            <li data-ng-if="!!getCabinAllocations(legOfJourney)" data-ng-repeat="allocation in getCabinAllocations(legOfJourney)" class="clearfix">
                <div data-ng-repeat="passenger in allocation.passengers">{{passenger.passengerDetails.firstName}} {{passenger.passengerDetails.lastName}}</div>
                <div data-ng-repeat="passenger in allocation.infants">{{passenger.passengerDetails.firstName}} {{passenger.passengerDetails.lastName}}</div>
                <div class="cabin-details-text">In a {{getAccommodationDisplayName(allocation.categoryCode, allocation.categorySpecificationCode)}}</div>
            </li>
        </ul>
    </div>
    <ul>
        <li class="total">
            <ul>
                <li class="outbound-total" data-ng-hide="hideTotalRow()">
                    <span class="value">{{getSailingTotalPriceDisplay(legOfJourney)}}
                        <span data-ng-if="showAgentCommission()"> ({{getSailingTotalNet(legOfJourney) | money}})</span></span>
                    Total {{legOfJourney}}
                    <span class="see-terms">See <a data-ng-click="showProductTermsAndConditions(legOfJourney)">{{getSelectedSailingProductName(legOfJourney)}} Terms &amp; Conditions</a></span>
                </li>
            </ul>
        </li>
    </ul>
</div>
<div data-ng-if="showCancel()" class="cancelable-area clearfix">
    <div data-ng-if="!getSailing().isBeingCancelled">
        <div class="help-text">
            Cancel this sailing
        </div>
        <button data-ng-click="toggleCancelSailing()" class="button delete">
            Cancel
            {{getSailing().origin}} to {{Utils.reverseLocationCode(getSailing().origin)}}
        </button>
    </div>
    <div data-ng-if="getSailing().isBeingCancelled">
        <div class="help-text with-refund-info">
            Refund due: {{ getSailing().refundableAmount | money }}
            <ul>
                <li data-ng-repeat="fee in getSailing().cancellationFees">
                    {{ fee.description }}: {{ fee.price | money:false }}
                </li>
            </ul>
        </div>
        <button data-ng-click="toggleCancelSailing()" class="button delete">Undo Cancellation</button>
    </div>
</div>

                            </div>
                            <div class="ticket-summary"
                                 data-ng-controller="bookingSummarySailingController"
                                 data-ng-if="!!booking.returnSailing"
                                 data-ng-init="legOfJourney = LegOfJourney.Return" data-ng-cloak>
                                <h2>
    <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Outbound" data-ng-bind-html="Resources.iconOutbound | asRawHtml"></div>
    <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Return" data-ng-bind-html="Resources.iconReturn | asRawHtml"></div>
    <span class="full-title">
        Your {{legOfJourney.toLowerCase()}} ticket
    </span>
    <span class="shortened-title">
        {{legOfJourney}} ticket
    </span>
    <span class="departing-from">
        Departing
        <span>{{getSailing().getOriginName()}}</span>
    </span>
    <span class="destination">
        <span>{{getSailing().origin}} to {{Utils.reverseLocationCode(getSailing().origin)}}</span>
    </span>
</h2>

<div class="restrictions-ribbon-for-amendments" data-ng-if="isAmendments" data-ng-show="isDealApplied()">
    <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
    {{getDealName(legOfJourney)}} deal applied
    <a class="see-details" data-ng-click="showDealDetails(legOfJourney)">See details</a>
</div>

<!---->
<div class="your-fare" data-ng-class="{'cancelled': getSailing().isBeingCancelled}">
    <div class="date">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconCalendar | asRawHtml"></div>

            Date
        </div>
        <ul>
            <li>
                Departing
                {{booking.getDepartureDate(legOfJourney, 'dddd D MMMM, YYYY')}} at
                {{booking.getDepartureDate(legOfJourney, 'h:mm A')}}
                <a data-ng-click="backFromSummaryToDates(legOfJourney)" data-ng-show="showChangeDates()" class="change">Change</a>
            </li>
            <li>
                Arriving
                {{booking.getArrivalDate(legOfJourney, 'dddd D MMMM, YYYY')}} at
                {{booking.getArrivalDate(legOfJourney, 'h:mm A')}}
            </li>
            <li>
                Disembarking from
                {{booking.getDisembarkTime(legOfJourney, 'h:mm A')}}
            </li>
        </ul>
    </div>
    <div class="fares">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconFare | asRawHtml"></div>
            Fares
        </div>
        <ul>
            <li class="details">
                <span class="details-text">Details</span>
                <a class="change" data-ng-click="backFromSummaryToPassengers(legOfJourney)" data-ng-show="showChangeFares()">Change</a>
            </li>
            <li data-ng-if="!!booking.getPassengers(legOfJourney)" data-ng-repeat="passengerLine in getPassengerBookingLines()" class="passenger-line-item clearfix">
                <span class="item">
    <span class="display-override" data-ng-if="!!passengerLine.displayOverride && passengerLine.currentQuantity === 0">{{passengerLine.displayOverride}}</span>
    <span data-ng-if="!passengerLine.displayOverride || passengerLine.currentQuantity > 0">{{passengerLine.currentQuantity}} x {{passengerLine.displayName}}</span>
</span>
<span class="value" data-ng-if="!passengerLine.displayOverride || passengerLine.currentQuantity > 0" data-ng-class="{'unallocated': getSelectedPassengerGroupPrice(passengerLine) == null}">
    <span class="original-price" data-ng-if="getSelectedFareTypePassengerGroupPrice(passengerLine) != null && getSelectedFareTypePassengerGroupPrice(passengerLine) > getSelectedPassengerGroupPrice(passengerLine)">${{getSelectedFareTypePassengerGroupPrice(passengerLine)}}</span>
    <span data-ng-if="showPassengerPrice() && getSelectedPassengerGroupPrice(passengerLine) === 0">$0</span>
    <span data-ng-if="!!getSelectedPassengerGroupPrice(passengerLine)">$</span><span data-ng-if="getSelectedPassengerGroupPrice(passengerLine) !== 0">{{getSelectedPassengerGroupPrice(passengerLine) || 'To be selected'}} <span data-ng-if="showAgentCommission()">({{getPassengerNet(passengerLine) | money}})</span></span>
</span>
            </li>
            <li data-ng-if="booking.getPetCount(legOfJourney) > 0 && !isAmendments">
                <span class="item">
                    {{booking.getPetCount(legOfJourney)}} x {{Utils.pluralize('Pet', booking.getPetCount(legOfJourney))}}
                </span>
                <span data-ng-if="booking.showPetPrices()" class="value">$0</span>
            </li>
            <li data-ng-if="showFaresRunningOutText(legOfJourney)">
                <span class="item">&nbsp;</span>
                <span class="value"><div>
    <div class="hurry" data-ng-bind-html="Resources.iconHurryClock | asRawHtml">
    </div>
    {{ IbpCms.fareNotManyPlacesLeftAtThisPriceMessage }}
</div>
</span>
            </li>
        </ul>
    </div>
    <div class="vehicles">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconVehicle | asRawHtml"></div>
            Vehicles
        </div>
        <ul>
            <li class="details">
                <span class="details-text">Details</span>
                <a class="change" data-ng-click="backFromSummaryToVehicle(legOfJourney)" data-ng-show="showChangeVehicles()">Change</a>
                <a class="update-rego" data-ng-click="backFromSummaryToVehicleRego(legOfJourney)" data-ng-show="canShowUpdateRego()" data-ng-class="{'rego-required': anyVehicleMissingRego()}">Update Rego</a>
            </li>
            <li data-ng-if="getPushbikesCount() < 1 && getSailing().vehicles.getOptions().length < 1">No vehicles</li>
            <li data-ng-if="!!getSailing().vehicles" data-ng-repeat="vehicle in getSailing().vehicles.getOptions()" class="vehicle-line-item clearfix">
                <span class="item">1 x {{vehicle.getSummaryDisplay()}}</span>
                <ul class="vehicle-extras" data-ng-if="vehicle.getExtrasForSummary().length > 0">
                    <li data-ng-repeat="extra in vehicle.getExtrasForSummary()">{{extra}}</li>
                    <li>{{vehicle.getTotalLength()}}</li>
                </ul>
                <span class="value" data-ng-class="{'unallocated': !getVehiclePrice($index)}" data-ng-if="booking.showVehiclePrice(vehicle)">
                    <span data-ng-if="!!getVehiclePrice($index)">$</span>{{getVehiclePrice($index) || 'To be selected'}} <span data-ng-if="!!getVehiclePrice($index) && showAgentCommission()">({{getVehicleNet($index) | money }})</span>
                </span>
            </li>
            <li data-ng-if="getPushbikesCount() > 0" class="vehicle-line-item">
                <span class="item">{{getPushbikesCount()}} x {{Utils.pluralize('Bicycle', getPushbikesCount())}}</span>
                <span class="value" data-ng-class="{'unallocated': !getPushbikesPrice()}" data-ng-if="booking.showBicyclePrice()">
                    <span data-ng-if="!!getPushbikesPrice()">$</span>{{getPushbikesPrice() || 'To be selected'}}
                </span>
            </li>
        </ul>
    </div>
    <div class="accommodation">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconAccommodation | asRawHtml"></div>
            Accommodation
        </div>
        <ul>
            <li class="details">
                <span class="details-text">Details</span>
                <a data-ng-click="backFromSummaryToAccommodation(legOfJourney)" data-ng-show="showChangeAccommodation()" class="change">Change</a>
            </li>
            <li class="applied-deal" data-ng-if="isDealApplied()" data-ng-show="!isAmendments">
                <div class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></div>
                {{getAppliedDealProduct().productName}} deal applied
            </li>
            <li data-ng-if="!getSailing().selectedAccommodation.hasAllocation()" class="accommodation-line-item">
                <span class="value unallocated">To be selected</span>
            </li>
            <li data-ng-if="!!getSailing().selectedAccommodation.hasAllocation()" data-ng-repeat="option in getSailing().getAccommodationLines()" class="clearfix">
                <span class="item">{{option.quantity}} x {{option.displayText}}</span>
                <span class="value" data-ng-if="showAccommodationPrice(option)">
                    <span class="original-price"
                          data-ng-if="getSelectedFareTypeAccommodationOptionPrice(option) > getSelectedAccommodationOptionPrice(option)">${{getSelectedFareTypeAccommodationOptionPrice(option)}}</span>
                    ${{getSelectedAccommodationOptionPrice(option)}}
                    <span data-ng-if="showAgentCommission()">
                        ({{getSelectedAccommodationOptionNet(option) | money}})
                    </span>
                </span>
            </li>
        </ul>
    </div>
    <div class="pets-and-kennels" data-ng-if="isAmendments">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconPetsAndKennels | asRawHtml"></div>
            Pets &amp; Kennels
        </div>
        <ul>
            <li class="details">
                <span class="details-text">Details</span>
                <a data-ng-click="backFromSummaryToPets(legOfJourney)" data-ng-show="showChangeKennels()" class="change">Change</a>
            </li>
            <li data-ng-if="getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity > 0" class="clearfix">
                <span class="item">{{getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity}} x {{Utils.pluralize("Pet", getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity)}} with {{Utils.pluralize("kennel", getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity)}}</span>
                <span class="value" data-ng-if="showAccommodationPrice(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel))">
                    <span class="original-price"
                          data-ng-if="getSelectedFareTypeAccommodationOptionPrice(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel)) !== getSelectedAccommodationOptionPrice(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel))">${{getSelectedFareTypeAccommodationOptionPrice(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel))}}</span>
                    ${{getSelectedAccommodationOptionPrice(getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel))}}
                </span>
            </li>
            <li data-ng-if="getSailing().selectedAccommodation.getExtra(ExtrasCode.Kennel).quantity <= 0" class="clearfix">
                <span>No pets travelling</span>
            </li>
        </ul>
    </div>
    <div class="passengers-and-allocation" data-ng-if="isAmendments">
        <div class="heading">
            <div class="icon" data-ng-bind-html="Resources.iconPassengersAndAllocation | asRawHtml"></div>
            Passengers &amp; Allocation
        </div>
        <ul>
            <li class="details">
                <span class="details-text">Full Name</span>
                <a data-ng-click="backFromSummaryToPassengers(legOfJourney)" data-ng-show="showChangePassengers()" class="change">Change</a>
            </li>
            <li data-ng-if="!!getCabinAllocations(legOfJourney)" data-ng-repeat="allocation in getCabinAllocations(legOfJourney)" class="clearfix">
                <div data-ng-repeat="passenger in allocation.passengers">{{passenger.passengerDetails.firstName}} {{passenger.passengerDetails.lastName}}</div>
                <div data-ng-repeat="passenger in allocation.infants">{{passenger.passengerDetails.firstName}} {{passenger.passengerDetails.lastName}}</div>
                <div class="cabin-details-text">In a {{getAccommodationDisplayName(allocation.categoryCode, allocation.categorySpecificationCode)}}</div>
            </li>
        </ul>
    </div>
    <ul>
        <li class="total">
            <ul>
                <li class="outbound-total" data-ng-hide="hideTotalRow()">
                    <span class="value">{{getSailingTotalPriceDisplay(legOfJourney)}}
                        <span data-ng-if="showAgentCommission()"> ({{getSailingTotalNet(legOfJourney) | money}})</span></span>
                    Total {{legOfJourney}}
                    <span class="see-terms">See <a data-ng-click="showProductTermsAndConditions(legOfJourney)">{{getSelectedSailingProductName(legOfJourney)}} Terms &amp; Conditions</a></span>
                </li>
            </ul>
        </li>
    </ul>
</div>
<div data-ng-if="showCancel()" class="cancelable-area clearfix">
    <div data-ng-if="!getSailing().isBeingCancelled">
        <div class="help-text">
            Cancel this sailing
        </div>
        <button data-ng-click="toggleCancelSailing()" class="button delete">
            Cancel
            {{getSailing().origin}} to {{Utils.reverseLocationCode(getSailing().origin)}}
        </button>
    </div>
    <div data-ng-if="getSailing().isBeingCancelled">
        <div class="help-text with-refund-info">
            Refund due: {{ getSailing().refundableAmount | money }}
            <ul>
                <li data-ng-repeat="fee in getSailing().cancellationFees">
                    {{ fee.description }}: {{ fee.price | money:false }}
                </li>
            </ul>
        </div>
        <button data-ng-click="toggleCancelSailing()" class="button delete">Undo Cancellation</button>
    </div>
</div>

                            </div>
                            <div class="grand-total section-heading">Grand total: <span class="value">{{ getBookingTotalPrice() | money }}<span data-ng-if="showAgentCommission()"> ({{ booking.totalNet() | money }})</span></span></div>
                            <button class="button secondary" data-ng-show="showAgentCommissionToggle()" data-ng-click="toggleShowCommission()">{{showHideCommissionDisplay()}} Net Values</button>
                        </div>
                        <div class="next-step sticky-step stuck" data-ng-if="workflowState.isOnSummaryStep()">
                            <button class="pay-now ng-animate-disabled button primary" data-ng-click="continueToPassengerDetails()" data-ng-disabled="isValidatingAccommodation()" data-delay-enable="800" data-ng-hide="isValidatingAccommodation()">Continue to passenger details</button>
                            <div class="results-loading" data-ng-show="isValidatingAccommodation()"><img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" /></div>
                        </div>
                    </div>

                    <div id="passenger-details-app" class="ibp-app-component" data-ng-if="workflowState.isOnPassengerDetails()" data-ng-controller="passengerDetailsController" data-ng-cloak>
                        

<div class="passenger-details-section">
    <form name="passengerDetailsForm" novalidate="" role="form" class="standard-form" data-form-submit="continueToAllocation()" data-view-on-focus>
        <div class="results-loading whole-page-loader" data-ng-show="!pricesHaveLoaded()"><img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" /></div>
        <div class="ibp-section" data-ng-show="pricesHaveLoaded()">
            <div class="section-heading">{{getHeaderText()}}</div>
            <h3>
                <span data-ng-if="!isVehicleRegoMode()">{{ IbpCms.passengerDetailsIntro }}</span>
                <span data-ng-if="isVehicleRegoMode()">{{ IbpCms.vehicleRegoIntro }}</span>
            </h3>
            <div class="dropdown" data-ng-show="canAddRemovePassengers() && !isVehicleRegoMode()">
                <select data-ng-model="passengerToAdd" data-ng-options="passenger.code as passenger.display for passenger in passengerToAddCodes">
                    <option selected value="">Select</option>
                </select>
                <button class="ng-animate-disabled button primary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" data-ng-click="addPassenger()">
                    Add Passenger
                </button>
            </div>
            <div class="travelling-as-wrapper" data-ng-if="!isVehicleRegoMode()">
                <div class="travelling-as-options radio-group radio-vertical errorable" data-ng-show="customerMustNominateTravellingAs()" data-ng-class="{'is-invalid': passengerDetailsForm.$dirty && !isCustomerTravellingAsValid()}">
                    <label data-ng-show="hasPassengerType(PassengerCode.Adult)">
                        <input type="radio" name="customerTravellingAsAdult" data-ng-model="passengerDetailSettings.customerTravellingAs" data-ng-value="PassengerCode.Adult"
                               data-ng-click="changedCustomerTravellingAs()" />
                        <span class="radiobtn"></span>I am travelling on this booking<span data-ng-if="hasPassengerType(PassengerCode.Pensioner)"> as an <strong>adult</strong></span>
                    </label>
                    <label data-ng-show="hasPassengerType(PassengerCode.Pensioner)">
                        <input type="radio" name="customerTravellingAsPensioner" data-ng-model="passengerDetailSettings.customerTravellingAs" data-ng-value="PassengerCode.Pensioner"
                               data-ng-click="changedCustomerTravellingAs()" />
                        <span class="radiobtn"></span>I am travelling on this booking<span data-ng-if="hasPassengerType(PassengerCode.Adult)"> as a <strong>pensioner</strong></span>
                    </label>
                    <label>
                        <input type="radio" name="customerNotTravelling" data-ng-model="passengerDetailSettings.customerTravellingAs" data-ng-value="CustomerTravellingAs.NotTravelling"
                               data-ng-click="changedCustomerTravellingAs()" />
                        <span class="radiobtn"></span>I am making this booking on behalf of someone else
                    </label>
                    <!-- todo: validate-positioner not working here -->
                    <div class="validate-positioner" data-ng-class="{'msg-inactive': !passengerDetailsForm.$dirty || isCustomerTravellingAsValid()}">
                        <div class="input-message-validate invalid pos-bottom tip-center">
                            Oops, you must be travelling in order to make this booking
                        </div>
                    </div>
                </div>
            </div>

            <div data-ng-if="!!getPassengerGroup(PassengerCode.Adult) && !isVehicleRegoMode()" class="passenger-group">
                <div class="group-title">
                    Adults
                </div>
                <table class="passenger-details-container">
                    <tbody data-ng-repeat="detail in getPassengerDetails(PassengerCode.Adult)" data-ng-form name="adultDetailsForm{{$index}}">
                        <tr data-ng-class="{'last': $last}">
                            <td class="field-wrap title">
    <label>
        Title
        <div class="input-wrap select-input-wrap no-pad" data-validation-state>
            <select name="title" class="input-border" data-ng-model="detail.title" data-ng-change="changeTitle(detail); resetCustomerCodeResultValidity(detail)" data-ng-options="title as title for title in getTitles()" data-ng-disabled="!canEditPassenger(detail)">
                <option selected value="">Select</option>
            </select>
        </div>
    </label>
</td>
<td class="field-wrap first-name">
    <label>
        First name
        <div class="input-wrap input-border" data-validation-state>
            <input type="text" name="firstName" class="input-text" data-ng-model="detail.firstName" data-ng-required="true" data-ng-disabled="!canEditPassenger(detail)" data-ng-change="resetCustomerCodeResultValidity(detail)">
            <span class="input-message-validate pos-right">
                <span data-ng-messages="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].firstName.$error" data-ng-show="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].firstName.$invalid">
                    <span class="required">Required</span>
                </span>
                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].firstName.$valid"></i>
            </span>
        </div>
    </label>
</td>
<td class="field-wrap last-name">
    <label>
        Last name
        <div class="input-wrap input-border" data-validation-state>
            <input type="text" name="lastName" class="input-text" data-ng-model="detail.lastName" data-ng-required="true" data-ng-disabled="!canEditPassenger(detail)" data-ng-change="resetCustomerCodeResultValidity(detail)">
            <span class="input-message-validate pos-right">
                <span data-ng-messages="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].lastName.$error" data-ng-show="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].lastName.$invalid">
                    <span class="required">Required</span>
                </span>
                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].lastName.$valid"></i>
            </span>
        </div>
    </label>
</td>
<td class="field-wrap gender">
    <label>
        Gender
        <div class="input-wrap no-pad" data-validation-state>
            <select name="gender" class="input-border" data-ng-model="detail.gender" data-ng-change="changeGender(detail); resetCustomerCodeResultValidity(detail)" data-ng-required="true" data-ng-options="gender as gender for gender in passengerDetailSettings.genders" data-ng-disabled="!canEditPassenger(detail)">
                <option disabled selected value="">Select</option>
            </select>
            <span class="input-message-validate pos-bottom" data-ng-show="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].gender.$invalid">
                <span data-ng-messages="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].gender.$error">
                    <span data-ng-message="required" data-ng-show="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].gender.$error.required" class="required">Required</span>
                </span>
            </span>
        </div>
    </label>
</td>

                            <td colspan="2" class="field-wrap member-no">
                                <label>
                                    Member No. <span class="optional">(Optional)</span>
                                    <div class="input-wrap input-border" data-validation-state>
                                        <input type="text" name="customerCode" class="input-text" data-ng-model="detail.customerCode" data-ng-disabled="!canEditPassenger(detail)" data-member-number="isCustomerCodeResultInvalid(detail)" data-ng-change="resetCustomerCodeResultValidity(detail)">
                                        <span class="input-message-validate pos-right" data-ng-if="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].customerCode.$error.memberNumber">
                                            <span data-ng-messages="passengerDetailsForm[&#39;adultDetailsForm&#39; + $index].customerCode.$error.memberNumber">
                                                <span class="required">Invalid</span>
                                            </span>
                                        </span>
                                    </div>
                                </label>
                            </td>
                        </tr>
                        <tr class="remove-passenger" data-ng-class="{'last': $last}">
                            <td colspan="6">
                                <div class="delete-passenger-button button" data-ng-click="removePassenger(detail)" data-ng-show="canRemovePassenger(detail)">Remove {{detail.firstName}} {{detail.lastName}}</div>
                            </td>
                        </tr>
                        <tr class="separator-line" data-ng-if="!$last">
                            <td colspan="6">
                                <hr />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div data-ng-if="!!getPassengerGroup(PassengerCode.Pensioner) && !isVehicleRegoMode()" class="passenger-group">
                <div class="group-title">
                    Pensioners <span data-ng-if="isPensionerFareSoldOut()">(booked as adults)</span>
                </div>
                <table class="passenger-details-container pensioner-details">
                    <tbody data-ng-repeat="detail in getPassengerDetails(PassengerCode.Pensioner)" data-ng-form name="pensionerDetailsForm{{$index}}" class="clearfix">
                        <tr class="general-details">
                            <td class="field-wrap title">
    <label>
        Title
        <div class="input-wrap select-input-wrap no-pad" data-validation-state>
            <select name="title" class="input-border" data-ng-model="detail.title" data-ng-change="changeTitle(detail); resetCustomerCodeResultValidity(detail)" data-ng-options="title as title for title in getTitles()" data-ng-disabled="!canEditPassenger(detail)">
                <option selected value="">Select</option>
            </select>
        </div>
    </label>
</td>
<td class="field-wrap first-name">
    <label>
        First name
        <div class="input-wrap input-border" data-validation-state>
            <input type="text" name="firstName" class="input-text" data-ng-model="detail.firstName" data-ng-required="true" data-ng-disabled="!canEditPassenger(detail)" data-ng-change="resetCustomerCodeResultValidity(detail)">
            <span class="input-message-validate pos-right">
                <span data-ng-messages="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].firstName.$error" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].firstName.$invalid">
                    <span class="required">Required</span>
                </span>
                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].firstName.$valid"></i>
            </span>
        </div>
    </label>
</td>
<td class="field-wrap last-name">
    <label>
        Last name
        <div class="input-wrap input-border" data-validation-state>
            <input type="text" name="lastName" class="input-text" data-ng-model="detail.lastName" data-ng-required="true" data-ng-disabled="!canEditPassenger(detail)" data-ng-change="resetCustomerCodeResultValidity(detail)">
            <span class="input-message-validate pos-right">
                <span data-ng-messages="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].lastName.$error" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].lastName.$invalid">
                    <span class="required">Required</span>
                </span>
                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].lastName.$valid"></i>
            </span>
        </div>
    </label>
</td>
<td class="field-wrap gender">
    <label>
        Gender
        <div class="input-wrap no-pad" data-validation-state>
            <select name="gender" class="input-border" data-ng-model="detail.gender" data-ng-change="changeGender(detail); resetCustomerCodeResultValidity(detail)" data-ng-required="true" data-ng-options="gender as gender for gender in passengerDetailSettings.genders" data-ng-disabled="!canEditPassenger(detail)">
                <option disabled selected value="">Select</option>
            </select>
            <span class="input-message-validate pos-bottom" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].gender.$invalid">
                <span data-ng-messages="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].gender.$error">
                    <span data-ng-message="required" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].gender.$error.required" class="required">Required</span>
                </span>
            </span>
        </div>
    </label>
</td>

                            <td colspan="2" class="field-wrap member-no">
                                <label>
                                    Member No. <span class="optional">(Optional)</span>
                                    <div class="input-wrap input-border" data-validation-state>
                                        <input type="text" name="customerCode" class="input-text" data-ng-model="detail.customerCode" data-ng-disabled="!canEditPassenger(detail)" data-member-number="isCustomerCodeResultInvalid(detail)" data-ng-change="resetCustomerCodeResultValidity(detail)">
                                        <span class="input-message-validate pos-right" data-ng-if="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].customerCode.$error.memberNumber">
                                            <span data-ng-messages="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].customerCode.$error.memberNumber" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].customerCode.$invalid">
                                                <span class="required">Invalid</span>
                                            </span>
                                        </span>
                                    </div>
                                </label>
                            </td>
                        </tr>
                        <tr class="pension-details" data-ng-class="{'last': $last, 'has-error-message': passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardNumber.$touched && passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardNumber.$error.pattern}">
                            <td colspan="6" data-ng-if="isPensionerFareSoldOut()" class="field-wrap"></td>
                            <td colspan="2" data-ng-if="!isPensionerFareSoldOut()" class="field-wrap">
                                <label>
                                    Pensioner No.
                                    <i class="help" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="left" data-tooltip-content="{{IbpCms.searchWidgetPensionerTooltip}}" data-ng-click="viewPensionerEligibilityModal()"></i>
                                    <div class="input-wrap input-border" data-validation-state>
                                        <input type="text" name="pensionerCardNumber" class="input-text" data-ng-model="detail.pensionerCardNumber" data-ng-required="true" data-ng-pattern="pensionerCardNumberPattern">
                                        <span class="input-message-validate post-right">
                                            <span data-ng-messages="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardNumber.$error" role="alert">
                                                <span data-ng-message="required" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardNumber.$error.required" class="required">Required</span>
                                                <span data-ng-message="pattern" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardNumber.$error.pattern" class="required">Invalid</span>
                                            </span>
                                            <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardNumber.$valid"></i>
                                        </span>
                                    </div>
                                    <div class="red pensioner-error-message" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardNumber.$touched && passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardNumber.$error.pattern">
                                        {{IbpCms.passengerDetailsInvalidPensionerNumber}}
                                        <a data-ng-click="swapPensionerWithAdult(detail)">change to adult fare</a>
                                    </div>
                                </label>
                            </td>
                            <td colspan="4" data-ng-if="!isPensionerFareSoldOut()" class="field-wrap">
                                <div class="label">
                                    <span class="date-selector-wrap-label">
                                        Pensioner No. Expiry Date
                                    </span>
                                    <div class="input-wrap no-pad date-selector-wrap" data-validation-state data-input-name="pensionerCardExpiryDate">
                                        <div class="error-padding clearfix" data-ng-class="{'is-invalid': passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardExpiryDate.$invalid }">
                                            <div data-date-selector name="pensionerCardExpiryDate"
                                                 data-ng-model="detail.pensionerCardExpiryDate"
                                                 data-min-year="Utils.getCurrentYear()"
                                                 data-max-year="Utils.getCurrentYear() + 10"
                                 data-date-in-future
                                 data-ng-required="true"></div>
                                            <div class="validate-positioner">
                                                <div class="input-message-validate pos-bottom invalid tip-center">
                                                    <span data-ng-messages="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardExpiryDate.$error" data-ng-show="!passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardExpiryDate.$valid">
                                                        <span data-ng-message="date" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardExpiryDate.$error.date" class="required">Invalid Date</span>
                                                        <span data-ng-message="dateInFuture" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardExpiryDate.$error.dateInFuture" class="required">Date must be in the future</span>
                                        <span data-ng-message="required" data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardExpiryDate.$error.required" class="required">Required</span>
                                                    </span>
                                                    <span data-ng-show="passengerDetailsForm[&#39;pensionerDetailsForm&#39; + $index].pensionerCardExpiryDate.$valid" class="input-message-validate pos-bottom">
                                                        <i class="ibp-icon-tick"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr class="remove-passenger" data-ng-class="{'last': $last}">
                            <td colspan="6">
                                <div class="delete-passenger-button button" data-ng-click="removePassenger(detail)" data-ng-show="canRemovePassenger(detail)">Remove {{detail.firstName}} {{detail.lastName}}</div>
                            </td>
                        </tr>
                        <tr class="separator-line" data-ng-if="!$last">
                            <td colspan="6">
                                <hr />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div data-ng-if="!!getPassengerGroup(PassengerCode.Child) && !isVehicleRegoMode()" class="passenger-group">
                <div class="group-title">
                    Children
                </div>
                <table class="passenger-details-container children-details">
                    <tbody data-ng-repeat="detail in getPassengerDetails(PassengerCode.Child)" data-ng-form name="childDetailsForm{{$index}}">
                        <tr>
                            <td class="field-wrap title">
    <label>
        Title
        <div class="input-wrap select-input-wrap no-pad" data-validation-state>
            <select name="title" class="input-border" data-ng-model="detail.title" data-ng-change="changeTitle(detail); resetCustomerCodeResultValidity(detail)" data-ng-options="title as title for title in getTitles()" data-ng-disabled="!canEditPassenger(detail)">
                <option selected value="">Select</option>
            </select>
        </div>
    </label>
</td>
<td class="field-wrap first-name">
    <label>
        First name
        <div class="input-wrap input-border" data-validation-state>
            <input type="text" name="firstName" class="input-text" data-ng-model="detail.firstName" data-ng-required="true" data-ng-disabled="!canEditPassenger(detail)" data-ng-change="resetCustomerCodeResultValidity(detail)">
            <span class="input-message-validate pos-right">
                <span data-ng-messages="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].firstName.$error" data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].firstName.$invalid">
                    <span class="required">Required</span>
                </span>
                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].firstName.$valid"></i>
            </span>
        </div>
    </label>
</td>
<td class="field-wrap last-name">
    <label>
        Last name
        <div class="input-wrap input-border" data-validation-state>
            <input type="text" name="lastName" class="input-text" data-ng-model="detail.lastName" data-ng-required="true" data-ng-disabled="!canEditPassenger(detail)" data-ng-change="resetCustomerCodeResultValidity(detail)">
            <span class="input-message-validate pos-right">
                <span data-ng-messages="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].lastName.$error" data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].lastName.$invalid">
                    <span class="required">Required</span>
                </span>
                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].lastName.$valid"></i>
            </span>
        </div>
    </label>
</td>
<td class="field-wrap gender">
    <label>
        Gender
        <div class="input-wrap no-pad" data-validation-state>
            <select name="gender" class="input-border" data-ng-model="detail.gender" data-ng-change="changeGender(detail); resetCustomerCodeResultValidity(detail)" data-ng-required="true" data-ng-options="gender as gender for gender in passengerDetailSettings.genders" data-ng-disabled="!canEditPassenger(detail)">
                <option disabled selected value="">Select</option>
            </select>
            <span class="input-message-validate pos-bottom" data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].gender.$invalid">
                <span data-ng-messages="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].gender.$error">
                    <span data-ng-message="required" data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].gender.$error.required" class="required">Required</span>
                </span>
            </span>
        </div>
    </label>
</td>

                        </tr>
                        <tr data-ng-class="{'last': $last}">
                            <td colspan="6" class="field-wrap date-of-birth">
                                <div class="label">
                                    <span class="date-selector-wrap-label">
                                        Date of birth
                                    </span>
                                    <div class="input-wrap no-pad date-selector-wrap" data-validation-state data-input-name="dateOfBirth" data-ng-disabled="!canEditPassenger(detail)">
                                        <div class="error-padding clearfix" data-ng-class="{'is-invalid': passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$invalid }">
                                            <div data-date-selector name="dateOfBirth"
                                                 data-ng-model="detail.dateOfBirth"
                                                 data-min-year="getMinYearForChildren()"
                                                 data-max-year="getMaxYearForChildren()"
                                                 data-minimum-date="{{getMinDateForChildren()}}"
                                                 data-maximum-date="{{getMaxDateForChildren()}}"
                                                 required></div>
                                            <div class="validate-positioner" data-ng-show="!passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error && !(passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error.minimumDate || passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error.maximumDate)">
                                                <div class="input-message-validate pos-bottom invalid tip-center">
                                                    <span data-ng-messages="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error" data-ng-show="!passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$valid && !passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error.minimumDate && !passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error.maximumDate">
                                                        <span data-ng-message="required" data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error.required" class="required">Required</span>
                                                        <span data-ng-message="date" data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error.date" class="required">Invalid Date</span>
                                                    </span>
                                                    <span data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$valid" class="input-message-validate pos-bottom">
                                                        <i class="ibp-icon-tick"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="red clearfix child-error-message" data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$touched && passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$invalid && (passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error.minimumDate || passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error.maximumDate)">
                                        <span data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error.maximumDate">{{IbpCms.validationChildAge}} <a data-ng-click="changePassengerToInfant(detail)">change to infant fare</a></span>
                                        <span data-ng-show="passengerDetailsForm[&#39;childDetailsForm&#39; + $index].dateOfBirth.$error.minimumDate">{{IbpCms.validationChildAge}} <a data-ng-click="changePassengerToAdult(detail)">change to adult fare</a></span>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr class="remove-passenger" data-ng-class="{'last': $last}">
                            <td colspan="6">
                                <div class="delete-passenger-button button" data-ng-click="removePassenger(detail)" data-ng-show="canRemovePassenger(detail)">Remove {{detail.firstName}} {{detail.lastName}}</div>
                            </td>
                        </tr>
                        <tr class="separator-line" data-ng-if="!$last">
                            <td colspan="6">
                                <hr />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div data-ng-if="!!getPassengerGroup(PassengerCode.Infant) && !isVehicleRegoMode()" class="passenger-group" data-ng-hide="">
                <div class="group-title">
                    Infants
                </div>
                <table class="passenger-details-container infants-details">
                    <tbody data-ng-repeat="detail in getPassengerDetails(PassengerCode.Infant)" data-ng-form name="infantDetailsForm{{$index}}">
                        <tr>
                            <td class="field-wrap title">
    <label>
        Title
        <div class="input-wrap select-input-wrap no-pad" data-validation-state>
            <select name="title" class="input-border" data-ng-model="detail.title" data-ng-change="changeTitle(detail); resetCustomerCodeResultValidity(detail)" data-ng-options="title as title for title in getTitles()" data-ng-disabled="!canEditPassenger(detail)">
                <option selected value="">Select</option>
            </select>
        </div>
    </label>
</td>
<td class="field-wrap first-name">
    <label>
        First name
        <div class="input-wrap input-border" data-validation-state>
            <input type="text" name="firstName" class="input-text" data-ng-model="detail.firstName" data-ng-required="true" data-ng-disabled="!canEditPassenger(detail)" data-ng-change="resetCustomerCodeResultValidity(detail)">
            <span class="input-message-validate pos-right">
                <span data-ng-messages="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].firstName.$error" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].firstName.$invalid">
                    <span class="required">Required</span>
                </span>
                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].firstName.$valid"></i>
            </span>
        </div>
    </label>
</td>
<td class="field-wrap last-name">
    <label>
        Last name
        <div class="input-wrap input-border" data-validation-state>
            <input type="text" name="lastName" class="input-text" data-ng-model="detail.lastName" data-ng-required="true" data-ng-disabled="!canEditPassenger(detail)" data-ng-change="resetCustomerCodeResultValidity(detail)">
            <span class="input-message-validate pos-right">
                <span data-ng-messages="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].lastName.$error" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].lastName.$invalid">
                    <span class="required">Required</span>
                </span>
                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].lastName.$valid"></i>
            </span>
        </div>
    </label>
</td>
<td class="field-wrap gender">
    <label>
        Gender
        <div class="input-wrap no-pad" data-validation-state>
            <select name="gender" class="input-border" data-ng-model="detail.gender" data-ng-change="changeGender(detail); resetCustomerCodeResultValidity(detail)" data-ng-required="true" data-ng-options="gender as gender for gender in passengerDetailSettings.genders" data-ng-disabled="!canEditPassenger(detail)">
                <option disabled selected value="">Select</option>
            </select>
            <span class="input-message-validate pos-bottom" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].gender.$invalid">
                <span data-ng-messages="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].gender.$error">
                    <span data-ng-message="required" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].gender.$error.required" class="required">Required</span>
                </span>
            </span>
        </div>
    </label>
</td>

                        </tr>
                        <tr data-ng-class="{'last': $last}">
                            <td colspan="6" class="field-wrap date-of-birth">
                                <div class="label">
                                    Date of birth
                                    <div class="input-wrap no-pad date-selector-wrap" data-validation-state data-input-name="dateOfBirth" data-ng-disabled="!canEditPassenger(detail)">
                                        <div class="error-padding clearfix" data-ng-class="{'is-invalid': passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$invalid }">
                                            <div data-validation-state data-input-name="dateOfBirth">
                                                <div data-date-selector name="dateOfBirth"
                                                     data-ng-model="detail.dateOfBirth"
                                                     data-min-year="getMinYearForInfants()"
                                                     data-max-year="getMaxYearForInfants()"
                                                     data-minimum-date="{{getMinDateForInfants()}}"
                                                     data-maximum-date="{{getMaxDateForInfants()}}"
                                                     required></div>
                                            </div>
                                            <div class="validate-positioner" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$error && (passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$error.required || passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$error.date || passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$error.maximumDate) ">
                                                <div class="input-message-validate pos-bottom invalid tip-center">
                                                    <span data-ng-messages="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$error" data-ng-show="!passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$valid">
                                                        <span data-ng-message="required" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$error.required" class="required">Required</span>
                                                        <span data-ng-message="date" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$error.date" class="required">Invalid Date</span>
                                                        <span data-ng-message="maximumDate" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$error.maximumDate" class="required">Date of birth is in the future.</span>
                                                    </span>
                                                    <span data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$valid" class="input-message-validate pos-bottom">
                                                        <i class="ibp-icon-tick"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="red clearfix infant-error-message" data-ng-show="passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$touched && passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$invalid && passengerDetailsForm[&#39;infantDetailsForm&#39; + $index].dateOfBirth.$error.minimumDate">
                                        <span>{{IbpCms.validationInfantAge}} <a data-ng-click="changePassengerToChild(detail)">change to child fare</a></span>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr class="remove-passenger" data-ng-class="{'last': $last}">
                            <td colspan="6">
                                <div class="delete-passenger-button button" data-ng-click="removePassenger(detail)" data-ng-show="canRemovePassenger(detail)">Remove {{detail.firstName}} {{detail.lastName}}</div>
                            </td>
                        </tr>
                        <tr class="separator-line" data-ng-if="!$last">
                            <td colspan="6">
                                <hr />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div data-ng-if="shouldShowOutboundVehicleRego()" class="vehicle-regos-group">
                    <div class="group-title">
        Vehicle Registrations{{getSailingDisplay(LegOfJourney.Outbound)}}
    </div>
    <table class="vehicle-regos-container">
        <tbody data-ng-repeat="vehicle in getVehicles(LegOfJourney.Outbound)" data-ng-form name="outboundVehicleRegosForm{{$index}}">
            <tr>
                <td colspan="2" class="vehicle-display-row">
                    <div class="vehicle-display">{{vehicle.getDisplay()}} <span data-ng-if="vehicle.getExtrasDisplay()">With Extras: {{vehicle.getExtrasDisplay()}}</span></div>
                </td>
            </tr>
            <tr data-ng-class="{'last': $last}">
                <td class="registration">
                    <label>
                        Registration Number
                        <div class="input-wrap input-border" data-validation-state data-ng-class="{'is-empty': vehicle.skipRego}">
                            <input type="text" name="registration" class="input-text" data-ng-model="vehicle.getDetails().rego" data-ng-required="!vehicle.skipRego" data-ng-disabled="vehicle.skipRego">
                            <span class="input-message-validate" data-ng-if="!vehicle.skipRego">
                                <span data-ng-messages="passengerDetailsForm[&#39;outboundVehicleRegosForm&#39; + $index].registration.$error" data-ng-show="!passengerDetailsForm[&#39;outboundVehicleRegosForm&#39; + $index].registration.$valid">
                                    <span class="required">Required</span>
                                </span>
                                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;outboundVehicleRegosForm&#39; + $index].registration.$valid"></i>
                            </span>
                        </div>
                    </label>
                </td>
                <td class="registration">
                    <label data-ng-if="vehicle.hasTowedVehicle()">
                        {{vehicle.getDetails().towedVehicle.type}} Registration Number
                        <div class="input-wrap input-border" data-validation-state>
                            <input type="text" name="extrasRegistration" class="input-text" data-ng-model="vehicle.getTowedVehicle().rego" data-ng-required="!vehicle.skipRego" data-ng-disabled="vehicle.skipRego">
                            <span class="input-message-validate" data-ng-if="!vehicle.skipRego">
                                <span data-ng-messages="passengerDetailsForm[&#39;outboundVehicleRegosForm&#39; + $index].extrasRegistration.$error" data-ng-show="!passengerDetailsForm[&#39;outboundVehicleRegosForm&#39; + $index].extrasRegistration.$valid">
                                    <span class="required">Required</span>
                                </span>
                                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;outboundVehicleRegosForm&#39; + $index].extrasRegistration.$valid"></i>
                            </span>
                        </div>
                    </label>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <label data-ng-class="{'active': vehicle.skipRego}">
                        <input type="checkbox" data-ng-model="vehicle.skipRego" data-ng-checked="vehicle.skipRego" />
                        <span class="checkbox"></span>
                        {{IbpCms.vehicleRegoProvideLaterCheckboxText}}
                    </label>
                    <label class="skip-registration-warning" data-ng-show="vehicle.skipRego">
                        {{IbpCms.vehicleRegoProvideLaterWarningText}}
                    </label>
                </td>
            </tr>
            <tr class="separator-line" data-ng-if="!$last">
                <td colspan="2">
                    <hr />
                </td>
            </tr>
        </tbody>
    </table>

            </div>
            <div data-ng-if="shouldShowReturnVehicleRego()" class="vehicle-regos-group">
                    <div class="group-title">
        Vehicle Registrations{{getSailingDisplay(LegOfJourney.Return)}}
    </div>
    <table class="vehicle-regos-container">
        <tbody data-ng-repeat="vehicle in getVehicles(LegOfJourney.Return)" data-ng-form name="returnVehicleRegosForm{{$index}}">
            <tr>
                <td colspan="2" class="vehicle-display-row">
                    <div class="vehicle-display">{{vehicle.getDisplay()}} <span data-ng-if="vehicle.getExtrasDisplay()">With Extras: {{vehicle.getExtrasDisplay()}}</span></div>
                </td>
            </tr>
            <tr data-ng-class="{'last': $last}">
                <td class="registration">
                    <label>
                        Registration Number
                        <div class="input-wrap input-border" data-validation-state data-ng-class="{'is-empty': vehicle.skipRego}">
                            <input type="text" name="registration" class="input-text" data-ng-model="vehicle.getDetails().rego" data-ng-required="!vehicle.skipRego" data-ng-disabled="vehicle.skipRego">
                            <span class="input-message-validate" data-ng-if="!vehicle.skipRego">
                                <span data-ng-messages="passengerDetailsForm[&#39;returnVehicleRegosForm&#39; + $index].registration.$error" data-ng-show="!passengerDetailsForm[&#39;returnVehicleRegosForm&#39; + $index].registration.$valid">
                                    <span class="required">Required</span>
                                </span>
                                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;returnVehicleRegosForm&#39; + $index].registration.$valid"></i>
                            </span>
                        </div>
                    </label>
                </td>
                <td class="registration">
                    <label data-ng-if="vehicle.hasTowedVehicle()">
                        {{vehicle.getDetails().towedVehicle.type}} Registration Number
                        <div class="input-wrap input-border" data-validation-state>
                            <input type="text" name="extrasRegistration" class="input-text" data-ng-model="vehicle.getTowedVehicle().rego" data-ng-required="!vehicle.skipRego" data-ng-disabled="vehicle.skipRego">
                            <span class="input-message-validate" data-ng-if="!vehicle.skipRego">
                                <span data-ng-messages="passengerDetailsForm[&#39;returnVehicleRegosForm&#39; + $index].extrasRegistration.$error" data-ng-show="!passengerDetailsForm[&#39;returnVehicleRegosForm&#39; + $index].extrasRegistration.$valid">
                                    <span class="required">Required</span>
                                </span>
                                <i class="ibp-icon-tick" data-ng-show="passengerDetailsForm[&#39;returnVehicleRegosForm&#39; + $index].extrasRegistration.$valid"></i>
                            </span>
                        </div>
                    </label>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <label data-ng-class="{'active': vehicle.skipRego}">
                        <input type="checkbox" data-ng-model="vehicle.skipRego" data-ng-checked="vehicle.skipRego" />
                        <span class="checkbox"></span>
                        {{IbpCms.vehicleRegoProvideLaterCheckboxText}}
                    </label>
                    <label class="skip-registration-warning" data-ng-show="vehicle.skipRego">
                        {{IbpCms.vehicleRegoProvideLaterWarningText}}
                    </label>
                </td>
            </tr>
            <tr class="separator-line" data-ng-if="!$last">
                <td colspan="2">
                    <hr />
                </td>
            </tr>
        </tbody>
    </table>

            </div>
        </div>
        <div class="next-step sticky-step stuck">
            <button class="ng-animate-disabled button primary" data-ng-show="!(isAutoAllocating() || isValidatingCustomers()) && pricesHaveLoaded()" type="submit" data-ng-disabled="!canContinue()">
                Continue
            </button>
            <div class="results-loading" data-ng-show="isAutoAllocating() || isValidatingCustomers()">
                <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
            </div>
        </div>
    </form>
</div>


                    </div>

                    <div id="cabin-allocation-app" class="ibp-app-component" data-ng-if="workflowState.isOnCabinAllocationStep()" data-ng-cloak>
                        <div class="ibp-section">
                            <div class="section-heading">Review where everyone's staying</div>
                            <div data-ng-if="workflowState.isOnOutboundCabinAllocationStep()"
                                 data-ng-init="legOfJourney = LegOfJourney.Outbound"
                                 data-ng-controller="cabinAllocationSailingController" data-ng-cloak>
                                <h3>
    We've assigned accommodation automatically<span data-ng-if="getAccommodationAllocation().length > 1"> &ndash; feel free to re-arrange</span>
</h3>
<div class="cabin-allocation-section">
    <div class="passenger-group ng-scope">
        <div class="group-title">
            <h2>
                <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Outbound" data-ng-bind-html="Resources.iconOutbound | asRawHtml"></div>
                <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Return" data-ng-bind-html="Resources.iconReturn | asRawHtml"></div>
                <span class="full-title">
                    Your {{legOfJourney.toLowerCase()}} accommodation
                </span>
            </h2>
        </div>
        <div class="rooms">
            <div class="room" data-ng-repeat="room in getAccommodationAllocation()"
                 data-ng-class="{'error-on': room.errorOn}">
                <div class="room-description">
                    <h3>
                        <div class="icon" data-ng-if="room.categoryCode === AccommodationCode.Deluxe" data-ng-bind-html="Resources.iconQueenBed | asRawHtml"></div>
                        <div class="icon" data-ng-if="room.categoryCode === AccommodationCode.Porthole2" data-ng-bind-html="Resources.iconTwoSingleBeds | asRawHtml"></div>
                        <div class="icon" data-ng-if="room.categoryCode === AccommodationCode.Porthole4 || room.categoryCode === AccommodationCode.Inside || room.categoryCode === AccommodationCode.PortholeLimited4" data-ng-bind-html="Resources.iconTwoBunkBeds | asRawHtml"></div>
                        <div class="icon" data-ng-if="room.categoryCode === AccommodationCode.Recliner" data-ng-bind-html="Resources.iconRecliner | asRawHtml"></div>
                        <div class="icon day" data-ng-if="room.categoryCode === AccommodationCode.Day" data-ng-bind-html="Resources.iconDayTicket | asRawHtml"></div>
                        {{room.sectionName}}
                    </h3>
                </div>
                <ul>
                    <li class="details" data-ng-repeat="passenger in room.passengers">
                        <div class="icon male-icon" data-ng-if="passenger.passengerDetails.gender === Sex.Male && (passenger.passengerDetails.passengerType.code === PassengerCode.Adult || passenger.passengerDetails.passengerType.code === PassengerCode.Pensioner)" data-ng-bind-html="Resources.iconMale | asRawHtml"></div>
                        <div class="icon female-icon" data-ng-if="passenger.passengerDetails.gender === Sex.Female && (passenger.passengerDetails.passengerType.code === PassengerCode.Adult || passenger.passengerDetails.passengerType.code === PassengerCode.Pensioner)" data-ng-bind-html="Resources.iconFemale | asRawHtml"></div>
                        <div class="icon boy-icon" data-ng-if="passenger.passengerDetails.gender === Sex.Male && passenger.passengerDetails.passengerType.code === PassengerCode.Child" data-ng-bind-html="Resources.iconChildBoy | asRawHtml"></div>
                        <div class="icon girl-icon" data-ng-if="passenger.passengerDetails.gender === Sex.Female && passenger.passengerDetails.passengerType.code === PassengerCode.Child" data-ng-bind-html="Resources.iconChildGirl | asRawHtml"></div>
                        <div class="placement-label" data-ng-if="!isEmptyPlace(passenger)">
                            {{Utils.convertNameCase(passenger.passengerDetails.title)}} {{Utils.convertNameCase(passenger.passengerDetails.firstName)}} {{Utils.convertNameCase(passenger.passengerDetails.lastName)}}
                        </div>
                        <div class="icon add-icon faded" data-ng-if="isEmptyPlace(passenger)" data-ng-bind-html="Resources.iconPlus | asRawHtml"></div>
                        <div class="placement-label faded" data-ng-if="isEmptyPlace(passenger) && room.categoryCode !== AccommodationCode.Day">
                            Bed available
                        </div>
                        <div class="placement-label faded" data-ng-if="isEmptyPlace(passenger) && room.categoryCode === AccommodationCode.Day">
                            Ticket available
                        </div>
                        <div class="swap-action" data-ng-class="{'start-swap': !isSwapUnderWay(), 'cancel-swap': isSwapInitiator(passenger), 'finish-swap': isValidSwapTarget(passenger), 'disabled': !isValidSwapTarget(passenger) && !isSwapInitiator(passenger)}">
                            <span class="swap-start ng-animate-disabled"
                                  data-ng-if="!isEmptyPlace(passenger) && getAccommodationAllocation().length > 1">
                                <a data-ng-click="swapStartWith(passenger)">
                                    Move {{Utils.convertNameCase(passenger.passengerDetails.firstName)}}
                                </a>
                            </span>
                            <span class="swap-cancel button danger ng-animate-disabled"
                                  data-ng-click="swapCancel()"
                                  data-ng-if="!isEmptyPlace(passenger)">
                                Leave {{Utils.convertNameCase(passenger.passengerDetails.firstName)}} here
                            </span>
                            <span class="swap-finish button primary ng-animate-disabled"
                                  data-ng-click="swapFinishWith(passenger)"
                                  data-ng-if="!isEmptyPlace(passenger)">
                                Swap with {{Utils.convertNameCase(passenger.passengerDetails.firstName)}}
                            </span>
                            <span class="swap-finish button secondary ng-animate-disabled"
                                  data-ng-click="swapFinishWith(passenger)"
                                  data-ng-if="isEmptyPlace(passenger)">
                                Move {{Utils.convertNameCase(getActiveSwapPassenger().passengerDetails.firstName)}} here
                            </span>
                            <span class="swap-disabled faded ng-animate-disabled"
                                  data-ng-if="isSwapUnderWay()">
                                {{passenger.message}}
                            </span>
                        </div>
                    </li>
                </ul>
                <ul data-ng-if="isBookingWithInfants()">
                    <li class="details" data-ng-repeat="passenger in room.infants track by $index"
                        data-ng-if="showInfantPlacement(passenger, room, $index)">
                        <div class="icon infant-icon" data-ng-bind-html="Resources.iconInfant | asRawHtml" data-ng-hide="isEmptyPlace(passenger)"></div>
                        <div class="placement-label" data-ng-if="!isEmptyPlace(passenger)">
                            {{Utils.convertNameCase(passenger.passengerDetails.title)}} {{Utils.convertNameCase(passenger.passengerDetails.firstName)}} {{Utils.convertNameCase(passenger.passengerDetails.lastName)}}
                        </div>
                        <div class="icon add-icon faded" data-ng-if="isEmptyPlace(passenger)" data-ng-bind-html="Resources.iconPlus | asRawHtml"></div>
                        <div class="placement-label faded" data-ng-if="isEmptyPlace(passenger)">
                            <span data-ng-if="room.hasCotSpace()">Cot space available</span>
                            <span data-ng-if="!room.hasCotSpace() && !room.hasInfantTicket">No cot space available</span>
                            <span data-ng-if="!room.hasCotSpace() && room.hasInfantTicket">Infant ticket available</span>
                        </div>
                        <div class="swap-action" data-ng-class="{'start-swap': !isSwapUnderWay(), 'cancel-swap': isSwapInitiator(passenger), 'finish-swap': isValidSwapTarget(passenger), 'disabled': !isValidSwapTarget(passenger) && !isSwapInitiator(passenger)}">
                            <span class="swap-start ng-animate-disabled"
                                  data-ng-if="!isEmptyPlace(passenger) && !isSwapUnderWay() && getAccommodationAllocation().length > 1">
                                <a data-ng-click="swapStartWith(passenger)">
                                    Move {{Utils.convertNameCase(passenger.passengerDetails.firstName)}}
                                </a>
                            </span>
                            <span class="swap-cancel button danger ng-animate-disabled"
                                  data-ng-click="swapCancel()"
                                  data-ng-if="!isEmptyPlace(passenger)">
                                Leave {{Utils.convertNameCase(passenger.passengerDetails.firstName)}} here
                            </span>
                            <span class="swap-finish button primary ng-animate-disabled"
                                  data-ng-click="swapFinishWith(passenger)"
                                  data-ng-if="!isEmptyPlace(passenger)">
                                Swap with {{Utils.convertNameCase(passenger.passengerDetails.firstName)}}
                            </span>
                            <span class="swap-finish button secondary ng-animate-disabled"
                                  data-ng-click="swapFinishWith(passenger)"
                                  data-ng-if="isEmptyPlace(passenger)">
                                Move {{Utils.convertNameCase(getActiveSwapPassenger().passengerDetails.firstName)}} here
                            </span>
                            <span class="swap-disabled faded ng-animate-disabled"
                                  data-ng-if="isSwapUnderWay()">
                                {{passenger.message}}
                            </span>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="next-step sticky-step stuck"
     data-ng-if="canContinueToPayment()">
    <button class="pay-now button primary ng-animate-disabled" data-ng-click="continueToPayment()" data-delay-enable="800">
        Continue to payment
    </button>
</div>

<div class="next-step sticky-step stuck"
     data-ng-if="legOfJourney === LegOfJourney.Outbound && !booking.isOneWay()"
     data-ng-show="workflowState.isOnOutboundCabinAllocationStep()">
    <!-- Two way Outbound -->
    <div>
        <button class="continue ng-animate-disabled button primary"
                data-ng-hide="canCopyToReturnAllocation() || showOutboundToReturnAllocationDelay"
                data-ng-click="continueFromOutboundAllocation()">
            <span>Continue</span>
        </button>
        <span class="results-loading" data-ng-show="showOutboundToReturnAllocationDelay">
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
        </span>
        <div data-ng-if="canCopyToReturnAllocation() && !showOutboundToReturnAllocationDelay"
             data-ng-show="workflowState.isOnOutboundCabinAllocationStep()"
             class="copy-to-return-accommodation ng-animate-disabled">
            <div class="important">
                {{IbpCms.cabinAllocationBookSameForReturn}}
            </div>
            <button class="continue button primary ng-animate-disabled" data-ng-click="continueFromOutboundAllocation()">
                No
            </button>
            <button class="continue button primary ng-animate-disabled"
                    data-ng-click="copyToReturnAllocationAndContinue()">
                Yes
            </button>
        </div>
    </div>
</div>
                            </div>
                            <div data-ng-if="workflowState.isOnReturnCabinAllocationStep()"
                                 data-ng-init="legOfJourney = LegOfJourney.Return"
                                 data-ng-controller="cabinAllocationSailingController" data-ng-cloak>
                                <h3>
    We've assigned accommodation automatically<span data-ng-if="getAccommodationAllocation().length > 1"> &ndash; feel free to re-arrange</span>
</h3>
<div class="cabin-allocation-section">
    <div class="passenger-group ng-scope">
        <div class="group-title">
            <h2>
                <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Outbound" data-ng-bind-html="Resources.iconOutbound | asRawHtml"></div>
                <div class="direction-arrow" data-ng-if="legOfJourney === LegOfJourney.Return" data-ng-bind-html="Resources.iconReturn | asRawHtml"></div>
                <span class="full-title">
                    Your {{legOfJourney.toLowerCase()}} accommodation
                </span>
            </h2>
        </div>
        <div class="rooms">
            <div class="room" data-ng-repeat="room in getAccommodationAllocation()"
                 data-ng-class="{'error-on': room.errorOn}">
                <div class="room-description">
                    <h3>
                        <div class="icon" data-ng-if="room.categoryCode === AccommodationCode.Deluxe" data-ng-bind-html="Resources.iconQueenBed | asRawHtml"></div>
                        <div class="icon" data-ng-if="room.categoryCode === AccommodationCode.Porthole2" data-ng-bind-html="Resources.iconTwoSingleBeds | asRawHtml"></div>
                        <div class="icon" data-ng-if="room.categoryCode === AccommodationCode.Porthole4 || room.categoryCode === AccommodationCode.Inside || room.categoryCode === AccommodationCode.PortholeLimited4" data-ng-bind-html="Resources.iconTwoBunkBeds | asRawHtml"></div>
                        <div class="icon" data-ng-if="room.categoryCode === AccommodationCode.Recliner" data-ng-bind-html="Resources.iconRecliner | asRawHtml"></div>
                        <div class="icon day" data-ng-if="room.categoryCode === AccommodationCode.Day" data-ng-bind-html="Resources.iconDayTicket | asRawHtml"></div>
                        {{room.sectionName}}
                    </h3>
                </div>
                <ul>
                    <li class="details" data-ng-repeat="passenger in room.passengers">
                        <div class="icon male-icon" data-ng-if="passenger.passengerDetails.gender === Sex.Male && (passenger.passengerDetails.passengerType.code === PassengerCode.Adult || passenger.passengerDetails.passengerType.code === PassengerCode.Pensioner)" data-ng-bind-html="Resources.iconMale | asRawHtml"></div>
                        <div class="icon female-icon" data-ng-if="passenger.passengerDetails.gender === Sex.Female && (passenger.passengerDetails.passengerType.code === PassengerCode.Adult || passenger.passengerDetails.passengerType.code === PassengerCode.Pensioner)" data-ng-bind-html="Resources.iconFemale | asRawHtml"></div>
                        <div class="icon boy-icon" data-ng-if="passenger.passengerDetails.gender === Sex.Male && passenger.passengerDetails.passengerType.code === PassengerCode.Child" data-ng-bind-html="Resources.iconChildBoy | asRawHtml"></div>
                        <div class="icon girl-icon" data-ng-if="passenger.passengerDetails.gender === Sex.Female && passenger.passengerDetails.passengerType.code === PassengerCode.Child" data-ng-bind-html="Resources.iconChildGirl | asRawHtml"></div>
                        <div class="placement-label" data-ng-if="!isEmptyPlace(passenger)">
                            {{Utils.convertNameCase(passenger.passengerDetails.title)}} {{Utils.convertNameCase(passenger.passengerDetails.firstName)}} {{Utils.convertNameCase(passenger.passengerDetails.lastName)}}
                        </div>
                        <div class="icon add-icon faded" data-ng-if="isEmptyPlace(passenger)" data-ng-bind-html="Resources.iconPlus | asRawHtml"></div>
                        <div class="placement-label faded" data-ng-if="isEmptyPlace(passenger) && room.categoryCode !== AccommodationCode.Day">
                            Bed available
                        </div>
                        <div class="placement-label faded" data-ng-if="isEmptyPlace(passenger) && room.categoryCode === AccommodationCode.Day">
                            Ticket available
                        </div>
                        <div class="swap-action" data-ng-class="{'start-swap': !isSwapUnderWay(), 'cancel-swap': isSwapInitiator(passenger), 'finish-swap': isValidSwapTarget(passenger), 'disabled': !isValidSwapTarget(passenger) && !isSwapInitiator(passenger)}">
                            <span class="swap-start ng-animate-disabled"
                                  data-ng-if="!isEmptyPlace(passenger) && getAccommodationAllocation().length > 1">
                                <a data-ng-click="swapStartWith(passenger)">
                                    Move {{Utils.convertNameCase(passenger.passengerDetails.firstName)}}
                                </a>
                            </span>
                            <span class="swap-cancel button danger ng-animate-disabled"
                                  data-ng-click="swapCancel()"
                                  data-ng-if="!isEmptyPlace(passenger)">
                                Leave {{Utils.convertNameCase(passenger.passengerDetails.firstName)}} here
                            </span>
                            <span class="swap-finish button primary ng-animate-disabled"
                                  data-ng-click="swapFinishWith(passenger)"
                                  data-ng-if="!isEmptyPlace(passenger)">
                                Swap with {{Utils.convertNameCase(passenger.passengerDetails.firstName)}}
                            </span>
                            <span class="swap-finish button secondary ng-animate-disabled"
                                  data-ng-click="swapFinishWith(passenger)"
                                  data-ng-if="isEmptyPlace(passenger)">
                                Move {{Utils.convertNameCase(getActiveSwapPassenger().passengerDetails.firstName)}} here
                            </span>
                            <span class="swap-disabled faded ng-animate-disabled"
                                  data-ng-if="isSwapUnderWay()">
                                {{passenger.message}}
                            </span>
                        </div>
                    </li>
                </ul>
                <ul data-ng-if="isBookingWithInfants()">
                    <li class="details" data-ng-repeat="passenger in room.infants track by $index"
                        data-ng-if="showInfantPlacement(passenger, room, $index)">
                        <div class="icon infant-icon" data-ng-bind-html="Resources.iconInfant | asRawHtml" data-ng-hide="isEmptyPlace(passenger)"></div>
                        <div class="placement-label" data-ng-if="!isEmptyPlace(passenger)">
                            {{Utils.convertNameCase(passenger.passengerDetails.title)}} {{Utils.convertNameCase(passenger.passengerDetails.firstName)}} {{Utils.convertNameCase(passenger.passengerDetails.lastName)}}
                        </div>
                        <div class="icon add-icon faded" data-ng-if="isEmptyPlace(passenger)" data-ng-bind-html="Resources.iconPlus | asRawHtml"></div>
                        <div class="placement-label faded" data-ng-if="isEmptyPlace(passenger)">
                            <span data-ng-if="room.hasCotSpace()">Cot space available</span>
                            <span data-ng-if="!room.hasCotSpace() && !room.hasInfantTicket">No cot space available</span>
                            <span data-ng-if="!room.hasCotSpace() && room.hasInfantTicket">Infant ticket available</span>
                        </div>
                        <div class="swap-action" data-ng-class="{'start-swap': !isSwapUnderWay(), 'cancel-swap': isSwapInitiator(passenger), 'finish-swap': isValidSwapTarget(passenger), 'disabled': !isValidSwapTarget(passenger) && !isSwapInitiator(passenger)}">
                            <span class="swap-start ng-animate-disabled"
                                  data-ng-if="!isEmptyPlace(passenger) && !isSwapUnderWay() && getAccommodationAllocation().length > 1">
                                <a data-ng-click="swapStartWith(passenger)">
                                    Move {{Utils.convertNameCase(passenger.passengerDetails.firstName)}}
                                </a>
                            </span>
                            <span class="swap-cancel button danger ng-animate-disabled"
                                  data-ng-click="swapCancel()"
                                  data-ng-if="!isEmptyPlace(passenger)">
                                Leave {{Utils.convertNameCase(passenger.passengerDetails.firstName)}} here
                            </span>
                            <span class="swap-finish button primary ng-animate-disabled"
                                  data-ng-click="swapFinishWith(passenger)"
                                  data-ng-if="!isEmptyPlace(passenger)">
                                Swap with {{Utils.convertNameCase(passenger.passengerDetails.firstName)}}
                            </span>
                            <span class="swap-finish button secondary ng-animate-disabled"
                                  data-ng-click="swapFinishWith(passenger)"
                                  data-ng-if="isEmptyPlace(passenger)">
                                Move {{Utils.convertNameCase(getActiveSwapPassenger().passengerDetails.firstName)}} here
                            </span>
                            <span class="swap-disabled faded ng-animate-disabled"
                                  data-ng-if="isSwapUnderWay()">
                                {{passenger.message}}
                            </span>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="next-step sticky-step stuck"
     data-ng-if="canContinueToPayment()">
    <button class="pay-now button primary ng-animate-disabled" data-ng-click="continueToPayment()" data-delay-enable="800">
        Continue to payment
    </button>
</div>

<div class="next-step sticky-step stuck"
     data-ng-if="legOfJourney === LegOfJourney.Outbound && !booking.isOneWay()"
     data-ng-show="workflowState.isOnOutboundCabinAllocationStep()">
    <!-- Two way Outbound -->
    <div>
        <button class="continue ng-animate-disabled button primary"
                data-ng-hide="canCopyToReturnAllocation() || showOutboundToReturnAllocationDelay"
                data-ng-click="continueFromOutboundAllocation()">
            <span>Continue</span>
        </button>
        <span class="results-loading" data-ng-show="showOutboundToReturnAllocationDelay">
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
        </span>
        <div data-ng-if="canCopyToReturnAllocation() && !showOutboundToReturnAllocationDelay"
             data-ng-show="workflowState.isOnOutboundCabinAllocationStep()"
             class="copy-to-return-accommodation ng-animate-disabled">
            <div class="important">
                {{IbpCms.cabinAllocationBookSameForReturn}}
            </div>
            <button class="continue button primary ng-animate-disabled" data-ng-click="continueFromOutboundAllocation()">
                No
            </button>
            <button class="continue button primary ng-animate-disabled"
                    data-ng-click="copyToReturnAllocationAndContinue()">
                Yes
            </button>
        </div>
    </div>
</div>
                            </div>
                        </div>
                    </div>

                    <div id="payment-app" class="ibp-app-component" data-ng-if="workflowState.isOnGettingPaymentStep()" data-ng-controller="paymentController" data-ng-cloak>
                        

<div class="ibp-section payment-section">
    <div class="section-heading">{{getPaymentHeading()}}</div>
    <h3>{{IbpCms.paymentIntro}}</h3>
    <h4 data-ng-if="getRefundIntroTextIfRefunding()" data-ng-bind="getRefundIntroTextIfRefunding()"></h4>

    <div class="total-due" data-ng-if="totalDueVisible">
        <strong>Total due: <span class="value">{{getBookingTotalPriceBeforeVouchers()}}</span></strong>
        <div class="see-breakdown"><a data-ng-click="showBreakdown()">See breakdown</a></div>
    </div>
</div>
<div class="limit-width vouchers-applied__container" data-ng-if="payment.giftVouchers.length > 0">
    <p class="mt-0">Applied vouchers</p>
    <ul class="standard-form">
        <li data-ng-repeat="voucher in payment.giftVouchers" class="vouchers-applied">
            <button class="btn-link vouchers-applied__action" data-ng-click="removeGiftVoucher(voucher)">Remove</button>
            <span class="voucher-number voucher-detail">#{{voucher.voucherNumber}}:&ensp;</span>
            <span class="vouchers-applied__value voucher-detail">${{voucher.value}}</span>
        </li>
    </ul>
    <div class="text-center">
        <div class="total-due mt-1">
            <strong>Total now due: <span class="value ng-binding">{{getBookingTotalPriceAfterVouchers()}}</span></strong>
        </div>
        <span data-ng-if="shouldShowVouchersNote()">
            Your voucher(s) will cover the cost of your booking. Please fill in the remaining details below.
        </span>
        <span data-ng-if="!shouldShowVouchersNote()">
            <a data-ng-click="setGiftVoucherFieldsVisible(true)"
               role="button">
                Add another voucher</a>
            or use another payment method.
        </span>
    </div>
</div>
<form data-form-submit="submitPayment()" novalidate name="paymentForm" role="form">
<div class="voucher-top">
    <div data-ng-show="!giftVoucherInputFieldsAreVisible && payment.giftVouchers.length == 0 && canPayBy(PaymentType.GiftVoucher)">
        <button type="button" class="button secondary" data-ng-click="setGiftVoucherFieldsVisible(true)">
            I want to use a voucher
        </button>
    </div>
    
    <div class="gift-voucher limit-width" data-ng-show="giftVoucherInputFieldsAreVisible">
        <ng-form name="giftVoucherForm" novalidate="" role="form" class="standard-form" data-view-on-focus>
            <div class="container-fluid" data-ng-if="giftVoucherInputFieldsAreVisible">
                <div class="field-wrap" data-ng-if="canShowGiftVoucher()">
                    <label for="giftVoucher">
                        <span class="label">
                            Voucher number
                        </span>
                        <div class="error-pad">
                            <div class="input-wrap input-border" data-validation-state>
                                <input type="text" class="input-text" id="giftVoucher" name="giftVoucher" data-ng-model="giftVoucher.voucherNumber" data-no-match-in-collection="getAppliedGiftVoucherNumbers()">
                                <span class="input-message-validate" data-validate-on-bottom-at-break="420" data-ng-show="giftVoucher.voucherNumber">
                                    <span data-ng-messages="giftVoucherForm.giftVoucher.$error" data-ng-show="giftVoucherForm.giftVoucher.$error">
                                        <span class="required" data-ng-if="giftVoucherForm.giftVoucher.$error.required">Required</span>
                                        <span class="no-match-in-collection" data-ng-if="giftVoucherForm.giftVoucher.$error.noMatchInCollection">Voucher already applied</span>
                                    </span>
                                    <i class="ibp-icon-tick" data-ng-show="giftVoucherForm.giftVoucher.$valid === true"></i>
                                </span>
                            </div>
                        </div>
                    </label>
                </div>
                <div class="field-wrap" data-ng-if="canShowGiftVoucher()">
                    <label for="giftVoucherSurname">
                        <span class="label">
                            Recipient surname
                        </span>
                        <div class="error-pad">
                            <div class="input-wrap input-border" data-validation-state>
                                <input type="text" class="input-text" id="giftVoucherSurname" name="giftVoucherSurname" data-ng-model="giftVoucher.voucherSurname">
                                <span class="input-message-validate" data-validate-on-bottom-at-break="420" data-ng-show="giftVoucher.voucherSurname">
                                    <span data-ng-messages="giftVoucherForm.giftVoucherSurname.$error" data-ng-show="giftVoucherForm.giftVoucherSurname.$valid === false">
                                        <span class="required">Required</span>
                                    </span>
                                    <i class="ibp-icon-tick" data-ng-show="giftVoucherForm.giftVoucherSurname.$valid === true"></i>
                                </span>
                            </div>
                        </div>
                    </label>
                </div>
                <div class="voucher-add-and-validate">
                    <div class="voucher-error" data-ng-show="!!giftVoucherResult && !giftVoucherResult.isValid && giftVoucherResult.voucherNumber === giftVoucher.voucherNumber">
                        {{giftVoucherResult.message}}
                    </div>
                    <button class="button secondary ng-animate-disabled"
                            type="button"
                            data-ng-show="canShowGiftVoucher()"
                            data-ng-disabled="!canAddGiftVoucher()"
                            data-ng-click="addGiftVoucher()">
                        {{getGiftVoucherSubmitText()}}
                    </button>
                    <br/>
                    <button type="button"
                            class="btn-link text-small"
                            style="margin-top: 0.2em; font-size: 0.8em;"
                            data-ng-click="setGiftVoucherFieldsVisible(false)"
                            data-ng-bind="IbpCms.voucherFieldsHideButtonText"
                            data-ng-show="canShowGiftVoucher()">
                    </button>
                </div>
            </div>
        </ng-form>
    </div>
</div>

    <div class="payment-section" data-ng-show="canUsePaymentOption(PaymentOption.PayNow) && canUsePaymentOption(PaymentOption.PayLater)">
        <div class="payment-wrap">
            <ng-form name="paymentOptionsForm" class="standard-form">
                <!-- payment option -->
                <div>
                    <div class="radio-group radio-vertical">
                        <label data-ng-class="{ 'active': payment.paymentOption === PaymentOption.PayNow }">
                            <input type="radio" data-ng-model="payment.paymentOption" data-ng-value="PaymentOption.PayNow" />
                            <span class="radiobtn"></span>Pay now (with agency credit card)
                        </label>
                        <label data-ng-class="{ 'active': payment.paymentOption === PaymentOption.PayLater }">
                            <input type="radio" data-ng-model="payment.paymentOption" data-ng-value="PaymentOption.PayLater" />
                            <span class="radiobtn"></span>Pay later today (with Enett or direct deposit)
                        </label>
                    </div>
                </div>
            </ng-form>
        </div>
    </div>

    <div class="payment-section cancellation" data-ng-show="isCancellation()">
        You are cancelling the following sailing(s):
        <div data-ng-repeat="sailing in getCancellingSailings()" class="sailing">
            {{ sailing.getOriginName() }} to {{ LocationCode.getLocationName(Utils.reverseLocationCode(sailing.origin)) }} departing {{ Utils.dateFormat(sailing.getDate(), 'dddd D MMMM, YYYY') }}
        </div>
    </div>
    <nav id="payment-selection" data-ng-show="showPaymentChoice()">
        <div class="limit-width container-fluid">
            <ul class="payment-option-tab__container">
                <li class="ng-animate-disabled" data-ng-class="{'active': payment.paymentType === PaymentType.CreditCard}" data-ng-click="setPaymentType(PaymentType.CreditCard)" data-ng-show="canPayBy(PaymentType.CreditCard)">
                    <span class="payment-type">
                        <span class="ibp-icon-credit-card"></span><br/>Credit card
                    </span>
                </li>
                <li class="ng-animate-disabled" data-ng-class="{'active': payment.paymentType === PaymentType.InternetBanking}" data-ng-click="setPaymentType(PaymentType.InternetBanking)" data-ng-show="canPayBy(PaymentType.InternetBanking)">
                    <span class="payment-type">
                        <span class="ibp-icon-laptop"></span><br/>Internet banking
                    </span>
                </li>
            </ul>
        </div>
    </nav>
    <div class="payment-section">
        <div class="payment-wrap">
            <div class="credit-card" data-ng-show="showPaymentType(PaymentType.CreditCard)">
                <ng-form name="creditCardForm" novalidate="" role="form" class="standard-form" data-view-on-focus>
                    <div class="container-fluid" data-ng-if="showPaymentType(PaymentType.CreditCard)">
                        
                        <div class="field-wrap" data-ng-if="!!creditCardTypesWithFees() && creditCardTypesWithFees().length > 0">
                            <div class="card-type">
                                <label for="card-type">Card type</label>

                                <div class="error-pad" data-validation-state data-input-name="creditCardType">
                                    <select name="creditCardType" data-ng-model="selectedCardType" data-ng-options="option.cardTypeFeeDescription for option in creditCardTypesWithFees() track by option.cardType" data-ng-change="setCardType(selectedCardType)" data-card-type-matches-fee-card-type="cardTypeMatchesFeeType" data-ng-required="true"></select>
                                </div>

                                <div class="validate-positioner">
                                    <span class="input-message-validate pos-bottom tip-center" data-ng-class="{'invalid': !creditCardForm.creditCardType.$valid, 'valid': creditCardForm.creditCardType.$valid}">
                                        <span data-ng-if="creditCardForm.cardNumber.$error.cardTypeMatchesFeeCardType">Card # must match type</span>
                                        <span data-ng-if="!creditCardForm.cardNumber.$error.cardTypeMatchesFeeCardType">Required</span>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="field-wrap cc-number">
                            <label for="card-number">
                                <span class="label">Card number</span>
                                <span class="cc-icon {{ creditCardForm.cardNumber | creditCardIconFromType }}"></span>
                                <div class="error-pad">

                                    <div class="input-wrap input-border cc-number-auto-tab " data-field-auto-tab=".group4" data-validation-state data-input-name="cardNumber">
                                            <div class="cell">
                                                <input type="tel" pattern="[0-9]*" size="4" maxlength="4" class="group4" id="cardNumber1" name="cardNumber1" data-ng-model="viewCardNumber[0]" data-only-numbers placeholder="XXXX" />
                                            </div>
                                            <div class="cell">
                                                <input type="tel" pattern="[0-9]*" size="4" maxlength="4" class="group4" id="cardNumber2" name="cardNumber2" data-ng-model="viewCardNumber[1]" data-only-numbers placeholder="XXXX" />
                                            </div>
                                            <div class="cell">
                                                <input type="tel" pattern="[0-9]*" size="4" maxlength="4" class="group4" id="cardNumber3" name="cardNumber3" data-ng-model="viewCardNumber[2]" data-only-numbers placeholder="XXXX" />
                                            </div>
                                            <div class="cell">
                                                <input type="tel" pattern="[0-9]*" size="4" maxlength="4" class="group4" id="cardNumber4" name="cardNumber4" data-ng-model="viewCardNumber[3]" data-only-numbers placeholder="XXXX" />
                                            </div>                                        <input type="hidden"  data-ng-model="payment.creditCardNumber" data-ng-value="payment.creditCardNumber" data-card-view-model="viewCardNumber" data-cc-number data-cc-eager-type="payment.creditCardType" name="cardNumber" id="cardNumber" data-ng-model-options="{ allowInvalid: true }" data-card-type-matches-fee-card-type="cardTypeMatchesFeeType" data-ng-required="true" />
                                        <span class="input-message-validate" data-validate-on-bottom-at-break="420">
                                            <span data-ng-messages="creditCardForm.cardNumber.$error" data-ng-show="creditCardForm.cardNumber.$valid === false">
                                                <span data-ng-if="creditCardForm.cardNumber.$error.ccNumber">Bad credit card #</span>
                                                <span data-ng-if="creditCardForm.cardNumber.$error.required" class="required">Required</span>
                                                <span data-ng-if="!creditCardForm.cardNumber.$error.ccNumber && !creditCardForm.cardNumber.$error.cardType && !creditCardForm.cardNumber.$error.required && creditCardForm.cardNumber.$error.cardTypeMatchesFeeCardType">Card # must match type</span>
                                            </span>
                                            <i class="ibp-icon-tick" data-ng-show="creditCardForm.cardNumber.$valid === true"></i>
                                        </span>
                                    </div>
                                </div>
                            </label>
                        </div>
                        <div class="field-wrap">
                            <label for="payeeName">
                                <span class="label">
                                    Name on card
                                </span>
                                <div class="error-pad">
                                    <div class="input-wrap input-border" data-validation-state>
                                        <input type="text" class="input-text" id="payeeName" name="payeeName" data-ng-model="payment.payeeName" required>
                                        <span class="input-message-validate" data-validate-on-bottom-at-break="420">
                                            <span data-ng-messages="creditCardForm.payeeName.$error" data-ng-show="creditCardForm.payeeName.$valid === false">
                                                <span class="required">Required</span>
                                            </span>
                                            <i class="ibp-icon-tick" data-ng-show="creditCardForm.payeeName.$valid === true"></i>
                                        </span>
                                    </div>
                                </div>
                            </label>
                        </div>
                        <div class="cc-expiry">
                            <div class="field-wrap expiry-month-year">
                                <span class="label">Expiry date</span>
                                <div class="error-pad" data-validation-state data-input-name="creditCardExpiration">
                                    <div class="input-wrap no-pad input-group no-focus">
                                        <div name="creditCardExpiration" data-ng-model="payment.creditCardExpiration" data-card-expiration></div>
                                    </div>
                                </div>
                                <div class="validate-positioner">
                                    <span class="input-message-validate pos-bottom tip-center" data-ng-class="{'invalid': !creditCardForm.creditCardExpiration.$valid, 'valid': creditCardForm.creditCardExpiration.$valid}">
                                        <span data-ng-messages="creditCardForm.creditCardExpiration.$error" data-ng-show="creditCardForm.creditCardExpiration.$valid === false">
                                            <span data-ng-if="creditCardForm.creditCardExpiration.$error.expiryDate" class="required">{{IbpCms.validationCreditCardExpiry}}</span>
                                            <span data-ng-if="creditCardForm.creditCardExpiration.$error.required" class="required">Required</span>
                                        </span>
                                        <i class="ibp-icon-tick" data-ng-show="creditCardForm.creditCardExpiration.$valid === true"></i>
                                    </span>
                                </div>
                            </div>

                            <div class="field-wrap cvv-field">
                                <label for="cvv">
                                    <span class="label">
                                        CVV <i class="help" data-ng-bind-html="Resources.help | asRawHtml" data-tooltips data-tooltip-side="bottom" data-tooltip-content="{{IbpCms.paymentCvvTooltip}}"></i>
                                    </span>
                                    <div class="error-pad">
                                        <div class="input-wrap input-border" data-validation-state>
                                            <input type="tel" class="input-text" pattern="[0-9]*" id="cvv" name="cvv" data-ng-model="payment.creditCardCvc" maxlength="4" data-ng-required="true" data-ng-maxlength="4" data-ng-minlength="3" data-only-numbers>
                                            <span class="input-message-validate pos-bottom" data-ng-class="{invalid: !creditCardForm.cvv.$valid, valid: creditCardForm.cvv.$valid}">
                                                <span data-ng-messages="creditCardForm.cvv.$error" data-ng-show="creditCardForm.cvv.$valid === false">
                                                    <span data-ng-if="creditCardForm.cvv.$error.required" class="required">Required</span>
                                                    <span data-ng-if="creditCardForm.cvv.$error.minlength" class="minlength">{{IbpCms.validationGenericInvalid}}</span>
                                                    <span data-ng-if="creditCardForm.cvv.$error.maxlength" class="maxlength">{{IbpCms.validationGenericInvalid}}</span>
                                                </span>
                                                <i class="ibp-icon-tick" data-ng-show="creditCardForm.cvv.$valid === true"></i>
                                            </span>
                                        </div>
                                    </div>
                                </label>
                            </div>
                        </div>
                    </div>
                </ng-form>
                <div class="travel-insurance container-fluid" data-ng-if="canPurchaseInsurance()">
                    <h4>Travel insurance</h4>
                    <div data-ng-if="!hasGiftVouchers()">
                        <div class="description">
                            {{IbpCms.paymentTravelInsuranceFlavourText}}
                        </div>
                        <a class="button secondary" data-ng-if="!hasInsurance()" data-ng-click="openTravelInsurance()">Get travel insurance</a>

                        <div class="added-insurance" data-ng-if="hasInsurance()">
                            <p>{{payment.insurance.quote.label}} - {{ payment.insurance.quote.price | money}}</p>
                            <span>
                                <a class="view" data-ng-click="openTravelInsurance()">View Details</a>
                                <a class="remove" data-ng-click="removeTravelInsurance()">Remove</a>
                            </span>
                        </div>
                    </div>
                    <div data-ng-if="hasGiftVouchers()">
                        <div class="description">
                            {{IbpCms.paymentNoTravelInsuranceWithGiftVouchers}}
                        </div>
                    </div>
                </div>
            </div>
            <div class="internet-banking clearfix" data-ng-show="payment.paymentType === PaymentType.InternetBanking && canPayBy(PaymentType.InternetBanking)">
                <div class="poli-logo">
                    <img data-ng-src="{{Resources.poliLogo}}" />
                </div>
                <div class="poli-info">
                    <strong>Pay with POLi</strong>
                    <ul>
                        <li><a href="https://transaction.apac.paywithpoli.com/POLiFISupported.aspx?merchantcode=6100052" target="_blank">List of available banks</a></li>
                        <li><a href="http://www.polipayments.com/Buy" target="_blank">Find out more about POLi</a></li>
                    </ul>
                </div>
                <hr />
            </div>

            <ng-form name="contactDetailsForm" novalidate="" role="form" class="standard-form" data-view-on-focus>
    <div class="container-fluid">
        <hr data-ng-if="(payment.paymentType === PaymentType.CreditCard && canPayBy(PaymentType.CreditCard)) || (payment.paymentType === PaymentType.GiftVoucher && canPayBy(PaymentType.GiftVoucher))" />
        <div class="field-wrap" data-ng-show="isMemberBooking()">
            <label for="customerCode">
                <span class="label">
                    Member No.
                </span>
                <div class="error-pad">
                    <div class="input-wrap input-border" data-validation-state>
                        <input type="text" class="input-text" id="customerCode" name="customerCode" data-ng-model="customerCode" data-ng-required="isMemberBooking()" data-ng-disabled="isMemberBooking()">
                    </div>
                </div>
            </label>
        </div>
        <div class="field-wrap">
            <label for="firstName">
                <span class="label">
                    <span data-ng-if="contactDetails.isAgentLoggedIn()">Passenger contact first name</span>
                    <span data-ng-if="!contactDetails.isAgentLoggedIn()">First name</span>
                </span>
                <div class="error-pad">
                    <div class="input-wrap input-border" data-validation-state>
                        <input type="text" class="input-text" id="firstName" name="firstName" data-ng-model="contactDetails.firstName" data-ng-required="true" data-ng-disabled="isMemberBooking()">
                        <span class="input-message-validate" data-validate-on-bottom-at-break="420">
                            <span data-ng-messages="contactDetailsForm.firstName.$error" data-ng-show="contactDetailsForm.firstName.$valid === false">
                                <span class="required">Required</span>
                            </span>
                            <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.firstName.$valid === true"></i>
                        </span>
                    </div>
                </div>
            </label>
        </div>
        <div class="field-wrap">
            <label for="lastName">
                <span class="label">
                    <span data-ng-if="contactDetails.isAgentLoggedIn()">Passenger contact last name</span>
                    <span data-ng-if="!contactDetails.isAgentLoggedIn()">Last name</span>
                </span>
                <div class="error-pad">
                    <div class="input-wrap input-border" data-validation-state>
                        <input type="text" class="input-text" id="lastName" name="lastName" data-ng-model="contactDetails.lastName" data-ng-required="true" data-ng-disabled="isMemberBooking()">
                        <span class="input-message-validate" data-validate-on-bottom-at-break="420">
                            <span data-ng-messages="contactDetailsForm.lastName.$error" data-ng-show="contactDetailsForm.lastName.$valid === false">
                                <span class="required">Required</span>
                            </span>
                            <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.lastName.$valid === true"></i>
                        </span>
                    </div>
                </div>
            </label>
        </div>
        <div data-ng-controller="addressDetailsController">
            <div class="field-wrap">
                <label for="country">
                    <span class="label">
                        Country
                    </span>
                    <div class="error-pad">
                        <div class="input-wrap no-pad" data-validation-state>
                            <select id="country" name="country" class="input-border" data-ng-model="contactDetails.country" data-ng-options="country.code as country.name for country in getCountries()" data-ng-change="changeAddressMode()" data-ng-required="true"></select>
                            <span class="input-message-validate pos-bottom">
                                <span data-ng-messages="contactDetailsForm.country.$error" data-ng-show="contactDetailsForm.country.$valid === false">
                                    <span data-ng-if="contactDetailsForm.country.$error.required" class="required">Required</span>
                                </span>
                                <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.country.$valid === true"></i>
                            </span>
                        </div>
                    </div>
                </label>
            </div>
            <div class="field-wrap" data-ng-if="!contactDetails.isAgentLoggedIn()">
                <label for="address">
                    <span class="label">
                        Street Address
                    </span>
                    <div class="error-pad" data-ng-if="bookingState.addressDetailState === AddressDetailState.Manual">
                        <div class="input-wrap input-border" data-validation-state>
                            <input type="text" class="input-text" id="address" name="address" data-ng-model="contactDetails.address" data-ng-required="true" data-ng-model-options="{'debounce': 400}" typeahead="address.fullAddress for address in getAddresses($viewValue)" typeahead-on-select="switchToAutoAddress(); setAddress($item)" typeahead-min-length="5" data-ng-change="removePickedAddress()" autocomplete="nope">
                            <span class="input-message-validate" data-validate-on-bottom-at-break="420">
                                <span data-ng-messages="contactDetailsForm.address.$error" data-ng-show="contactDetailsForm.address.$valid === false">
                                    <span class="required">Required</span>
                                </span>
                                <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.address.$valid === true"></i>
                            </span>
                        </div>
                    </div>
                    <div class="error-pad" data-ng-if="bookingState.addressDetailState === AddressDetailState.International">
                        <div class="input-wrap input-border" data-validation-state>
                            <input type="text" class="input-text" id="international-address" name="address" data-ng-model="contactDetails.address" data-ng-required="true">
                            <span class="input-message-validate" data-validate-on-bottom-at-break="420">
                                <span data-ng-messages="contactDetailsForm.address.$error" data-ng-show="contactDetailsForm.address.$valid === false">
                                    <span class="required">Required</span>
                                </span>
                                <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.address.$valid === true"></i>
                            </span>
                        </div>
                    </div>
                    <div class="error-pad" data-ng-if="bookingState.addressDetailState === AddressDetailState.Auto">
                        <div class="input-wrap input-border" data-validation-state>
                            <textarea class="input-text" id="autoAddress" rows="1" name="autoAddress" data-ng-model="autoAddress.fullAddress" spellcheck="false" autocorrect="false" data-ng-required="true" data-ng-model-options="{'debounce': 400}" data-autoheight msd-elastic pu-elastic-input-maxwidth="440px" typeahead="address.fullAddress for address in getAddresses($viewValue)" typeahead-on-select="setAddress($item)" typeahead-min-length="5" data-qas-validation="" data-ng-change="removePickedAddress(true)" autocomplete="nope" data-ng-blur="onAddressBlur()"></textarea>
                            <span class="input-message-validate" data-validate-on-bottom-at-break="420">
                                <span data-ng-messages="contactDetailsForm.autoAddress.$error" data-ng-show="contactDetailsForm.autoAddress.$valid === false">
                                    <span data-ng-if="contactDetailsForm.autoAddress.$error.required" class="required">Required</span>
                                    <span data-ng-if="contactDetailsForm.autoAddress.$error.qas" class="required">Address not found</span>
                                </span>
                                <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.autoAddress.$valid === true"></i>
                            </span>
                        </div>
                    </div>
                </label>
            </div>
            <div class="field-wrap" data-ng-if="!contactDetails.isAgentLoggedIn() && bookingState.addressDetailState === AddressDetailState.Manual">
                <label for="suburb">
                    <span class="label">
                        Suburb
                    </span>
                    <div class="error-pad">
                        <div class="input-wrap input-border" data-validation-state>
                            <input type="text" class="input-text" id="suburb" name="suburb" data-ng-model="contactDetails.suburb" data-ng-required="true"
                                   typeahead="(sub.suburb + ' ' + sub.state + ' ' + sub.postCode) for sub in getSuburbs($viewValue)" typeahead-on-select="onSuburbSelected($item)" autocomplete="nope">
                            <span class="input-message-validate" data-validate-on-bottom-at-break="420">
                                <span data-ng-messages="contactDetailsForm.suburb.$error" data-ng-show="contactDetailsForm.suburb.$valid === false">
                                    <span class="required">Required</span>
                                </span>
                                <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.suburb.$valid === true"></i>
                            </span>
                        </div>
                    </div>
                </label>
            </div>
            <div class="row" data-ng-if="!contactDetails.isAgentLoggedIn() && bookingState.addressDetailState === AddressDetailState.Manual">
                <div class="col-sm-6 col-md-6">
                    <div class="field-wrap">
                        <label for="state">
                            <span class="label">
                                State
                            </span>
                            <div class="error-pad">
                                <div class="input-wrap no-pad" data-validation-state>
                                    <select name="state" id="state" class="input-border" data-ng-model="contactDetails.state" data-ng-required="true">
                                        <option disabled="" selected="" value="">{{State.None}}</option>
                                        <option value="ACT">{{State.ACT}}</option>
                                        <option value="NSW">{{State.NSW}}</option>
                                        <option value="NT">{{State.NT}}</option>
                                        <option value="QLD">{{State.QLD}}</option>
                                        <option value="SA">{{State.SA}}</option>
                                        <option value="TAS">{{State.TAS}}</option>
                                        <option value="VIC">{{State.VIC}}</option>
                                        <option value="WA">{{State.WA}}</option>
                                    </select>
                                    <span class="input-message-validate pos-bottom">
                                        <span data-ng-messages="contactDetailsForm.state.$error" data-ng-show="contactDetailsForm.state.$valid === false">
                                            <span data-ng-if="contactDetailsForm.state.$error.required" class="required">Required</span>
                                        </span>
                                        <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.state.$valid === true"></i>
                                    </span>
                                </div>
                            </div>
                        </label>
                    </div>
                </div>
                <div class="col-sm-6 col-md-6">
                    <div class="field-wrap">
                        <label for="postCode" data-ng-if="contactDetails.state !== State.OutsideAustralia">
                            <span class="label">
                                Post code
                            </span>
                            <div class="error-pad">
                                <div class="input-wrap input-border" data-validation-state>
                                    <input type="tel" class="input-text" id="postCode" pattern="[0-9]*" name="postCode" data-ng-model="contactDetails.postCode" data-ng-minlength="3" data-ng-maxlength="4" data-only-numbers data-ng-required="true">
                                    <span class="input-message-validate pos-bottom">
                                        <span data-ng-messages="contactDetailsForm.postCode.$error" data-ng-show="contactDetailsForm.postCode.$valid === false">
                                            <span data-ng-if="contactDetailsForm.postCode.$error.required" class="required">Required</span>
                                            <span data-ng-if="contactDetailsForm.postCode.$error.minlength" class="minlength">{{IbpCms.validationGenericInvalid}}</span>
                                            <span data-ng-if="contactDetailsForm.postCode.$error.maxlength" class="maxlength">{{IbpCms.validationGenericInvalid}}</span>
                                        </span>
                                        <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.postCode.$valid === true"></i>
                                    </span>
                                </div>
                            </div>
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="field-wrap" data-ng-controller="phoneNumberController">
            <label for="phoneNumber">
                <span class="label">
                    <span data-ng-if="contactDetails.isAgentLoggedIn()">Passenger contact mobile</span>
                    <span data-ng-if="!contactDetails.isAgentLoggedIn()">Phone number (mobile preferred)</span>
                </span>
                <div class="error-pad">
                    <div class="input-wrap input-border" data-validation-state>
                        <select name="country" class="country-code" data-ng-model="selectedCountry" data-ng-options="country as country.name + ' ' + country.phoneCode for country in getCountries()" data-ng-hide="isAmendment" data-ng-change="setPhoneCountryCode()"></select>
                        <input type="text" class="input-text" data-ng-class="{'non-country-code-phone-number': !isAmendment}" id="phoneNumber" name="phoneNumber" data-ng-model="contactDetails.phoneNumber" data-ng-required="true" data-phone-number="" data-mobile-validation="" data-phone-country-code="contactDetails.phoneCountryCode" data-is-loading-validation="isLoadingValidation">
                        <span class="results-loading phone-number-loading" data-ng-show="isLoadingValidation"><img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading"></span>
                        <span class="input-message-validate" data-validate-on-bottom-at-break="420" data-ng-hide="isLoadingValidation">
                            <span data-ng-messages="contactDetailsForm.phoneNumber.$error" data-ng-show="contactDetailsForm.phoneNumber.$valid === false">
                                <span data-ng-if="contactDetailsForm.phoneNumber.$error.required" class="required">Required</span>
                                <span data-ng-if="contactDetailsForm.phoneNumber.$error.phoneNumber ||contactDetailsForm.phoneNumber.$error.mobile" class="required">{{IbpCms.validationGenericInvalid}}</span>
                            </span>
                            <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.phoneNumber.$valid === true"></i>
                        </span>
                    </div>
                    <span class="note">{{IbpCms.paymentPhoneNumberFlavourText}}</span>
                </div>
            </label>
        </div>
        <div class="field-wrap" data-ng-if="!contactDetails.isAgentLoggedIn()">
            <label for="emailAddress">
                <span class="label">
                    Email address
                </span>
                <div class="error-pad">
                    <div class="input-wrap input-border" data-validation-state>
                        <input type="email" class="input-text" id="emailAddress" name="emailAddress" data-ng-model="contactDetails.emailAddress" data-ng-required="true" ng-model-options="{ updateOn: 'blur', allowInvalid: true }">
                        <span class="input-message-validate" data-ng-class="{invalid: !contactDetailsForm.emailAddress.$valid, valid: contactDetailsForm.emailAddress.$valid}" data-validate-on-bottom-at-break="420">
                            <span data-ng-messages="contactDetailsForm.emailAddress.$error" data-ng-show="contactDetailsForm.emailAddress.$valid === false">
                                <span class="required" data-ng-if="contactDetailsForm.emailAddress.$error.required">Required</span>
                                <span class="email" data-ng-if="contactDetailsForm.emailAddress.$error.email">{{IbpCms.validationGenericInvalid}}</span>
                            </span>
                            <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.emailAddress.$valid === true"></i>
                        </span>
                    </div>
                </div>
            </label>
        </div>
        <div class="field-wrap" data-ng-if="!contactDetails.isAgentLoggedIn()">
            <label for="confirmEmailAddress">
                <span class="label">
                    Confirm email address
                </span>
                <div class="error-pad">
                    <div class="input-wrap input-border" data-validation-state>
                        <input type="email" class="input-text" id="confirmEmailAddress" name="confirmEmailAddress" data-ng-model="contactDetails.confirmEmailAddress" data-ng-required="true" data-compare="contactDetails.emailAddress">
                        <span class="input-message-validate" data-ng-class="{invalid: !contactDetailsForm.confirmEmailAddress.$valid, valid: contactDetailsForm.confirmEmailAddress.$valid}" data-validate-on-bottom-at-break="420">
                            <span data-ng-messages="contactDetailsForm.confirmEmailAddress.$error" data-ng-show="contactDetailsForm.confirmEmailAddress.$valid === false">
                                <span class="required" data-ng-if="contactDetailsForm.confirmEmailAddress.$error.required">Required</span>
                                <span class="match" data-ng-if="contactDetailsForm.confirmEmailAddress.$error.match">{{IbpCms.validationEmailsDoNotMatch}}</span>
                                <span class="email" data-ng-if="contactDetailsForm.confirmEmailAddress.$error.email">{{IbpCms.validationGenericInvalid}}</span>
                            </span>
                            <i class="ibp-icon-tick" data-ng-show="contactDetailsForm.confirmEmailAddress.$valid === true"></i>
                        </span>
                    </div>
                </div>
            </label>
        </div>
        <div class="field-wrap remember-my-details" data-ng-if="showRememberMyDetails()">
            <label data-ng-class="{'active': contactDetails.rememberMyDetails}">
                <input type="checkbox" data-ng-model="contactDetails.rememberMyDetails" data-ng-checked="contactDetails.rememberMyDetails" />
                <span class="checkbox"></span>
                Remember my details
            </label>
        </div>
        <div class="field-wrap email-opt-in" data-ng-if="showEmailOptIn()">
            <label data-ng-class="{'active': contactDetails.emailOptIn}">
                <input type="checkbox" data-ng-model="contactDetails.emailOptIn" data-ng-checked="contactDetails.emailOptIn">
                <span class="checkbox"></span>
                I would like to receive information relating to my booking and special offers.
            </label>
        </div>
    </div>
</ng-form>

<ng-form name="agencyDetailsForm" class="standard-form" data-ng-if="contactDetails.isAgentLoggedIn() && workflowState.isOnGettingPaymentStep()">
    <h2>Agency details</h2>
    <div class="container-fluid">
        <div class="field-wrap">
            <label for="purchaseOrderNumber">
                <span class="label">
                    Purchase order number (optional)
                </span>
                <div class="error-pad">
                    <div class="input-wrap input-border" data-validation-state>
                        <input type="text" class="input-text" id="purchaseOrderNumber" name="purchaseOrderNumber" data-ng-model="contactDetails.agencyReferenceNumber">
                    </div>
                </div>
            </label>
        </div>
        <div class="field-wrap">
            <label for="agencyEmailAddress">
                <span class="label">
                    Email address
                </span>
                <div class="error-pad">
                    <div class="input-wrap input-border" data-validation-state>
                        <input type="email" class="input-text" id="agencyEmailAddress" name="agencyEmailAddress" data-ng-model="contactDetails.emailAddress" data-ng-required="true" ng-model-options="{ updateOn: 'blur', allowInvalid: true }">
                        <span class="input-message-validate"
                              data-ng-class="{invalid: !agencyDetailsForm.agencyEmailAddress.$valid, valid: agencyDetailsForm.agencyEmailAddress.$valid}" data-validate-on-bottom-at-break="420">
                            <span data-ng-messages="agencyDetailsForm.agencyEmailAddress.$error" data-ng-show="agencyDetailsForm.agencyEmailAddress.$valid === false">
                                <span class="required" data-ng-if="agencyDetailsForm.agencyEmailAddress.$error.required">Required</span>
                                <span class="email" data-ng-if="agencyDetailsForm.agencyEmailAddress.$error.email">{{IbpCms.validationGenericInvalid}}</span>
                            </span>
                            <i class="ibp-icon-tick" data-ng-show="agencyDetailsForm.agencyEmailAddress.$valid === true"></i>
                        </span>
                    </div>
                </div>
            </label>
        </div>
        <div class="field-wrap">
            <label for="agencyConfirmEmailAddress">
                <span class="label">
                    Confirm email address
                </span>
                <div class="error-pad">
                    <div class="input-wrap input-border" data-validation-state>
                        <input type="email" class="input-text" id="agencyConfirmEmailAddress" name="agencyConfirmEmailAddress" data-ng-model="contactDetails.confirmEmailAddress" data-ng-required="true" data-compare="contactDetails.emailAddress">
                        <span class="input-message-validate"
                              data-ng-class="{invalid: !agencyDetailsForm.agencyConfirmEmailAddress.$valid, valid: agencyDetailsForm.agencyConfirmEmailAddress.$valid}" data-validate-on-bottom-at-break="420">
                            <span data-ng-messages="agencyDetailsForm.agencyConfirmEmailAddress.$error" data-ng-show="agencyDetailsForm.agencyConfirmEmailAddress.$valid === false">
                                <span class="required" data-ng-if="agencyDetailsForm.agencyConfirmEmailAddress.$error.required">Required</span>
                                <span class="match" data-ng-if="agencyDetailsForm.agencyConfirmEmailAddress.$error.match">{{IbpCms.validationEmailsDoNotMatch}}</span>
                                <span class="email" data-ng-if="agencyDetailsForm.agencyConfirmEmailAddress.$error.email">{{IbpCms.validationGenericInvalid}}</span>
                            </span>
                            <i class="ibp-icon-tick" data-ng-show="agencyDetailsForm.agencyConfirmEmailAddress.$valid === true"></i>
                        </span>
                    </div>
                </div>
            </label>
        </div>
    </div>
</ng-form>

            <div class="container-fluid" data-ng-if="isNewBooking() && contactDetails.isAgentLoggedIn()">
                <div class="error-pad">
                    <a data-ng-click="showBalanceToBePaid = !showBalanceToBePaid">Show/hide net value</a>
                    <span data-ng-show="showBalanceToBePaid">${{ getBalanceToBePaid() }}</span>
                </div>
            </div>

            <div class="terms-and-conditions ibp-section">
                <p>
                    You must agree to the following Terms and Conditions:
                    <a data-ng-click="openTermsAndConditionsOfCarriage()">Conditions of Carriage, Tasmanian Quarantine Conditions, Privacy Policy</a>,
                    <a data-ng-click="openRefundTermsAndConditions()">Refund Policy</a>, and the full terms and conditions of each fare linked below.
                </p>
                <p>
                    View our <a data-ng-click="openPrivacyPolicy()">Privacy Statement</a> regarding the personal information we have collected
                </p>
                <div class="terms-summary">
                    <div class="outbound">
                        <div class="bordered-box">
                            <h5>Outbound fare summary</h5>
                            <div class="content" data-ng-bind-html="getFareSummaries().outboundSummary | asRawHtml"></div>
                            <a class="more" data-ng-click="openFullTermsAndConditions(LegOfJourney.Outbound)">See full Terms &amp; Conditions</a>
                        </div>
                    </div>
                    <div class="return" data-ng-if="!isOneWay()">
                        <div class="bordered-box">
                            <h5>Return fare summary</h5>
                            <div class="content" data-ng-bind-html="getFareSummaries().returnSummary | asRawHtml"></div>
                            <a class="more" data-ng-click="openFullTermsAndConditions(LegOfJourney.Return)">See full Terms &amp; Conditions</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="next-step sticky-step stuck"
         data-ng-show="workflowState.isOnGettingPaymentStep()">
        <div class="read-and-agree standard-form">
            <label data-ng-class="{'active': agreedToTerms}" data-ng-init="agreedToTerms = false">
                <input type="checkbox" data-ng-model="agreedToTerms" data-ng-checked="agreedToTerms" />
                <span class="checkbox"></span>
                I've read and agree to the Terms &amp; Conditions
            </label>
        </div>
        <!--Continue to next step-->
        <button type="submit" class="continue button primary ng-animate-disabled"
                data-ng-disabled="!agreedToTerms"
                data-ng-hide="isPaymentOrReservationInProgress()">
            {{ canProcessPayment(creditCardForm, giftVoucherForm, contactDetailsForm) ? getConfirmText() : (paymentInProgress ? "Booking now..." : "Fill in your details") }}
        </button>
        <span class="results-loading" data-ng-show="isPaymentOrReservationInProgress()">
            <img data-ng-src="{{Defaults.loadingSpinnerUrl}}" alt="loading" />
        </span>
    </div>
</form>

                    </div>

                    <div id="booking-confirmation-app" data-ng-controller="bookingConfirmedController" class="ibp-app-component" data-ng-if="workflowState.isOnPaymentSubmittedStep()" data-ng-cloak>
                        <div class="ibp-section" data-ng-if="isCancellation()">
    <div class="section-heading" data-ng-if="isPartialCancellation()">Booking updated</div>
    <div class="cancellation-successful" data-ng-if="isPartialCancellation()">
        <h3 class="dear-passenger">
            Dear {{ getCancelledBookingFirstName() }}
        </h3>
        <p class="result">
            Your cancellation has been successful. {{ getPartialCancellationMessage() }}
        </p>
        <h3 class="sign-off-title">Kind regards,</h3>
        <p class="sign-off">
            The team at Spirit of Tasmania
        </p>
    </div>
    <div class="section-heading" data-ng-if="!isPartialCancellation()">Cancellation successful</div>
    <div class="cancellation-successful" data-ng-if="!isPartialCancellation()">
        <h3 class="dear-passenger">
            Dear {{ getCancelledBookingFirstName() }}
        </h3>
        <p class="result">
            Your cancellation has been successful. We hope you book with us again soon.
        </p>
        <h3 class="sign-off-title">Kind regards,</h3>
        <p class="sign-off">
            The team at Spirit of Tasmania
        </p>
    </div>
</div>
<div class="ibp-section" data-ng-class="{'ibp-section-agent': isAgentBooking()}" data-ng-if="!isCancellation()">
    <div class="section-heading">Booking confirmed!</div>
    <h3><strong>Your booking reference is {{getBookingReference()}}.</strong></h3>
    <div data-ng-if="hasInsuranceResult()">
        <div data-ng-show="getInsuranceResult() === InsurancePurchaseResult.Succeeded">
            <p>Your travel insurance was successfully processed. Your policy number is <strong>{{getInsurancePolicyNumber()}}</strong>. Documentation will be sent to your specified email address.</p>
        </div>
        <div data-ng-show="getInsuranceResult() === InsurancePurchaseResult.Failed">
            <p>Your travel insurance purchase was <strong>not</strong> successfully processed. To add travel insurance to your existing booking, please login to '<a data-ng-href="{{getManageBookingPath()}}">Manage my booking</a>'.</p>
        </div>
    </div>
    <div class="what-now clearfix" data-ng-class="{ 'is-logged-in': isLoggedInUser(), 'sailors-club-no-qualify': isOneWay(), 'no-insurance-shown': !displayInsuranceBox() }">

        <div class="ticket">
            <div class="tile">
                <div class="icon" data-ng-bind-html="Resources.iconTicket | asRawHtml"></div>
                <h4>Ticket</h4>
                <p data-ng-bind-html="getBookingConfirmedTextTicket() | asRawHtml"></p>
                <div class="action">
                    <a data-ng-href="{{getManageBookingPath()}}" target="_self" data-ng-click="amendmentReload()">Manage my booking</a>
                </div>
            </div>
        </div>

        <div class="request" data-ng-if="!!IbpCms.bookingConfirmedLinkRequest">
            <div class="tile">
                <div class="icon" data-ng-bind-html="Resources.iconBooking | asRawHtml"></div>
                <h4>Request</h4>
                <p>{{IbpCms.bookingConfirmedTextRequest}}</p>
                <div class="action">
                    <a data-ng-href="{{IbpCms.bookingConfirmedLinkRequest}}" target="_blank">Special request form</a>
                </div>
            </div>
        </div>

        <div class="insurance" data-ng-if="displayInsuranceBox()">
            <div class="tile">
                <div class="icon" data-ng-bind-html="Resources.iconUmbrella | asRawHtml"></div>
                <h4>Insurance</h4>
                <p>{{IbpCms.bookingConfirmedTextInsurance}}</p>
                <div class="action">
                    <a data-ng-href="{{IbpCms.bookingConfirmedLinkInsurance}}" target="_blank">Get travel insurance</a>
                </div>
            </div>
        </div>

        <div class="sailors-club">
            <div class="tile">
                <div class="icon" data-ng-bind-html="Resources.iconAnchor | asRawHtml"></div>
                <h4>Sailors Club</h4>
                <p>{{IbpCms.bookingConfirmedTextSailorsClub}}</p>
                <div class="action">
                    <a class="button secondary" data-ng-href="/loyalty-program/join-the-sailors-club?booking={{getBookingReference()}}&name={{getBookingLastName()}}">Join Now</a>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid" data-ng-if="getAgentActualPaymentAmount()">
        <div class="error-pad">
            <a data-ng-click="showAgentActualPaymentAmount = !showAgentActualPaymentAmount">Show/hide net value</a>
            <span data-ng-show="showAgentActualPaymentAmount">{{ Utils.formatCurrency(getAgentActualPaymentAmount()) }}</span>
        </div>
    </div>
    <br />
    <div data-ng-if="hasInternetBankingDetails()">
        <h4>Internet Banking Details</h4>
        <br />
        <strong>Bank Receipt Number: </strong>{{getInternetBankingDetails().bankReceiptNumber}};
        <strong>Poli Transaction Reference Number: </strong>{{getInternetBankingDetails().transactionReferenceNumber}}
        <br />
        <strong>Completed At: </strong>{{getInternetBankingDetails().completedDateTime}};
        <strong>Amount Paid: </strong>${{getInternetBankingDetails().amountPaid}};
        <strong>Status: </strong>{{getInternetBankingDetails().status}}
    </div>
</div>


                    </div>

<div class="hotelscombined-widget" data-ng-controller="hotelsCombinedBookingController" data-ng-show="workflowState.isOnPaymentSubmittedStep()" data-ng-if="!isAgentBooking() && !isCancellation()" data-ng-cloak>
            <div id="destination-melbourne" data-ng-show="isDestinationMelbourne()">
                <script type="text/javascript">
                    deferScriptExecution('destination-melbourne', 'https://sbhc.portalhc.com/185594/SearchBox/421714');
                </script>
            </div>
            <div id="destination-tasmania" data-ng-show="!isDestinationMelbourne()">
                <script type="text/javascript">
                    deferScriptExecution('destination-tasmania', 'https://sbhc.portalhc.com/185594/SearchBox/420839');
                </script>
            </div>
</div>

                    <div class="share-upcoming-trip" data-ng-controller="socialMediaShareController" data-ng-if="workflowState.isOnPaymentSubmittedStep() && !isCancellation()" data-ng-cloak>
    <h2>Share your upcoming trip</h2>
    <h3>Let your friends and family know about your trip</h3>
    <div class="icons">
        <a data-ng-href="https://facebook.com/sharer.php?u={{'https://www.spiritoftasmania.com.au' | urlEncode}}" target="_blank" class="icon">
            <div class="facebook" data-ng-bind-html="Resources.facebookBubble | asRawHtml"></div>
        </a>
        <a data-ng-href="https://twitter.com/share?url={{'https://www.spiritoftasmania.com.au' | urlEncode}}&via=spiritoftas&text={{getTwitterShareText('') | urlEncode}}" target="_blank" class="icon">
            <div class="twitter" data-ng-bind-html="Resources.twitterBubble | asRawHtml"></div>
        </a>
    </div>
</div>

                    <div class="section-fill"></div>
                </div>
            </div>


        <script type="text/ng-template" id="/templates/dateSelector.html">
            <div class="date-selector">
    <div class="day">
        <select class="input-border" name="day" data-ng-model="innerDate.day" data-ng-options="day for day in dayList track by day">
            <option data-ng-disabled="isRequired" selected value="">Day</option>
        </select>
    </div>
    <div class="month">
        <select class="input-border" name="month" data-ng-model="innerDate.month" data-ng-options="month.value as month.text for month in monthList">
            <option data-ng-disabled="isRequired" selected value="">Month</option>
        </select>
    </div>
    <div class="year">
        <select class="input-border" name="year" data-ng-model="innerDate.year" data-ng-options="year as year for year in yearList">
            <option data-ng-disabled="isRequired" selected value="">Year</option>
        </select>
    </div>
</div>

        </script>
        <script type="text/ng-template" id="/templates/ibpModalAccommodationDetails.html">
            <h4 data-ng-if="ibpModalContent.features.length > 0">Key cabin features</h4>
<ul class="features" data-ng-if="ibpModalContent.features.length > 0">
    <li class="feature" data-ng-repeat="feature in ibpModalContent.features">
        <div class="icon" data-ng-bind-html="feature.resource | asRawHtml"></div>
        <div class="name">{{feature.displayName}}</div>
    </li>
</ul>
<div class="images" data-ng-class="{'no-features': !ibpModalContent.features || ibpModalContent.features.length === 0}" data-ng-if="ibpModalContent.imageUrls.length > 0"
       data-slick
       data-dots="true"
       data-arrows="false"
       data-infinite="true"
       data-autoplay="true"
       data-autoplay-speed="10000"
       data-speed="300"
       data-touch-move="true"
       data-slides-to-show="1"
       data-slides-to-scroll="1">
    <div data-ng-repeat="img in ibpModalContent.imageUrls">
        <img data-ng-src="{{img}}" />
    </div>
</div>
<div class="description" data-ng-bind-html="ibpModalContent.description | asRawHtml"></div>
        </script>
        <script type="text/ng-template" id="/templates/ibpModalAlert.html">
            {{ibpModalContent.alertContent}}
<button class="modal-button button primary" data-ng-click="dismiss(ibpModalContent)">OK</button>

        </script>
        <script type="text/ng-template" id="/templates/ibpModalConfirmation.html">
            {{ibpModalContent.confirmContent}}
<button class="modal-button button primary" data-ng-click="confirm(ibpModalContent)">{{ibpModalContent.confirmButtonText}}</button>
<a data-ng-click="dismiss(ibpModalContent)">{{ibpModalContent.cancelButtonText}}</a>
        </script>
        <script type="text/ng-template" id="/templates/ibpModalDealDetails.html">
            <div class="ribbon" data-ng-bind-html="ibpModalContent.ribbon | asRawHtml"></div>
<button class="button special"
        data-ng-if="ibpModalContent.currentlyAppliedProductCode !== ibpModalContent.dealProductCode"
        data-ng-click="ibpModalContent.takeDeal(); dismiss(ibpModalContent)">
    Take this deal
</button>
<div class="remove-deal">
    <a data-ng-if="ibpModalContent.currentlyAppliedProductCode === ibpModalContent.dealProductCode"
       data-ng-click="ibpModalContent.removeDeal(); dismiss(ibpModalContent)">Remove this deal</a>
</div>
<div class="image">
    <img data-ng-src="{{ibpModalContent.imageUrl}}" />
</div>
<div class="description">
    <div data-ng-bind-html="ibpModalContent.description | asRawHtml"></div>
    <a class="terms-and-conditions" data-ng-click="$root.$broadcast('view-external-terms-from-deal-modal', ibpModalContent.getTermsAndConditions())">View Full Terms &amp; Conditions</a>
</div>
        </script>
        <script type="text/ng-template" id="/templates/ibpModalDefault.html">
            SOMETHING HAS GONE TERRIBLY WRONG!!!
        </script>
        <script type="text/ng-template" id="/templates/ibpModalEmailSummary.html">
            <p>
    Placeholder for email summary modal.
</p>
<button class="modal-button button primary" data-ng-click="dismiss(ibpModalContent)">OK</button>
        </script>
        <script type="text/ng-template" id="/templates/ibpModalFareExpiry.html">
            <p>It’s been a while since we last checked availability and pricing, so hang on a sec as we bring you up to speed.</p>
<button class="modal-button button primary" data-ng-hide="ibpModalContent.dismissBusy" data-ng-click="dismissWithPromise(ibpModalContent)">Refresh my search</button>
<div class="results-loading" data-ng-show="ibpModalContent.dismissBusy">
    <img data-ng-src="{{$root.Defaults.loadingSpinnerUrl}}" alt="loading" />
</div>
        </script>
        <script type="text/ng-template" id="/templates/ibpModalFareFlexibility.html">
            <p>
    Placeholder for Fare Flexibility modal.
</p>
<button class="modal-button button primary" data-ng-click="dismiss(ibpModalContent)">OK</button>
        </script>
        <script type="text/ng-template" id="/templates/ibpModalHttpError.html">
            <p>An error has occured with your request.</p>
<p>
    Please try again or call us on <span class="call-centre-number">1800 884 305</span> to complete this request.
</p>
<button class="modal-button button primary" data-ng-click="dismiss(ibpModalContent)">OK</button>
        </script>
        <script type="text/ng-template" id="/templates/ibpModalTravelInsurance.html">
            <form name="travelInsuranceForm" data-ng-controller="travelInsuranceController" class="standard-form" role="form" novalidate="" data-form-submit="getQuote()">
    <div class="container-fluid">
        <div class="intro clearfix">
            <div>
                <div class="allianz-logo">
                    <img data-ng-src="{{allianzLogo}}" />
                </div>
                <p class="description">
                    We can arrange travel insurance as an authorised representative of Allianz Global Assistance.
                    <a href="{{allianzProductDisclosurePdfUrl}}" target="_blank" data-ng-click="extendReservationWindow()">Read the FSG, PDS and Policy Wording</a>.
                </p>
            </div>
        </div>

        <div class="field-wrap first radio-group radio-horizontal radio-stackable">
            <div>
                <h3>Choose your insurance option</h3>
            </div>
            <div class="insurance-options">
                <label>
                    <input type="radio" name="insuranceTypeOption" data-ng-model="insurance.type" data-ng-value="insuranceType.Cancellation" />
                    <span class="radiobtn"></span>Cancellation insurance
                </label>
                <label>
                    <input type="radio" name="insuranceTypeOption" data-ng-model="insurance.type" data-ng-value="insuranceType.Comprehensive" />
                    <span class="radiobtn"></span>Comprehensive travel insurance
                </label>
            </div>
        </div>

        <div class="field-wrap radio-group radio-horizontal errorable" data-ng-class="{'is-invalid': travelInsuranceForm.areAustResidents.$dirty && (insurance.areAustResidents === false || insurance.areAustResidents == null)}">
            <div>
                <h3>Are all travellers Australian residents?</h3>
            </div>
            <div>
                <label>
                    <input type="radio" name="areAustResidents" data-ng-model="insurance.areAustResidents" data-ng-value="true" />
                    <span class="radiobtn"></span>Yes
                </label>
                <label>
                    <input type="radio" name="areAustResidents" data-ng-model="insurance.areAustResidents" data-ng-value="false" />
                    <span class="radiobtn"></span>No
                </label>
                <div class="validate-positioner" data-ng-class="{'msg-inactive': !travelInsuranceForm.areAustResidents.$dirty || insurance.areAustResidents !== false}">
                    <div class="input-message-validate invalid pos-bottom tip-center">
                        Insurance can only be purchased by Australian residents.
                    </div>
                </div>
                <div class="validate-positioner" data-ng-class="{'msg-inactive': !travelInsuranceForm.areAustResidents.$dirty || insurance.areAustResidents != null}">
                    <div class="input-message-validate invalid pos-bottom tip-center">
                        Required
                    </div>
                </div>
            </div>
        </div>

        <!-- insurance details -->
        <div data-ng-show="shouldShowInsuranceDetails()" class="policy-and-passengers-form" data-ng-class="{'greyed-out': travelInsuranceForm.$dirty && (insurance.areAustResidents === false || insurance.areAustResidents == null)}">
            <div class="field-wrap" data-ng-if="isOneWay()">
                <div class="label">
                    <h3>Policy end date</h3>
                    <div class="input-wrap no-pad date-selector-wrap" data-validation-state data-input-name="policyEndDate">
                        <div class="error-padding clearfix" data-ng-class="{'is-invalid': travelInsuranceForm.policyEndDate.$invalid}">
                            <div data-date-selector required name="policyEndDate" data-ng-model="insurance.policyEndDate"
                                 data-min-year="policyDateSettings.minYear" data-max-year="policyDateSettings.maxYear"
                                 data-minimum-date="{{policyDateSettings.minDate}}" data-maximum-date="{{policyDateSettings.maxDate}}"></div>
                            <div class="validate-positioner">
                                <div class="input-message-validate pos-bottom invalid tip-center">
                                    <span data-ng-messages="travelInsuranceForm.policyEndDate.$error" data-ng-show="!travelInsuranceForm.policyEndDate.$valid">
                                        <span data-ng-message="required" data-ng-show="travelInsuranceForm.policyEndDate.$error.required" class="required">Required</span>
                                        <span data-ng-message="date" data-ng-show="travelInsuranceForm.policyEndDate.$error.date" class="required">{{badDateValidationMessage}}</span>
                                        <span data-ng-message="minimumDate, maximumDate" data-ng-show="travelInsuranceForm.policyEndDate.$error.minimumDate || travelInsuranceForm.policyEndDate.$error.maximumDate" class="required">Date outside of valid range.</span>
                                    </span>
                                    <span data-ng-show="travelInsuranceForm.policyEndDate.$valid" class="input-message-validate pos-bottom">
                                        <i class="ibp-icon-tick"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <ul data-ng-repeat="passengerCode in passengerCodes">
                <li data-ng-repeat="passenger in getPassengerDetails(passengerCode)">
                    <div class="field-wrap">
                        <h3><strong>{{getPassengerNameForCode(passengerCode)}} {{$index + 1}}</strong> - {{ passenger.firstName}} {{passenger.lastName }}</h3>
                        <div class="label">
                            <span class="date-selector-wrap-label">
                                Date of birth
                            </span>
                            <div class="input-wrap no-pad date-selector-wrap" data-validation-state data-input-name="{{passengerCode + $index}}-dateOfBirth">
                                <div class="error-padding clearfix" data-ng-class="{'is-invalid': travelInsuranceForm['{{passengerCode + $index}}-dateOfBirth'].$invalid}">
                                    <div data-date-selector required name="{{passengerCode + $index}}-dateOfBirth" data-ng-model="passenger.dateOfBirth"
                                         data-min-year="dateOfBirthSettings[passengerCode].minYear" data-max-year="dateOfBirthSettings[passengerCode].maxYear"
                                         data-minimum-date="{{dateOfBirthSettings[passengerCode].minDate}}" data-maximum-date="{{dateOfBirthSettings[passengerCode].maxDate}}" data-ng-disabled="isPassengerReadonly(passenger, passengerCode)"></div>
                                    <div class="validate-positioner">
                                        <div class="input-message-validate pos-bottom tip-center">
                                            <span data-ng-messages="travelInsuranceForm['{{passengerCode + $index}}-dateOfBirth'].$error" data-ng-show="!travelInsuranceForm['{{passengerCode + $index}}-dateOfBirth'].$valid">
                                                <span data-ng-message="required" data-ng-show="travelInsuranceForm['{{passengerCode + $index}}-dateOfBirth'].$error.required" class="required">Required</span>
                                                <span data-ng-message="date" data-ng-show="travelInsuranceForm['{{passengerCode + $index}}-dateOfBirth'].$error.date" class="required">Invalid Date</span>
                                                <span data-ng-message="minimumDate, maximumDate" data-ng-show="travelInsuranceForm['{{passengerCode + $index}}-dateOfBirth'].$error.minimumDate || travelInsuranceForm['{{passengerCode + $index}}-dateOfBirth'].$error.maximumDate" class="required">Date outside of valid range.</span>
                                            </span>
                                            <span data-ng-show="travelInsuranceForm['{{passengerCode + $index}}-dateOfBirth'].$valid" class="input-message-validate pos-bottom">
                                                <i class="ibp-icon-tick"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </li>
            </ul>

            <div class="field-wrap">
                <button type="submit" class="button get-quote" data-ng-disabled="!canGetQuote() || isGettingQuote()" data-ng-class="{'primary': !insurance.quote}">Get quote</button>
            </div>
        </div>

        <div class="field-wrap premium" data-ng-class="{'visible': !!insurance.quote || isGettingQuote()}">
            <div class="results-loading" data-ng-show="isGettingQuote()"><img data-ng-src="{{loadingSpinnerUrl}}" alt="loading" /></div>
            <h2 data-ng-show="insurance.quote.price > 0 && !isGettingQuote()">Premium: ${{insurance.quote.price}}</h2>
            <h2 data-ng-show="insurance.quote.price === 0 && !isGettingQuote()">Your requested quote could not be processed. Please contact Allianz on 1800 023 797</h2>
        </div>

        <div class="field-wrap action-buttons">
            <button class="button secondary" data-ng-click="dismiss(ibpModalContent)">Cancel</button>
            <button class="button primary" data-ng-click="addQuotedInsurance(); dismiss(ibpModalContent)" data-ng-disabled="!canAddQuotedInsurance()">{{isViewingExistingInsurance() ? 'Update' : 'Add'}} insurance</button>
        </div>

        <div class="field-wrap terms-and-conditions">
            <p>
                TT-Line Company Pty Ltd ABN 39 061 996 174 AR 296748 is an authorised representative of AWP 
                Australia Pty Ltd ABN 52 097 227 177 AFS Licence 245631 trading as Allianz Global
                Assistance. Travel insurance is arranged and managed by Allianz Global Assistance and is
                issued by Allianz Australia Insurance Limited ABN 15 000 122 850 AFS Licence 234708. This is
                general information only and does not consider your personal circumstances. You should consider
                the Product Disclosure Statement before making any decisions about this product.
            </p>
        </div>
</form>
        </script>
        <script type="text/ng-template" id="/templates/miniBreakdown.html">
            <div class="mini-breakdown" data-ng-class="{'deal-available': sailingPriceSet.restrictedProductCodes.length > 0, 'hide': sailingPriceSet.soldOutReason === SoldOutReason.Passengers}">
    <div class="pointy"></div>
    <!-- Prices -->
    <div class="breakdown" data-ng-if="!sailingPriceSet.isSoldOut">
        <div class="fare-type">
            Our <strong>{{getFareTypeName()}}</strong>:
        </div>
        <ul class="passengers-and-vehicles">
            <li data-ng-if="showPensionersOnlyAsAdults()">
                <div class="item">{{getPensionersOnlyAsAdultsDisplay()}}</div>
                <div class="price">{{getPensionersOnlyAsAdultsPrice()}}</div>
            </li>
            <li data-ng-repeat="passengerGroup in booking.getPassengers(LegOfJourney.Outbound).groups">
                <div class="item" data-ng-class="{'pensioner-soldout': sailingPriceSet.isPensionerFareSoldOut && passengerGroup.categoryCode === $root.PassengerCode.Pensioner}">{{getPassengerDisplay(passengerGroup)}}</div>
                <div class="price">{{getPassengerPrice(passengerGroup)}}</div>
            </li>
            <li data-ng-if="booking.getPetCount(LegOfJourney.Outbound) > 0">
                <div class="item">{{booking.getPetCount(LegOfJourney.Outbound)}} x Pet<span data-ng-if="booking.getPetCount(LegOfJourney.Outbound) > 1">s</span></div>
                <div class="price">$0</div>
            </li>
            <li data-ng-repeat="vehiclePrice in getSelectedFareTypeProduct().vehiclePrices track by $index">
                <div class="item">1 x {{getVehicleDisplay($index)}}</div>
                <div class="price">${{vehiclePrice}}</div>
            </li>
            <li data-ng-if="selectedSailing.vehicles.numberOfPushbikes > 0">
                <div class="item">{{selectedSailing.vehicles.numberOfPushbikes}} x Bicycle<span data-ng-if="selectedSailing.vehicles.numberOfPushbikes > 1">s</span></div>
                <div class="price">${{getSelectedFareTypeProduct().lineItems[ExtrasCode.Pushbike].unitPrice * selectedSailing.vehicles.numberOfPushbikes}}</div>
            </li>
        </ul>
        <a class="terms-and-conditions" data-ng-click="viewProductTermsAndConditions(getSelectedFareTypeProduct())">Terms &amp; Conditions</a>
    </div>
    <!-- Deals -->
    <!-- TODO: show multiple deals if any-->

    <div class="possible-deal-available" data-ng-hide="!selectedSailing.areDealsVisible() || sailingPriceSet.isSoldOut">
        <h5><i class="ribbon" data-ng-bind-html="Resources.iconDealRibbon | asRawHtml"></i> {{getDealAvailableText()}}</h5>
        <p>Proceed to the accommodation step for full details of {{getAvailableDealsList()}}</p>
    </div>
    <!-- Vehicles sold out -->
    <div class="no-vehicles" data-ng-show="sailingPriceSet.soldOutReason === SoldOutReason.Vehicles">
        <strong>SOLD OUT</strong> based on the {{Utils.pluralize('vehicle', selectedSailing.vehicles.getTakingTotal())}} you have chosen.
        <div class="spirit-tip">
            <h5>
                <div class="lightbulb" data-ng-bind-html="Resources.lightbulb | asRawHtml"></div>
                Spirit Tip
            </h5>
            You can remove <span data-ng-if="selectedSailing.vehicles.getTakingTotal() === 1">it</span><span data-ng-if="selectedSailing.vehicles.getTakingTotal() !== 1">them</span> from your booking or try an alternative date.
        </div>
    </div>
    <!-- Vehicle sold out but low available -->
    <div class="no-vehicles" data-ng-show="sailingPriceSet.soldOutReason === SoldOutReason.VehiclesWithLowCarAvailability">
        <strong>SOLD OUT</strong> based on the {{Utils.pluralize('vehicle', selectedSailing.vehicles.getTakingTotal())}} you have chosen.
        <div class="spirit-tip">
            <h5>
                <div class="lightbulb" data-ng-bind-html="Resources.lightbulb | asRawHtml"></div>
                Spirit Tip
            </h5>
            {{getLowCarSpaceAvailableTooltip()}}
        </div>

    </div>
    <!-- Pets sold out -->
    <div class="no-pets" data-ng-show="sailingPriceSet.soldOutReason === SoldOutReason.Pets">
        <strong>SOLD OUT</strong> based on the <span data-ng-if="selectedSailing.petCount === 1">pet</span><span data-ng-if="selectedSailing.petCount !== 1">number of pets</span> you have chosen.
        <div class="spirit-tip">
            <h5>
                <div class="lightbulb" data-ng-bind-html="Resources.lightbulb | asRawHtml"></div>
                Spirit Tip
            </h5>
            You can remove <span data-ng-if="selectedSailing.petCount === 1">it</span><span data-ng-if="selectedSailing.petCount !== 1">them</span> from your booking or try an alternative date.
        </div>
    </div>
    <!-- Bicycles sold out -->
    <div class="no-vehicles" data-ng-show="sailingPriceSet.soldOutReason === SoldOutReason.Pushbikes">
        <strong>SOLD OUT</strong> based on the <span data-ng-if="selectedSailing.vehicles.getTakingTotal() === 1">bicycle</span><span data-ng-if="selectedSailing.vehicles.getTakingTotal() !== 1">number of bicycles</span> you have chosen.
        <div class="spirit-tip">
            <h5>
                <div class="lightbulb" data-ng-bind-html="Resources.lightbulb | asRawHtml"></div>
                Spirit Tip
            </h5>
            You can remove <span data-ng-if="selectedSailing.vehicles.getTakingTotal() === 1">it</span><span data-ng-if="selectedSailing.vehicles.getTakingTotal() !== 1">them</span> from your booking or try an alternative date.
        </div>
    </div>
</div>
        </script>
        <script type="text/ng-template" id="/templates/sailingDatePicker.html">
            <div class="date-picker">
    <div class="cell">
        <select class="day" data-ng-options="d.actualValue as d.displayValue for d in dayList" data-ng-model="selectedDay" data-ng-change="setSailingDate()">
            <option value="" selected disabled="disabled">Day</option>
        </select>
    </div>
    <div class="cell month-year-wrap">
        <select class="month-year" data-ng-options="m.actualValue as m.displayValue for m in monthYearList" data-ng-model="selectedMonthYear" data-ng-change="setSailingDate()">
            <option value="" selected disabled="disabled">Month</option>
        </select>
    </div>
    <div class="cal-button">
        <input class="date-hidden" type="text" data-ui-date="dateOptions" data-ui-date-format="yy/mm/dd" data-ng-model="dateTime" disabled />
    </div>
</div>
        </script>

            <!--<![endif]-->
    </div>


</div>



    <script src="/bundles/js/website?v=ekwueqG8bBUvDep66XC0aCNHFEq-HxsNZXsd7pit7So1"></script>

    <script src="/bundles/js/ibp/head?v=Fc4JkPq24PqoYp6gNx6lCMW7Vrf1e9RpXFJ3Sx-qgaQ1"></script>

    <script src="/scripts/modernizr-2.8.3.min.js"></script>
    
    <script src="/bundles/js/ibp/tail?v=JfnuHe_BlK8nD2pCR5xEgA2Dmo8dqcmnITpQj0TudXY1"></script>

    <script src="/bundles/js/ibp/init/standard?v=mUBO54hHe5rW0j6SUzaHAbO2Bp9m4at_D5AyG-B_BJs1"></script>

    



<script type="text/javascript">
    angular.module('global.services').factory('searchWidgetInitialiser', function () {
        return {
            searchSettings: {
  "baseDate": "2018-09-08",
  "lastDate": "2019-09-01",
  "defaultAdultPassengerCount": 0,
  "adultPassengerCountRange": [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14
  ],
  "childPassengerCountRange": [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14
  ],
  "infantPassengerCountRange": [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14
  ],
  "pensionerPassengerCountRange": [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14
  ],
  "kennelsCountRange": [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14
  ],
  "maxPassengers": 14,
  "vehicleMaxTotalLength": 19.0,
  "bikeRackLength": 0.5,
  "vehicleHeightLimit": 2.1,
  "motorbikeLengthStandard": 2.0,
  "motorbikeLengthWithSidecar": 4.0,
  "motorbikeLengthWithTrailer": 4.0,
  "motorhomeMinLength": 4.0,
  "motorhomeMaxLength": 19.0,
  "fareExpiryHours": 4.0,
  "canPurchaseInsurance": true,
  "nodeId": 5524,
  "specialOfferCodes": "",
  "titles": [
    "MR",
    "MS",
    "MRS",
    "MISS",
    "MAST",
    "CAPT",
    "DR",
    "LADY",
    "PROF",
    "REV",
    "SIR"
  ],
  "countries": [
    {
      "code": "AF",
      "name": "Afghanistan, Islamic State of",
      "phoneCode": "+93"
    },
    {
      "code": "AL",
      "name": "Albania",
      "phoneCode": "+355"
    },
    {
      "code": "DZ",
      "name": "Algeria",
      "phoneCode": "+213"
    },
    {
      "code": "AS",
      "name": "American Samoa",
      "phoneCode": "+1684"
    },
    {
      "code": "AD",
      "name": "Andorra, Principality of",
      "phoneCode": "+376"
    },
    {
      "code": "AO",
      "name": "Angola",
      "phoneCode": "+244"
    },
    {
      "code": "AI",
      "name": "Anguilla",
      "phoneCode": "+1264"
    },
    {
      "code": "AQ",
      "name": "Antarctica",
      "phoneCode": "+672"
    },
    {
      "code": "AG",
      "name": "Antigua and Barbuda",
      "phoneCode": "+1268"
    },
    {
      "code": "AR",
      "name": "Argentina",
      "phoneCode": "+54"
    },
    {
      "code": "AM",
      "name": "Armenia",
      "phoneCode": "+374"
    },
    {
      "code": "AW",
      "name": "Aruba",
      "phoneCode": "+297"
    },
    {
      "code": "AU",
      "name": "Australia",
      "phoneCode": "+61"
    },
    {
      "code": "AT",
      "name": "Austria",
      "phoneCode": "+43"
    },
    {
      "code": "AZ",
      "name": "Azerbaidjan",
      "phoneCode": "+994"
    },
    {
      "code": "BS",
      "name": "Bahamas",
      "phoneCode": "+1242"
    },
    {
      "code": "BH",
      "name": "Bahrain",
      "phoneCode": "+973"
    },
    {
      "code": "BD",
      "name": "Bangladesh",
      "phoneCode": "+880"
    },
    {
      "code": "BB",
      "name": "Barbados",
      "phoneCode": "+1246"
    },
    {
      "code": "BY",
      "name": "Belarus",
      "phoneCode": "+375"
    },
    {
      "code": "BE",
      "name": "Belgium",
      "phoneCode": "+32"
    },
    {
      "code": "BZ",
      "name": "Belize",
      "phoneCode": "+501"
    },
    {
      "code": "BJ",
      "name": "Benin",
      "phoneCode": "+229"
    },
    {
      "code": "BM",
      "name": "Bermuda",
      "phoneCode": "+1441"
    },
    {
      "code": "BT",
      "name": "Bhutan",
      "phoneCode": "+975"
    },
    {
      "code": "BO",
      "name": "Bolivia",
      "phoneCode": "+591"
    },
    {
      "code": "BA",
      "name": "Bosnia-Herzegovina",
      "phoneCode": "+387"
    },
    {
      "code": "BW",
      "name": "Botswana",
      "phoneCode": "+267"
    },
    {
      "code": "BR",
      "name": "Brazil",
      "phoneCode": "+55"
    },
    {
      "code": "IO",
      "name": "British Indian Ocean Territory",
      "phoneCode": "+246"
    },
    {
      "code": "BN",
      "name": "Brunei Darussalam",
      "phoneCode": "+673"
    },
    {
      "code": "BG",
      "name": "Bulgaria",
      "phoneCode": "+259"
    },
    {
      "code": "BF",
      "name": "Burkina Faso",
      "phoneCode": "+226"
    },
    {
      "code": "BI",
      "name": "Burundi",
      "phoneCode": "+257"
    },
    {
      "code": "KH",
      "name": "Cambodia, Kingdom of",
      "phoneCode": "+855"
    },
    {
      "code": "CM",
      "name": "Cameroon",
      "phoneCode": "+237"
    },
    {
      "code": "CA",
      "name": "Canada",
      "phoneCode": "+1"
    },
    {
      "code": "CV",
      "name": "Cape Verde",
      "phoneCode": "+238"
    },
    {
      "code": "KY",
      "name": "Cayman Islands",
      "phoneCode": "+1345"
    },
    {
      "code": "CF",
      "name": "Central African Republic",
      "phoneCode": "+236"
    },
    {
      "code": "TD",
      "name": "Chad",
      "phoneCode": "+235"
    },
    {
      "code": "CL",
      "name": "Chile",
      "phoneCode": "+56"
    },
    {
      "code": "CN",
      "name": "China",
      "phoneCode": "+86"
    },
    {
      "code": "CX",
      "name": "Christmas Island",
      "phoneCode": "+61"
    },
    {
      "code": "CC",
      "name": "Cocos (Keeling) Islands",
      "phoneCode": "+61"
    },
    {
      "code": "CO",
      "name": "Colombia",
      "phoneCode": "+57"
    },
    {
      "code": "KM",
      "name": "Comoros",
      "phoneCode": "+269"
    },
    {
      "code": "CD",
      "name": "Congo, The Democratic Republic of the",
      "phoneCode": "+243"
    },
    {
      "code": "CK",
      "name": "Cook Islands",
      "phoneCode": "+682"
    },
    {
      "code": "CR",
      "name": "Costa Rica",
      "phoneCode": "+506"
    },
    {
      "code": "HR",
      "name": "Croatia",
      "phoneCode": "+385"
    },
    {
      "code": "CU",
      "name": "Cuba",
      "phoneCode": "+53"
    },
    {
      "code": "CY",
      "name": "Cyprus",
      "phoneCode": "+357"
    },
    {
      "code": "CZ",
      "name": "Czech Republic",
      "phoneCode": "+420"
    },
    {
      "code": "DK",
      "name": "Denmark",
      "phoneCode": "+45"
    },
    {
      "code": "DJ",
      "name": "Djibouti",
      "phoneCode": "+253"
    },
    {
      "code": "DM",
      "name": "Dominica",
      "phoneCode": "+1767"
    },
    {
      "code": "DO",
      "name": "Dominican Republic",
      "phoneCode": "+1809"
    },
    {
      "code": "TP",
      "name": "East Timor",
      "phoneCode": "+670"
    },
    {
      "code": "EC",
      "name": "Ecuador",
      "phoneCode": "+593"
    },
    {
      "code": "EG",
      "name": "Egypt",
      "phoneCode": "+20"
    },
    {
      "code": "SV",
      "name": "El Salvador",
      "phoneCode": "+503"
    },
    {
      "code": "GQ",
      "name": "Equatorial Guinea",
      "phoneCode": "+240"
    },
    {
      "code": "ER",
      "name": "Eritrea",
      "phoneCode": "+291"
    },
    {
      "code": "EE",
      "name": "Estonia",
      "phoneCode": "+372"
    },
    {
      "code": "ET",
      "name": "Ethiopia",
      "phoneCode": "+251"
    },
    {
      "code": "FK",
      "name": "Falkland Islands",
      "phoneCode": "+500"
    },
    {
      "code": "FO",
      "name": "Faroe Islands",
      "phoneCode": "+298"
    },
    {
      "code": "FJ",
      "name": "Fiji",
      "phoneCode": "+679"
    },
    {
      "code": "FI",
      "name": "Finland",
      "phoneCode": "+358"
    },
    {
      "code": "FR",
      "name": "France",
      "phoneCode": "+33"
    },
    {
      "code": "GA",
      "name": "Gabon",
      "phoneCode": "+241"
    },
    {
      "code": "GM",
      "name": "Gambia",
      "phoneCode": "+220"
    },
    {
      "code": "GE",
      "name": "Georgia",
      "phoneCode": "+995"
    },
    {
      "code": "DE",
      "name": "Germany",
      "phoneCode": "+49"
    },
    {
      "code": "GH",
      "name": "Ghana",
      "phoneCode": "+233"
    },
    {
      "code": "GI",
      "name": "Gibraltar",
      "phoneCode": "+350"
    },
    {
      "code": "GR",
      "name": "Greece",
      "phoneCode": "+30"
    },
    {
      "code": "GL",
      "name": "Greenland",
      "phoneCode": "+299"
    },
    {
      "code": "GD",
      "name": "Grenada",
      "phoneCode": "+1473"
    },
    {
      "code": "GU",
      "name": "Guam (USA)",
      "phoneCode": "+1671"
    },
    {
      "code": "GT",
      "name": "Guatemala",
      "phoneCode": "+502"
    },
    {
      "code": "GN",
      "name": "Guinea",
      "phoneCode": "+224"
    },
    {
      "code": "GW",
      "name": "Guinea Bissau",
      "phoneCode": "+245"
    },
    {
      "code": "GY",
      "name": "Guyana",
      "phoneCode": "+592"
    },
    {
      "code": "HT",
      "name": "Haiti",
      "phoneCode": "+509"
    },
    {
      "code": "VA",
      "name": "Holy See (Vatican City State)",
      "phoneCode": "+379"
    },
    {
      "code": "HN",
      "name": "Honduras",
      "phoneCode": "+504"
    },
    {
      "code": "HK",
      "name": "Hong Kong",
      "phoneCode": "+852"
    },
    {
      "code": "HU",
      "name": "Hungary",
      "phoneCode": "+36"
    },
    {
      "code": "IS",
      "name": "Iceland",
      "phoneCode": "+354"
    },
    {
      "code": "IN",
      "name": "India",
      "phoneCode": "+91"
    },
    {
      "code": "ID",
      "name": "Indonesia",
      "phoneCode": "+62"
    },
    {
      "code": "IR",
      "name": "Iran",
      "phoneCode": "+98"
    },
    {
      "code": "IQ",
      "name": "Iraq",
      "phoneCode": "+964"
    },
    {
      "code": "IE",
      "name": "Ireland",
      "phoneCode": "+353"
    },
    {
      "code": "IL",
      "name": "Israel",
      "phoneCode": "+972"
    },
    {
      "code": "IT",
      "name": "Italy",
      "phoneCode": "+39"
    },
    {
      "code": "CI",
      "name": "Ivory Coast (Cote D¿Ivoire)",
      "phoneCode": "+225"
    },
    {
      "code": "JM",
      "name": "Jamaica",
      "phoneCode": "+1876"
    },
    {
      "code": "JP",
      "name": "Japan",
      "phoneCode": "+81"
    },
    {
      "code": "JO",
      "name": "Jordan",
      "phoneCode": "+962"
    },
    {
      "code": "KZ",
      "name": "Kazakhstan",
      "phoneCode": "+7"
    },
    {
      "code": "KE",
      "name": "Kenya",
      "phoneCode": "+254"
    },
    {
      "code": "KI",
      "name": "Kiribati",
      "phoneCode": "+868"
    },
    {
      "code": "KW",
      "name": "Kuwait",
      "phoneCode": "+965"
    },
    {
      "code": "KG",
      "name": "Kyrgyz Republic (Kyrgyzstan)",
      "phoneCode": "+996"
    },
    {
      "code": "LA",
      "name": "Laos",
      "phoneCode": "+856"
    },
    {
      "code": "LV",
      "name": "Latvia",
      "phoneCode": "+371"
    },
    {
      "code": "LB",
      "name": "Lebanon",
      "phoneCode": "+961"
    },
    {
      "code": "LS",
      "name": "Lesotho",
      "phoneCode": "+266"
    },
    {
      "code": "LR",
      "name": "Liberia",
      "phoneCode": "+231"
    },
    {
      "code": "LY",
      "name": "Libya",
      "phoneCode": "+218"
    },
    {
      "code": "LI",
      "name": "Liechtenstein",
      "phoneCode": "+423"
    },
    {
      "code": "LT",
      "name": "Lithuania",
      "phoneCode": "+370"
    },
    {
      "code": "LU",
      "name": "Luxembourg",
      "phoneCode": "+352"
    },
    {
      "code": "MO",
      "name": "Macau",
      "phoneCode": "+853"
    },
    {
      "code": "MK",
      "name": "Macedonia",
      "phoneCode": "+389"
    },
    {
      "code": "MG",
      "name": "Madagascar",
      "phoneCode": "+261"
    },
    {
      "code": "MW",
      "name": "Malawi",
      "phoneCode": "+265"
    },
    {
      "code": "MY",
      "name": "Malaysia",
      "phoneCode": "+60"
    },
    {
      "code": "MV",
      "name": "Maldives",
      "phoneCode": "+960"
    },
    {
      "code": "ML",
      "name": "Mali",
      "phoneCode": "+223"
    },
    {
      "code": "MT",
      "name": "Malta",
      "phoneCode": "+356"
    },
    {
      "code": "MH",
      "name": "Marshall Islands",
      "phoneCode": "+692"
    },
    {
      "code": "MR",
      "name": "Mauritania",
      "phoneCode": "+222"
    },
    {
      "code": "MU",
      "name": "Mauritius",
      "phoneCode": "+230"
    },
    {
      "code": "YT",
      "name": "Mayotte",
      "phoneCode": "+262"
    },
    {
      "code": "MX",
      "name": "Mexico",
      "phoneCode": "+52"
    },
    {
      "code": "FM",
      "name": "Micronesia",
      "phoneCode": "+691"
    },
    {
      "code": "MD",
      "name": "Moldavia",
      "phoneCode": "+373"
    },
    {
      "code": "MC",
      "name": "Monaco",
      "phoneCode": "+377"
    },
    {
      "code": "MN",
      "name": "Mongolia",
      "phoneCode": "+976"
    },
    {
      "code": "MS",
      "name": "Montserrat",
      "phoneCode": "+1664"
    },
    {
      "code": "MA",
      "name": "Morocco",
      "phoneCode": "+212"
    },
    {
      "code": "MZ",
      "name": "Mozambique",
      "phoneCode": "+258"
    },
    {
      "code": "MM",
      "name": "Myanmar",
      "phoneCode": "+95"
    },
    {
      "code": "NA",
      "name": "Namibia",
      "phoneCode": "+264"
    },
    {
      "code": "NR",
      "name": "Nauru",
      "phoneCode": "+674"
    },
    {
      "code": "NP",
      "name": "Nepal",
      "phoneCode": "+977"
    },
    {
      "code": "NL",
      "name": "Netherlands",
      "phoneCode": "+31"
    },
    {
      "code": "AN",
      "name": "Netherlands Antilles",
      "phoneCode": "+599"
    },
    {
      "code": "NC",
      "name": "New Caledonia (French)",
      "phoneCode": "+687"
    },
    {
      "code": "NZ",
      "name": "New Zealand",
      "phoneCode": "+64"
    },
    {
      "code": "NI",
      "name": "Nicaragua",
      "phoneCode": "+505"
    },
    {
      "code": "NE",
      "name": "Niger",
      "phoneCode": "+227"
    },
    {
      "code": "NG",
      "name": "Nigeria",
      "phoneCode": "+234"
    },
    {
      "code": "NU",
      "name": "Niue",
      "phoneCode": "+683"
    },
    {
      "code": "NF",
      "name": "Norfolk Island",
      "phoneCode": "+61"
    },
    {
      "code": "KP",
      "name": "North Korea",
      "phoneCode": "+850"
    },
    {
      "code": "MP",
      "name": "Northern Mariana Islands",
      "phoneCode": "+1670"
    },
    {
      "code": "NO",
      "name": "Norway",
      "phoneCode": "+47"
    },
    {
      "code": "OM",
      "name": "Oman",
      "phoneCode": "+968"
    },
    {
      "code": "PK",
      "name": "Pakistan",
      "phoneCode": "+92"
    },
    {
      "code": "PW",
      "name": "Palau",
      "phoneCode": "+680"
    },
    {
      "code": "PA",
      "name": "Panama",
      "phoneCode": "+507"
    },
    {
      "code": "PG",
      "name": "Papua New Guinea",
      "phoneCode": "+675"
    },
    {
      "code": "PY",
      "name": "Paraguay",
      "phoneCode": "+595"
    },
    {
      "code": "PE",
      "name": "Peru",
      "phoneCode": "+51"
    },
    {
      "code": "PH",
      "name": "Philippines",
      "phoneCode": "+63"
    },
    {
      "code": "PN",
      "name": "Pitcairn Island",
      "phoneCode": "+64"
    },
    {
      "code": "PL",
      "name": "Poland",
      "phoneCode": "+48"
    },
    {
      "code": "PF",
      "name": "Polynesia (French)",
      "phoneCode": "+689"
    },
    {
      "code": "PT",
      "name": "Portugal",
      "phoneCode": "+351"
    },
    {
      "code": "PR",
      "name": "Puerto Rico",
      "phoneCode": "+1787"
    },
    {
      "code": "QA",
      "name": "Qatar",
      "phoneCode": "+974"
    },
    {
      "code": "RE",
      "name": "Reunion (French)",
      "phoneCode": "+262"
    },
    {
      "code": "RO",
      "name": "Romania",
      "phoneCode": "+40"
    },
    {
      "code": "RU",
      "name": "Russian Federation",
      "phoneCode": "+7"
    },
    {
      "code": "RW",
      "name": "Rwanda",
      "phoneCode": "+250"
    },
    {
      "code": "SH",
      "name": "Saint Helena",
      "phoneCode": "+290"
    },
    {
      "code": "KN",
      "name": "Saint Kitts || & || Nevis Anguilla",
      "phoneCode": "+1869"
    },
    {
      "code": "LC",
      "name": "Saint Lucia",
      "phoneCode": "+1758"
    },
    {
      "code": "PM",
      "name": "Saint Pierre and Miquelon",
      "phoneCode": "+508"
    },
    {
      "code": "ST",
      "name": "Saint Tome (Sao Tome) and Principe",
      "phoneCode": "+239"
    },
    {
      "code": "VC",
      "name": "Saint Vincent || & || Grenadines",
      "phoneCode": "+1784"
    },
    {
      "code": "WS",
      "name": "Samoa",
      "phoneCode": "+685"
    },
    {
      "code": "SM",
      "name": "San Marino",
      "phoneCode": "+378"
    },
    {
      "code": "SA.",
      "name": "Saudi Arabia",
      "phoneCode": "+966"
    },
    {
      "code": "SN",
      "name": "Senegal",
      "phoneCode": "+221"
    },
    {
      "code": "SC",
      "name": "Seychelles",
      "phoneCode": "+248"
    },
    {
      "code": "SL",
      "name": "Sierra Leone",
      "phoneCode": "+232"
    },
    {
      "code": "SG",
      "name": "Singapore",
      "phoneCode": "+65"
    },
    {
      "code": "SK",
      "name": "Slovak Republic",
      "phoneCode": "+421"
    },
    {
      "code": "SI",
      "name": "Slovenia",
      "phoneCode": "+386"
    },
    {
      "code": "SB",
      "name": "Solomon Islands",
      "phoneCode": "+677"
    },
    {
      "code": "SO",
      "name": "Somalia",
      "phoneCode": "+252"
    },
    {
      "code": "ZA",
      "name": "South Africa",
      "phoneCode": "+27"
    },
    {
      "code": "KR",
      "name": "South Korea",
      "phoneCode": "+82"
    },
    {
      "code": "ES",
      "name": "Spain",
      "phoneCode": "+34"
    },
    {
      "code": "LK",
      "name": "Sri Lanka",
      "phoneCode": "+94"
    },
    {
      "code": "SD",
      "name": "Sudan",
      "phoneCode": "+249"
    },
    {
      "code": "SR",
      "name": "Suriname",
      "phoneCode": "+597"
    },
    {
      "code": "SJ",
      "name": "Svalbard and Jan Mayen Islands",
      "phoneCode": "+47"
    },
    {
      "code": "SZ",
      "name": "Swaziland",
      "phoneCode": "+268"
    },
    {
      "code": "SE",
      "name": "Sweden",
      "phoneCode": "+46"
    },
    {
      "code": "CH",
      "name": "Switzerland",
      "phoneCode": "+41"
    },
    {
      "code": "SY",
      "name": "Syria",
      "phoneCode": "+963"
    },
    {
      "code": "TJ",
      "name": "Tadjikistan",
      "phoneCode": "+992"
    },
    {
      "code": "TW",
      "name": "Taiwan",
      "phoneCode": "+886"
    },
    {
      "code": "TZ",
      "name": "Tanzania",
      "phoneCode": "+255"
    },
    {
      "code": "TH",
      "name": "Thailand",
      "phoneCode": "+66"
    },
    {
      "code": "TG",
      "name": "Togo",
      "phoneCode": "+228"
    },
    {
      "code": "TK",
      "name": "Tokelau",
      "phoneCode": "+690"
    },
    {
      "code": "TO",
      "name": "Tonga",
      "phoneCode": "+676"
    },
    {
      "code": "TT",
      "name": "Trinidad and Tobago",
      "phoneCode": "+1868"
    },
    {
      "code": "TN",
      "name": "Tunisia",
      "phoneCode": "+216"
    },
    {
      "code": "TR",
      "name": "Turkey",
      "phoneCode": "+90"
    },
    {
      "code": "TM",
      "name": "Turkmenistan",
      "phoneCode": "+993"
    },
    {
      "code": "TC",
      "name": "Turks and Caicos Islands",
      "phoneCode": "+1649"
    },
    {
      "code": "TV",
      "name": "Tuvalu",
      "phoneCode": "+688"
    },
    {
      "code": "UG",
      "name": "Uganda",
      "phoneCode": "+256"
    },
    {
      "code": "UA",
      "name": "Ukraine",
      "phoneCode": "+380"
    },
    {
      "code": "AE",
      "name": "United Arab Emirates",
      "phoneCode": "+971"
    },
    {
      "code": "UK",
      "name": "United Kingdom",
      "phoneCode": "+44"
    },
    {
      "code": "US",
      "name": "United States",
      "phoneCode": "+1"
    },
    {
      "code": "UY",
      "name": "Uruguay",
      "phoneCode": "+598"
    },
    {
      "code": "UZ",
      "name": "Uzbekistan",
      "phoneCode": "+998"
    },
    {
      "code": "VU",
      "name": "Vanuatu",
      "phoneCode": "+678"
    },
    {
      "code": "VE",
      "name": "Venezuela",
      "phoneCode": "+58"
    },
    {
      "code": "VN",
      "name": "Vietnam",
      "phoneCode": "+84"
    },
    {
      "code": "VG",
      "name": "Virgin Islands (British)",
      "phoneCode": "+1284"
    },
    {
      "code": "WF",
      "name": "Wallis and Futuna Islands",
      "phoneCode": "+681"
    },
    {
      "code": "EH",
      "name": "Western Sahara",
      "phoneCode": "+212"
    },
    {
      "code": "YE",
      "name": "Yemen",
      "phoneCode": "+967"
    },
    {
      "code": "YU",
      "name": "Yugoslavia",
      "phoneCode": "+381"
    },
    {
      "code": "ZM",
      "name": "Zambia",
      "phoneCode": "+260"
    },
    {
      "code": "ZW",
      "name": "Zimbabwe",
      "phoneCode": "+263"
    }
  ],
  "user": null,
  "bookingRequestId": "98440252-b21e-43b3-84c6-f0b2cf9d35a0",
  "qasMobileToken": "ac7fc107-7142-4c32-82a2-9cae16fc4d62",
  "allowedExtraCodes": [
    "LAVB",
    "SOTBT",
    "CHBOX",
    "REDW",
    "WHITW",
    "SPARK",
    "CHOCS"
  ],
  "hideInsuranceBoxOnBookingAmendmentConfirmation": false
}
        };
    });
</script>

    <script type="text/javascript">
    angular.bootstrap(document.getElementById('ibpApp'), ['ibpApp']);
</script>

    

<script type="text/javascript">
    angular.bootstrap(document.getElementById('headerApp'), ['headerApp']);
</script>
    


    
    
    


    <script src="/bundles/js/versa-tag?v=ILeShlB2EebODbPo5k9GLvV7X-b2dBRT3HXuMWEv1H41"></script>

<script id="ebOneTagUrlId" src="https://secure-ds.serving-sys.com/SemiCachedScripts/ebOneTag.js"></script>
<noscript>
    <iframe src="https://bs.serving-sys.com/BurstingPipe?cn=ot&amp;onetagid=3140&amp;ns=1&amp;activityValues=$$Session=[Session]$$&amp;retargetingValues=$$$$&amp;dynamicRetargetingValues=$$$$&amp;acp=$$$$&amp;" style="display:none;width:0px;height:0px"></iframe>
</noscript>
    <script type="text/javascript">
                 var fby = fby || [];
                 fby.push(['showTab', {id: '8363', position: 'right', color: '#012169'}]);
                 (function () {
                     var f = document.createElement('script'); f.type = 'text/javascript'; f.async = true;
                     f.src = '//cdn.feedbackify.com/f.js';
                     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(f, s);
                 })();
                 </script>
<script type="text/javascript">
window.abTestingVariationName = "variation";
</script>
    

<script type="text/javascript">
    function pushToMarketingCloud(){
        _etmc.push(["setOrgId", "100005478"]);
        _etmc.push(["trackPageView"]);
    }

    deferScriptExecution(null, "//100005478.collect.igodigital.com/collect.js", pushToMarketingCloud);
</script>
    <script type="text/javascript">
    $(function () {
        $('.lazy-image').lazy({
            effect: "fadeIn",
            effectTime: 500,
            threshold: 0
        });

        $('.lazy-image-responsive').lazy({
            effect: "fadeIn",
            effectTime: 500,
            threshold: 0
        });
    });
</script>

</body>
</html>