






(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

(function(funcName, baseObj) {
    // The public function name defaults to window.docReady
    // but you can pass in your own object and own function name and those will be used
    // if you want to put them in a different namespace
    funcName = funcName || "docReady";
    baseObj = baseObj || window;
    var readyList = [];
    var readyFired = false;
    var readyEventHandlersInstalled = false;

    // call this when the document is ready
    // this function protects itself against being called more than once
    function ready() {
        if (!readyFired) {
            // this must be set to true before we start calling callbacks
            readyFired = true;
            for (var i = 0; i < readyList.length; i++) {
                // if a callback here happens to add new ready handlers,
                // the docReady() function will see that it already fired
                // and will schedule the callback to run right after
                // this event loop finishes so all handlers will still execute
                // in order and no new ones will be added to the readyList
                // while we are processing the list
                readyList[i].fn.call(window, readyList[i].ctx);
            }
            // allow any closures held by these functions to free
            readyList = [];
        }
    }

    function readyStateChange() {
        if ( document.readyState === "complete" ) {
            ready();
        }
    }

    // This is the one public interface
    // docReady(fn, context);
    // the context argument is optional - if present, it will be passed
    // as an argument to the callback
    baseObj[funcName] = function(callback, context) {
        if (typeof callback !== "function") {
            throw new TypeError("callback for docReady(fn) must be a function");
        }
        // if ready has already fired, then just schedule the callback
        // to fire asynchronously, but right away
        if (readyFired) {
            setTimeout(function() {callback(context);}, 1);
            return;
        } else {
            // add the function and context to the list
            readyList.push({fn: callback, ctx: context});
        }
        // if document already ready to go, schedule the ready function to run
        if (document.readyState === "complete") {
            setTimeout(ready, 1);
        } else if (!readyEventHandlersInstalled) {
            // otherwise if we don't have event handlers installed, install them
            if (document.addEventListener) {
                // first choice is DOMContentLoaded event
                document.addEventListener("DOMContentLoaded", ready, false);
                // backup is window load event
                window.addEventListener("load", ready, false);
            } else {
                // must be IE
                document.attachEvent("onreadystatechange", readyStateChange);
                window.attachEvent("onload", ready);
            }
            readyEventHandlersInstalled = true;
        }
    }
})("docReady", window);


ga('create', 'UA-1859103-1', 'auto');
console.log("GA created");

//Check whether we want to suppress the page view in special cases
docReady( function(){
	if( document.getElementById("noPageTracking") == null){
		ga('require', 'GTM-TM2W2H6');
		console.log("GA required");
		ga('send', 'pageview');
		console.log("Page view sent");
	}
});



Privacy and Cookie Policy | RSPCA




	if (window.Analytics) {
		window._com_liferay_document_library_analytics_isViewFileEntry = false;
	}









	// <![CDATA[
		var Liferay = Liferay || {};

		Liferay.Browser = {
			acceptsGzip: function() {
				return false;
			},

			

			getMajorVersion: function() {
				return 0;
			},

			getRevision: function() {
				return '';
			},
			getVersion: function() {
				return '';
			},

			

			isAir: function() {
				return false;
			},
			isChrome: function() {
				return false;
			},
			isEdge: function() {
				return false;
			},
			isFirefox: function() {
				return false;
			},
			isGecko: function() {
				return false;
			},
			isIe: function() {
				return false;
			},
			isIphone: function() {
				return false;
			},
			isLinux: function() {
				return false;
			},
			isMac: function() {
				return false;
			},
			isMobile: function() {
				return false;
			},
			isMozilla: function() {
				return false;
			},
			isOpera: function() {
				return false;
			},
			isRtf: function() {
				return false;
			},
			isSafari: function() {
				return false;
			},
			isSun: function() {
				return false;
			},
			isWebKit: function() {
				return false;
			},
			isWindows: function() {
				return false;
			}
		};

		Liferay.Data = Liferay.Data || {};

		Liferay.Data.ICONS_INLINE_SVG = true;

		Liferay.Data.NAV_SELECTOR = '#navigation';

		Liferay.Data.NAV_SELECTOR_MOBILE = '#navigationCollapse';

		Liferay.Data.isCustomizationView = function() {
			return false;
		};

		Liferay.Data.notices = [
			null

			

			
		];

		Liferay.PortletKeys = {
			DOCUMENT_LIBRARY: 'com_liferay_document_library_web_portlet_DLPortlet',
			DYNAMIC_DATA_MAPPING: 'com_liferay_dynamic_data_mapping_web_portlet_DDMPortlet',
			ITEM_SELECTOR: 'com_liferay_item_selector_web_portlet_ItemSelectorPortlet'
		};

		Liferay.PropsValues = {
			JAVASCRIPT_SINGLE_PAGE_APPLICATION_TIMEOUT: 0,
			NTLM_AUTH_ENABLED: false,
			UPLOAD_SERVLET_REQUEST_IMPL_MAX_SIZE: 104857600
		};

		Liferay.ThemeDisplay = {

			

			
				getLayoutId: function() {
					return '472';
				},

				

				getLayoutRelativeControlPanelURL: function() {
					return '/group/rspca/~/control_panel/manage';
				},

				getLayoutRelativeURL: function() {
					return '/utilities/privacy';
				},
				getLayoutURL: function() {
					return 'https://www.rspca.org.uk/utilities/privacy';
				},
				getParentLayoutId: function() {
					return '66';
				},
				isControlPanel: function() {
					return false;
				},
				isPrivateLayout: function() {
					return 'false';
				},
				isVirtualLayout: function() {
					return false;
				},
			

			getBCP47LanguageId: function() {
				return 'en-US';
			},
			getCanonicalURL: function() {

				

				return 'https://www.rspca.org.uk/utilities/privacy';
			},
			getCDNBaseURL: function() {
				return 'https://www.rspca.org.uk';
			},
			getCDNDynamicResourcesHost: function() {
				return '';
			},
			getCDNHost: function() {
				return '';
			},
			getCompanyGroupId: function() {
				return '260730';
			},
			getCompanyId: function() {
				return '10108';
			},
			getDefaultLanguageId: function() {
				return 'en_US';
			},
			getDoAsUserIdEncoded: function() {
				return '';
			},
			getLanguageId: function() {
				return 'en_US';
			},
			getParentGroupId: function() {
				return '1494939';
			},
			getPathContext: function() {
				return '';
			},
			getPathImage: function() {
				return '/image';
			},
			getPathJavaScript: function() {
				return '/o/frontend-js-web';
			},
			getPathMain: function() {
				return '/c';
			},
			getPathThemeImages: function() {
				return 'https://www.rspca.org.uk/o/ptl2017Theme/images';
			},
			getPathThemeRoot: function() {
				return '/o/ptl2017Theme';
			},
			getPlid: function() {
				return '1571256';
			},
			getPortalURL: function() {
				return 'https://www.rspca.org.uk';
			},
			getScopeGroupId: function() {
				return '1494939';
			},
			getScopeGroupIdOrLiveGroupId: function() {
				return '1494939';
			},
			getSessionId: function() {
				return '';
			},
			getSiteAdminURL: function() {
				return 'https://www.rspca.org.uk/group/rspca/~/control_panel/manage?p_p_lifecycle=0&p_p_state=maximized&p_p_mode=view';
			},
			getSiteGroupId: function() {
				return '1494939';
			},
			getURLControlPanel: function() {
				return '/group/control_panel?refererPlid=1571256';
			},
			getURLHome: function() {
				return 'https\x3a\x2f\x2fwww\x2erspca\x2eorg\x2euk\x2fhome';
			},
			getUserId: function() {
				return '10110';
			},
			getUserName: function() {
				return '';
			},
			isAddSessionIdToURL: function() {
				return false;
			},
			isFreeformLayout: function() {
				return false;
			},
			isImpersonated: function() {
				return false;
			},
			isSignedIn: function() {
				return false;
			},
			isStateExclusive: function() {
				return false;
			},
			isStateMaximized: function() {
				return false;
			},
			isStatePopUp: function() {
				return false;
			}
		};

		var themeDisplay = Liferay.ThemeDisplay;

		Liferay.AUI = {

			

			getAvailableLangPath: function() {
				return 'available_languages.jsp?browserId=other&themeId=mainSiteTheme_WAR_ptl2017Theme&colorSchemeId=01&minifierType=js&languageId=en_US&b=7010&t=1547131173610';
			},
			getCombine: function() {
				return true;
			},
			getComboPath: function() {
				return '/combo/?browserId=other&minifierType=&languageId=en_US&b=7010&t=1547131173610&';
			},
			getDateFormat: function() {
				return '%m/%d/%Y';
			},
			getEditorCKEditorPath: function() {
				return '/o/frontend-editor-ckeditor-web';
			},
			getFilter: function() {
				var filter = 'raw';

				
					
						filter = 'min';
					
					

				return filter;
			},
			getFilterConfig: function() {
				var instance = this;

				var filterConfig = null;

				if (!instance.getCombine()) {
					filterConfig = {
						replaceStr: '.js' + instance.getStaticResourceURLParams(),
						searchExp: '\\.js$'
					};
				}

				return filterConfig;
			},
			getJavaScriptRootPath: function() {
				return '/o/frontend-js-web';
			},
			getLangPath: function() {
				return 'aui_lang.jsp?browserId=other&themeId=mainSiteTheme_WAR_ptl2017Theme&colorSchemeId=01&minifierType=js&languageId=en_US&b=7010&t=1547131173610';
			},
			getPortletRootPath: function() {
				return '/html/portlet';
			},
			getStaticResourceURLParams: function() {
				return '?browserId=other&minifierType=&languageId=en_US&b=7010&t=1547131173610';
			}
		};

		Liferay.authToken = 'aoDHHj8e';

		

		Liferay.currentURL = '\x2futilities\x2fprivacy';
		Liferay.currentURLEncoded = '\x252Futilities\x252Fprivacy';
	// ]]>





	// <![CDATA[
		
			
				
		

		

		
	// ]]>




		#dynDonationAsks label {
    display: inline;
}
	





// <![CDATA[
Liferay.on(
	'ddmFieldBlur', function(event) {
		if (window.Analytics) {
			Analytics.send(
				'fieldBlurred',
				'Form',
				{
					fieldName: event.fieldName,
					focusDuration: event.focusDuration,
					formId: event.formId,
					page: event.page - 1
				}
			);
		}
	}
);

Liferay.on(
	'ddmFieldFocus', function(event) {
		if (window.Analytics) {
			Analytics.send(
				'fieldFocused',
				'Form',
				{
					fieldName: event.fieldName,
					formId: event.formId,
					page: event.page - 1
				}
			);
		}
	}
);

Liferay.on(
	'ddmFormPageShow', function(event) {
		if (window.Analytics) {
			Analytics.send(
				'pageViewed',
				'Form',
				{
					formId: event.formId,
					page: event.page,
					title: event.title
				}
			);
		}
	}
);

Liferay.on(
	'ddmFormSubmit', function(event) {
		if (window.Analytics) {
			Analytics.send(
				'formSubmitted',
				'Form',
				{
					formId: event.formId
				}
			);
		}
	}
);

Liferay.on(
	'ddmFormView', function(event) {
		if (window.Analytics) {
			Analytics.send(
				'formViewed',
				'Form',
				{
					formId: event.formId,
					title: event.title
				}
			);
		}
	}
);
// ]]>



  !function(f,b,e,v,n,t,s){
  	if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script', 'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '1579606832323757');
  fbq('track', 'PageView');








  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'AW-1007595157');
  gtag('config', 'DC-6522851')

 



















var _tvq = window._tvq = window._tvq || [];
(function() {
var u = (("https:" == document.location.protocol) ? "https://collector-1412.tvsquared.com/" : "http://collector-1412.tvsquared.com/");
_tvq.push(['setSiteId', "TV-81548172-1"]);
_tvq.push(['setTrackerUrl', u + 'tv2track.php']);
_tvq.push([function()

{ this.deleteCustomVariable(5, 'page') }
]);
_tvq.push(['trackPageView']);
var d = document,
g = d.createElement('script'),
s = d.getElementsByTagName('script')[0];
g.type = 'text/javascript';
g.defer = true;
g.async = true;
g.src = u + 'tv2track.js';
s.parentNode.insertBefore(g, s);
})();

 


















Home




Find a pet






Rehome a pet




Rehome a horse




Foster an animal




Advice for adopters






Advice and welfare






Pets




Lab animals




Farm animals




Wildlife




Litter




Seasonal advice




Diseases




Performing animals






Get involved






Volunteer




Campaign




Donate




Win




Fundraise




Young people




Membership




Events




Businesses




Honours






What we do






Your local RSPCA




End cruelty




Care for animals




Education




Latest




Who we are




How we work






Shop online






Online shop




Pet insurance




Pet friendly holidays




Shop and donate







Report cruelty
Donate

Ask us a question
Your local RSPCA
my RSPCA




Ask us a question
Your local RSPCA
Report cruelty
Donate




// <![CDATA[ var addthis_config = {data_ga_property: 'UA-1859103-1',data_track_clickback:true}; // ]]>

Share this...














Your information




Cookies










 



 


 
























Privacy notice


We're committed to respecting your privacy and keeping your personal information safe. This privacy policy tells you what to expect when the Royal Society for the Prevention of Cruelty to Animals (RSPCA) collects personal information.
In particular, this notice tells you about how we use your information and:


Share this...



























 
Who we are
This privacy notice covers all personal data that is gathered by the Royal Society for the Prevention of Cruelty to Animals (RSPCA), charity number 219099.
 
 
What personal information we collect about you
We may collect personal information about you. We do not usually collect sensitive personal information about our supporters unless there is a clear reason for doing so.
 
 
Children and vulnerable persons
We're committed to protecting the safety and privacy of children and vulnerable people.
 
 
Telling us when things change
You can change your mind at any time about how we contact you or ask us to stop contacting you.
 
 
Access to your information and correction
We want to make sure that your personal information is accurate and up to date. 
 




















 















How we may use your information
We will not rent, swap or sell your information to other organisations for marketing purposes.









 















Cookies
Cookies help us to assess the effectiveness of our website and can provide useful information.









 















Telling us when things change
You can change your mind at any time about how we contact you or ask us to stop contacting you.









 


 


 














Print this page







 


















Your information






Cookies










 




 


 






 




How we help

129,602
Animals were rescued and collected last year


Get in touch


Ask a question
Find your local RSPCA
Contact us
Report cruelty



Our charity


Media centre
Science
RSPCA Assured
Education



Follow us

















© RSPCA 2019. All rights reserved. The RSPCA helps animals in England and Wales. Registered charity no.219099. We're registered with the Fundraising Regulator.



Jobs
Contact us
Terms and conditions
Site map
Privacy and cookies
Accessibility
Modern slavery


 

// <![CDATA[

	
		

			

			
		
	

	Liferay.BrowserSelectors.run();

// ]]>


	// <![CDATA[

		

		Liferay.currentURL = '\x2futilities\x2fprivacy';
		Liferay.currentURLEncoded = '\x252Futilities\x252Fprivacy';

	// ]]>


		// <![CDATA[
			

			
		// ]]>
	

// <![CDATA[

	
		Liferay.Portlet.register('fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_kvoyUXufgPJi');
	

	Liferay.Portlet.onLoad(
		{
			canEditTitle: false,
			columnPos: 2,
			isStatic: 'end',
			namespacedId: 'p_p_id_fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_kvoyUXufgPJi_',
			portletId: 'fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_kvoyUXufgPJi',
			refreshURL: '\x2fc\x2fportal\x2frender_portlet\x3fp_l_id\x3d1571256\x26p_p_id\x3dfatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_kvoyUXufgPJi\x26p_p_lifecycle\x3d0\x26p_t_lifecycle\x3d0\x26p_p_state\x3dnormal\x26p_p_mode\x3dview\x26p_p_col_id\x3dcolumn-2\x26p_p_col_pos\x3d2\x26p_p_col_count\x3d3\x26p_p_isolated\x3d1\x26currentURL\x3d\x252Futilities\x252Fprivacy',
			refreshURLData: {}
		}
	);

	if (Liferay.Data.ICONS_INLINE_SVG) {
		svg4everybody(
			{
				attributeName: 'data-href',
				polyfill: true
			}
		);
	}

	
		Liferay.Portlet.register('fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_cDlEsAlf3fAG');
	

	Liferay.Portlet.onLoad(
		{
			canEditTitle: false,
			columnPos: 0,
			isStatic: 'end',
			namespacedId: 'p_p_id_fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_cDlEsAlf3fAG_',
			portletId: 'fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_cDlEsAlf3fAG',
			refreshURL: '\x2fc\x2fportal\x2frender_portlet\x3fp_l_id\x3d1571256\x26p_p_id\x3dfatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_cDlEsAlf3fAG\x26p_p_lifecycle\x3d0\x26p_t_lifecycle\x3d0\x26p_p_state\x3dnormal\x26p_p_mode\x3dview\x26p_p_col_id\x3dcolumn-6\x26p_p_col_pos\x3d0\x26p_p_col_count\x3d1\x26p_p_isolated\x3d1\x26currentURL\x3d\x252Futilities\x252Fprivacy',
			refreshURLData: {}
		}
	);

	
		Liferay.Portlet.register('fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_RKpWg2hRxHyO');
	

	Liferay.Portlet.onLoad(
		{
			canEditTitle: false,
			columnPos: 0,
			isStatic: 'end',
			namespacedId: 'p_p_id_fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_RKpWg2hRxHyO_',
			portletId: 'fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_RKpWg2hRxHyO',
			refreshURL: '\x2fc\x2fportal\x2frender_portlet\x3fp_l_id\x3d1571256\x26p_p_id\x3dfatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_RKpWg2hRxHyO\x26p_p_lifecycle\x3d0\x26p_t_lifecycle\x3d0\x26p_p_state\x3dnormal\x26p_p_mode\x3dview\x26p_p_col_id\x3dcolumn-4\x26p_p_col_pos\x3d0\x26p_p_col_count\x3d1\x26p_p_isolated\x3d1\x26currentURL\x3d\x252Futilities\x252Fprivacy',
			refreshURLData: {}
		}
	);

	
		Liferay.Portlet.register('print_WAR_ptlFatwireArticlePortlets_INSTANCE_tA6F');
	

	Liferay.Portlet.onLoad(
		{
			canEditTitle: false,
			columnPos: 0,
			isStatic: 'end',
			namespacedId: 'p_p_id_print_WAR_ptlFatwireArticlePortlets_INSTANCE_tA6F_',
			portletId: 'print_WAR_ptlFatwireArticlePortlets_INSTANCE_tA6F',
			refreshURL: '\x2fc\x2fportal\x2frender_portlet\x3fp_l_id\x3d1571256\x26p_p_id\x3dprint_WAR_ptlFatwireArticlePortlets_INSTANCE_tA6F\x26p_p_lifecycle\x3d0\x26p_t_lifecycle\x3d0\x26p_p_state\x3dnormal\x26p_p_mode\x3dview\x26p_p_col_id\x3dcolumn-7\x26p_p_col_pos\x3d0\x26p_p_col_count\x3d1\x26p_p_isolated\x3d1\x26currentURL\x3d\x252Futilities\x252Fprivacy',
			refreshURLData: {}
		}
	);

	
		Liferay.Portlet.register('fatwireArticle_WAR_ptlFatwireArticlePortlets');
	

	Liferay.Portlet.onLoad(
		{
			canEditTitle: false,
			columnPos: 0,
			isStatic: 'end',
			namespacedId: 'p_p_id_fatwireArticle_WAR_ptlFatwireArticlePortlets_',
			portletId: 'fatwireArticle_WAR_ptlFatwireArticlePortlets',
			refreshURL: '\x2fc\x2fportal\x2frender_portlet\x3fp_l_id\x3d1571256\x26p_p_id\x3dfatwireArticle_WAR_ptlFatwireArticlePortlets\x26p_p_lifecycle\x3d0\x26p_t_lifecycle\x3d0\x26p_p_state\x3dnormal\x26p_p_mode\x3dview\x26p_p_col_id\x3dcolumn-2\x26p_p_col_pos\x3d0\x26p_p_col_count\x3d3\x26p_p_isolated\x3d1\x26currentURL\x3d\x252Futilities\x252Fprivacy',
			refreshURLData: {}
		}
	);

	
		Liferay.Portlet.register('fatwireListing_WAR_ptlFatwireArticlePortlets_INSTANCE_4Ioi');
	

	Liferay.Portlet.onLoad(
		{
			canEditTitle: false,
			columnPos: 1,
			isStatic: 'end',
			namespacedId: 'p_p_id_fatwireListing_WAR_ptlFatwireArticlePortlets_INSTANCE_4Ioi_',
			portletId: 'fatwireListing_WAR_ptlFatwireArticlePortlets_INSTANCE_4Ioi',
			refreshURL: '\x2fc\x2fportal\x2frender_portlet\x3fp_l_id\x3d1571256\x26p_p_id\x3dfatwireListing_WAR_ptlFatwireArticlePortlets_INSTANCE_4Ioi\x26p_p_lifecycle\x3d0\x26p_t_lifecycle\x3d0\x26p_p_state\x3dnormal\x26p_p_mode\x3dview\x26p_p_col_id\x3dcolumn-2\x26p_p_col_pos\x3d1\x26p_p_col_count\x3d3\x26p_p_isolated\x3d1\x26currentURL\x3d\x252Futilities\x252Fprivacy',
			refreshURLData: {}
		}
	);

	
		Liferay.Portlet.register('fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_PBeixnJKoHtf');
	

	Liferay.Portlet.onLoad(
		{
			canEditTitle: false,
			columnPos: 0,
			isStatic: 'end',
			namespacedId: 'p_p_id_fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_PBeixnJKoHtf_',
			portletId: 'fatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_PBeixnJKoHtf',
			refreshURL: '\x2fc\x2fportal\x2frender_portlet\x3fp_l_id\x3d1571256\x26p_p_id\x3dfatwireContent_WAR_ptlFatwireArticlePortlets_INSTANCE_PBeixnJKoHtf\x26p_p_lifecycle\x3d0\x26p_t_lifecycle\x3d0\x26p_p_state\x3dnormal\x26p_p_mode\x3dview\x26p_p_col_id\x3dcolumn-5\x26p_p_col_pos\x3d0\x26p_p_col_count\x3d1\x26p_p_isolated\x3d1\x26currentURL\x3d\x252Futilities\x252Fprivacy',
			refreshURLData: {}
		}
	);

	
		Liferay.Portlet.register('megaNav_WAR_ptl2014NavigationPortlet_INSTANCE_Z5Xg');
	

	Liferay.Portlet.onLoad(
		{
			canEditTitle: false,
			columnPos: 0,
			isStatic: 'end',
			namespacedId: 'p_p_id_megaNav_WAR_ptl2014NavigationPortlet_INSTANCE_Z5Xg_',
			portletId: 'megaNav_WAR_ptl2014NavigationPortlet_INSTANCE_Z5Xg',
			refreshURL: '\x2fc\x2fportal\x2frender_portlet\x3fp_l_id\x3d1571256\x26p_p_id\x3dmegaNav_WAR_ptl2014NavigationPortlet_INSTANCE_Z5Xg\x26p_p_lifecycle\x3d0\x26p_t_lifecycle\x3d0\x26p_p_state\x3dnormal\x26p_p_mode\x3dview\x26p_p_col_id\x3dcolumn-3\x26p_p_col_pos\x3d0\x26p_p_col_count\x3d1\x26p_p_isolated\x3d1\x26currentURL\x3d\x252Futilities\x252Fprivacy',
			refreshURLData: {}
		}
	);
Liferay.Loader.require('metal-dom/src/all/dom', 'metal-uri/src/Uri', function(metalDomSrcAllDom, metalUriSrcUri) {
(function(){
var dom = metalDomSrcAllDom;
var metalUriSrcUri1 = metalUriSrcUri;
(function() {var $ = AUI.$;var _ = AUI._;
	var Uri = metalUriSrcUri.default;
	var pathnameRegexp = /\/documents\/(\d+)\/(\d+)\/(.+)\/(.+)/;

	var downloadClickHandler = dom.delegate(
		document.body,
		'click',
		'a',
		function(event) {
			if (window.Analytics) {
				var anchor = event.delegateTarget;
				var uri = new Uri(anchor.href);

				var match = pathnameRegexp.exec(uri.getPathname());

				if (match) {
					Analytics.send(
						'documentDownloaded',
						'Document',
						{
							groupId: match[1],
							fileEntryUUID: match[4],
							preview: !!window._com_liferay_document_library_analytics_isViewFileEntry,
							title: decodeURIComponent(match[3].replace(/\+/ig, ' ')),
							version: uri.getParameterValue('version')
						}
					);
				}
			}
		}
	);

	var onDestroyPortlet = function() {
		downloadClickHandler.removeListener()
		Liferay.detach('destroyPortlet', onDestroyPortlet);
	}

	Liferay.on('destroyPortlet', onDestroyPortlet);
})();})();
},
function(error) {
console.error(error);
});AUI().use('aui-tooltip', 'liferay-menu', 'liferay-notice', 'aui-base', 'liferay-session', 'liferay-poller', function(A) {(function() {var $ = AUI.$;var _ = AUI._;
	if (A.UA.mobile) {
		Liferay.Util.addInputCancel();
	}
})();(function() {var $ = AUI.$;var _ = AUI._;
	if (!Liferay.Data.LFR_PORTAL_TOOLTIP) {
		var triggerShowEvent = ['mouseenter', 'MSPointerDown', 'touchstart'];

		if (A.UA.ios) {
			triggerShowEvent = ['touchstart'];
		}

		Liferay.Data.LFR_PORTAL_TOOLTIP = new A.TooltipDelegate(
			{
				constrain: true,
				opacity: 1,
				trigger: '.lfr-portal-tooltip',
				triggerHideEvent: ['click', 'mouseleave', 'MSPointerUp', 'touchend'],
				triggerShowEvent: triggerShowEvent,
				visible: false,
				zIndex: Liferay.zIndex.TOOLTIP
			}
		);
	}
})();(function() {var $ = AUI.$;var _ = AUI._;
	new Liferay.Menu();

	var liferayNotices = Liferay.Data.notices;

	for (var i = 1; i < liferayNotices.length; i++) {
		new Liferay.Notice(liferayNotices[i]);
	}

	
})();(function() {var $ = AUI.$;var _ = AUI._;
			Liferay.Session = new Liferay.SessionBase(
				{
					autoExtend: true,
					redirectOnExpire: false,
					redirectUrl: 'https\x3a\x2f\x2fwww\x2erspca\x2eorg\x2euk\x2fhome',
					sessionLength: 1800,
					warningLength: 0
				}
			);

			
		})();});
// ]]>



	// <![CDATA[
		AUI().use(
			'aui-base',
			function(A) {
				var frameElement = window.frameElement;

				if (frameElement && frameElement.getAttribute('id') === 'simulationDeviceIframe') {
					A.getBody().addClass('lfr-has-simulation-panel');
				}
			}
		);
	// ]]>

	var PATH_PORTLET_CONFIGURATION_CSS_WEB = '/o/portlet-configuration-css-web';

	AUI().applyConfig(
		{
			groups: {
				portlet_css: {
					base: PATH_PORTLET_CONFIGURATION_CSS_WEB + '/js/',
					modules: {
						'liferay-look-and-feel': {
							path: 'look_and_feel.js',
							requires: [
								'aui-color-picker-popover',
								'aui-io-plugin-deprecated',
								'aui-io-request',
								'aui-tabview',
								'liferay-portlet-url',
								'liferay-util-window',
								'liferay-widget-zindex'
							]
						}
					},
					root: PATH_PORTLET_CONFIGURATION_CSS_WEB + '/js/'
				}
			}
		}
	);

	Liferay.provide(
		Liferay.Portlet,
		'loadCSSEditor',
		function(portletId, baseActionURL, baseRenderURL, baseResourceURL) {
			Liferay.PortletCSS.init(portletId, baseActionURL, baseRenderURL, baseResourceURL);
		},
		['liferay-look-and-feel']
	);




_linkedin_data_partner_id = "222170";


(function(){var s = document.getElementsByTagName("script")[0];
var b = document.createElement("script");
b.type = "text/javascript";b.async = true;
b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js";
s.parentNode.insertBefore(b, s);})();






